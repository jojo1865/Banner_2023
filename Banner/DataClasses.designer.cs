#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Banner
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_Banner")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertZipCode(ZipCode instance);
    partial void UpdateZipCode(ZipCode instance);
    partial void DeleteZipCode(ZipCode instance);
    partial void InsertAccount_Bank(Account_Bank instance);
    partial void UpdateAccount_Bank(Account_Bank instance);
    partial void DeleteAccount_Bank(Account_Bank instance);
    partial void InsertAccount_Note(Account_Note instance);
    partial void UpdateAccount_Note(Account_Note instance);
    partial void DeleteAccount_Note(Account_Note instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertBaptized(Baptized instance);
    partial void UpdateBaptized(Baptized instance);
    partial void DeleteBaptized(Baptized instance);
    partial void InsertChange_OI_Order(Change_OI_Order instance);
    partial void UpdateChange_OI_Order(Change_OI_Order instance);
    partial void DeleteChange_OI_Order(Change_OI_Order instance);
    partial void InsertCommunity(Community instance);
    partial void UpdateCommunity(Community instance);
    partial void DeleteCommunity(Community instance);
    partial void InsertContect(Contect instance);
    partial void UpdateContect(Contect instance);
    partial void DeleteContect(Contect instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCourse_Category(Course_Category instance);
    partial void UpdateCourse_Category(Course_Category instance);
    partial void DeleteCourse_Category(Course_Category instance);
    partial void InsertCourse_Rule(Course_Rule instance);
    partial void UpdateCourse_Rule(Course_Rule instance);
    partial void DeleteCourse_Rule(Course_Rule instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertEvent_Category(Event_Category instance);
    partial void UpdateEvent_Category(Event_Category instance);
    partial void DeleteEvent_Category(Event_Category instance);
    partial void InsertEvent_Join_Detail(Event_Join_Detail instance);
    partial void UpdateEvent_Join_Detail(Event_Join_Detail instance);
    partial void DeleteEvent_Join_Detail(Event_Join_Detail instance);
    partial void InsertEvent_Join_Header(Event_Join_Header instance);
    partial void UpdateEvent_Join_Header(Event_Join_Header instance);
    partial void DeleteEvent_Join_Header(Event_Join_Header instance);
    partial void InsertFamily(Family instance);
    partial void UpdateFamily(Family instance);
    partial void DeleteFamily(Family instance);
    partial void InsertJoinGroupWish(JoinGroupWish instance);
    partial void UpdateJoinGroupWish(JoinGroupWish instance);
    partial void DeleteJoinGroupWish(JoinGroupWish instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertM_ML_Account(M_ML_Account instance);
    partial void UpdateM_ML_Account(M_ML_Account instance);
    partial void DeleteM_ML_Account(M_ML_Account instance);
    partial void InsertM_O_Account(M_O_Account instance);
    partial void UpdateM_O_Account(M_O_Account instance);
    partial void DeleteM_O_Account(M_O_Account instance);
    partial void InsertM_OI2_Account(M_OI2_Account instance);
    partial void UpdateM_OI2_Account(M_OI2_Account instance);
    partial void DeleteM_OI2_Account(M_OI2_Account instance);
    partial void InsertM_OJT_Account(M_OJT_Account instance);
    partial void UpdateM_OJT_Account(M_OJT_Account instance);
    partial void DeleteM_OJT_Account(M_OJT_Account instance);
    partial void InsertM_Product_PayType(M_Product_PayType instance);
    partial void UpdateM_Product_PayType(M_Product_PayType instance);
    partial void DeleteM_Product_PayType(M_Product_PayType instance);
    partial void InsertM_Product_Teacher(M_Product_Teacher instance);
    partial void UpdateM_Product_Teacher(M_Product_Teacher instance);
    partial void DeleteM_Product_Teacher(M_Product_Teacher instance);
    partial void InsertM_Role_Account(M_Role_Account instance);
    partial void UpdateM_Role_Account(M_Role_Account instance);
    partial void DeleteM_Role_Account(M_Role_Account instance);
    partial void InsertM_Role_Menu(M_Role_Menu instance);
    partial void UpdateM_Role_Menu(M_Role_Menu instance);
    partial void DeleteM_Role_Menu(M_Role_Menu instance);
    partial void InsertMeeting_Location(Meeting_Location instance);
    partial void UpdateMeeting_Location(Meeting_Location instance);
    partial void DeleteMeeting_Location(Meeting_Location instance);
    partial void InsertMeeting_Location_Set(Meeting_Location_Set instance);
    partial void UpdateMeeting_Location_Set(Meeting_Location_Set instance);
    partial void DeleteMeeting_Location_Set(Meeting_Location_Set instance);
    partial void InsertMeeting_Location_Used(Meeting_Location_Used instance);
    partial void UpdateMeeting_Location_Used(Meeting_Location_Used instance);
    partial void DeleteMeeting_Location_Used(Meeting_Location_Used instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertOrder_Header(Order_Header instance);
    partial void UpdateOrder_Header(Order_Header instance);
    partial void DeleteOrder_Header(Order_Header instance);
    partial void InsertOrder_Join(Order_Join instance);
    partial void UpdateOrder_Join(Order_Join instance);
    partial void DeleteOrder_Join(Order_Join instance);
    partial void InsertOrder_Paid(Order_Paid instance);
    partial void UpdateOrder_Paid(Order_Paid instance);
    partial void DeleteOrder_Paid(Order_Paid instance);
    partial void InsertOrder_PaidDetail(Order_PaidDetail instance);
    partial void UpdateOrder_PaidDetail(Order_PaidDetail instance);
    partial void DeleteOrder_PaidDetail(Order_PaidDetail instance);
    partial void InsertOrder_Product(Order_Product instance);
    partial void UpdateOrder_Product(Order_Product instance);
    partial void DeleteOrder_Product(Order_Product instance);
    partial void InsertOrganize(Organize instance);
    partial void UpdateOrganize(Organize instance);
    partial void DeleteOrganize(Organize instance);
    partial void InsertOrganizeInfo(OrganizeInfo instance);
    partial void UpdateOrganizeInfo(OrganizeInfo instance);
    partial void DeleteOrganizeInfo(OrganizeInfo instance);
    partial void InsertOrganizeJobType(OrganizeJobType instance);
    partial void UpdateOrganizeJobType(OrganizeJobType instance);
    partial void DeleteOrganizeJobType(OrganizeJobType instance);
    partial void InsertPayType(PayType instance);
    partial void UpdatePayType(PayType instance);
    partial void DeletePayType(PayType instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProduct_Class(Product_Class instance);
    partial void UpdateProduct_Class(Product_Class instance);
    partial void DeleteProduct_Class(Product_Class instance);
    partial void InsertProduct_ClassTime(Product_ClassTime instance);
    partial void UpdateProduct_ClassTime(Product_ClassTime instance);
    partial void DeleteProduct_ClassTime(Product_ClassTime instance);
    partial void InsertProduct_File(Product_File instance);
    partial void UpdateProduct_File(Product_File instance);
    partial void DeleteProduct_File(Product_File instance);
    partial void InsertProduct_Rule(Product_Rule instance);
    partial void UpdateProduct_Rule(Product_Rule instance);
    partial void DeleteProduct_Rule(Product_Rule instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStaff_Category(Staff_Category instance);
    partial void UpdateStaff_Category(Staff_Category instance);
    partial void DeleteStaff_Category(Staff_Category instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertToken_Check(Token_Check instance);
    partial void UpdateToken_Check(Token_Check instance);
    partial void DeleteToken_Check(Token_Check instance);
    partial void InsertM_OI_Coupon(M_OI_Coupon instance);
    partial void UpdateM_OI_Coupon(M_OI_Coupon instance);
    partial void DeleteM_OI_Coupon(M_OI_Coupon instance);
    partial void InsertCoupon_Rule(Coupon_Rule instance);
    partial void UpdateCoupon_Rule(Coupon_Rule instance);
    partial void DeleteCoupon_Rule(Coupon_Rule instance);
    partial void InsertCoupon_Header(Coupon_Header instance);
    partial void UpdateCoupon_Header(Coupon_Header instance);
    partial void DeleteCoupon_Header(Coupon_Header instance);
    partial void InsertM_Staff_Account(M_Staff_Account instance);
    partial void UpdateM_Staff_Account(M_Staff_Account instance);
    partial void DeleteM_Staff_Account(M_Staff_Account instance);
    partial void InsertAccount_Performance(Account_Performance instance);
    partial void UpdateAccount_Performance(Account_Performance instance);
    partial void DeleteAccount_Performance(Account_Performance instance);
    partial void InsertAccount_Spiritual(Account_Spiritual instance);
    partial void UpdateAccount_Spiritual(Account_Spiritual instance);
    partial void DeleteAccount_Spiritual(Account_Spiritual instance);
    partial void InsertLog_BusinessType_Account(Log_BusinessType_Account instance);
    partial void UpdateLog_BusinessType_Account(Log_BusinessType_Account instance);
    partial void DeleteLog_BusinessType_Account(Log_BusinessType_Account instance);
    partial void InsertLog_BusinessType_Header(Log_BusinessType_Header instance);
    partial void UpdateLog_BusinessType_Header(Log_BusinessType_Header instance);
    partial void DeleteLog_BusinessType_Header(Log_BusinessType_Header instance);
    partial void InsertM_OI_Account(M_OI_Account instance);
    partial void UpdateM_OI_Account(M_OI_Account instance);
    partial void DeleteM_OI_Account(M_OI_Account instance);
    partial void InsertLog_OrganizeInfo_ACID(Log_OrganizeInfo_ACID instance);
    partial void UpdateLog_OrganizeInfo_ACID(Log_OrganizeInfo_ACID instance);
    partial void DeleteLog_OrganizeInfo_ACID(Log_OrganizeInfo_ACID instance);
    partial void InsertCoupon_Account(Coupon_Account instance);
    partial void UpdateCoupon_Account(Coupon_Account instance);
    partial void DeleteCoupon_Account(Coupon_Account instance);
    partial void InsertMessage_Target(Message_Target instance);
    partial void UpdateMessage_Target(Message_Target instance);
    partial void DeleteMessage_Target(Message_Target instance);
    partial void InsertM_MH_Account(M_MH_Account instance);
    partial void UpdateM_MH_Account(M_MH_Account instance);
    partial void DeleteM_MH_Account(M_MH_Account instance);
    partial void InsertMessage_Header(Message_Header instance);
    partial void UpdateMessage_Header(Message_Header instance);
    partial void DeleteMessage_Header(Message_Header instance);
    #endregion
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Account
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<ZipCode> ZipCode
		{
			get
			{
				return this.GetTable<ZipCode>();
			}
		}
		
		public System.Data.Linq.Table<Account_Bank> Account_Bank
		{
			get
			{
				return this.GetTable<Account_Bank>();
			}
		}
		
		public System.Data.Linq.Table<Account_Note> Account_Note
		{
			get
			{
				return this.GetTable<Account_Note>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Bank
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<Baptized> Baptized
		{
			get
			{
				return this.GetTable<Baptized>();
			}
		}
		
		public System.Data.Linq.Table<Change_OI_Order> Change_OI_Order
		{
			get
			{
				return this.GetTable<Change_OI_Order>();
			}
		}
		
		public System.Data.Linq.Table<Community> Community
		{
			get
			{
				return this.GetTable<Community>();
			}
		}
		
		public System.Data.Linq.Table<Contect> Contect
		{
			get
			{
				return this.GetTable<Contect>();
			}
		}
		
		public System.Data.Linq.Table<Course> Course
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Course_Category> Course_Category
		{
			get
			{
				return this.GetTable<Course_Category>();
			}
		}
		
		public System.Data.Linq.Table<Course_Rule> Course_Rule
		{
			get
			{
				return this.GetTable<Course_Rule>();
			}
		}
		
		public System.Data.Linq.Table<Event> Event
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Event_Category> Event_Category
		{
			get
			{
				return this.GetTable<Event_Category>();
			}
		}
		
		public System.Data.Linq.Table<Event_Join_Detail> Event_Join_Detail
		{
			get
			{
				return this.GetTable<Event_Join_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Event_Join_Header> Event_Join_Header
		{
			get
			{
				return this.GetTable<Event_Join_Header>();
			}
		}
		
		public System.Data.Linq.Table<Family> Family
		{
			get
			{
				return this.GetTable<Family>();
			}
		}
		
		public System.Data.Linq.Table<JoinGroupWish> JoinGroupWish
		{
			get
			{
				return this.GetTable<JoinGroupWish>();
			}
		}
		
		public System.Data.Linq.Table<Location> Location
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<M_ML_Account> M_ML_Account
		{
			get
			{
				return this.GetTable<M_ML_Account>();
			}
		}
		
		public System.Data.Linq.Table<M_O_Account> M_O_Account
		{
			get
			{
				return this.GetTable<M_O_Account>();
			}
		}
		
		public System.Data.Linq.Table<M_OI2_Account> M_OI2_Account
		{
			get
			{
				return this.GetTable<M_OI2_Account>();
			}
		}
		
		public System.Data.Linq.Table<M_OJT_Account> M_OJT_Account
		{
			get
			{
				return this.GetTable<M_OJT_Account>();
			}
		}
		
		public System.Data.Linq.Table<M_Product_PayType> M_Product_PayType
		{
			get
			{
				return this.GetTable<M_Product_PayType>();
			}
		}
		
		public System.Data.Linq.Table<M_Product_Teacher> M_Product_Teacher
		{
			get
			{
				return this.GetTable<M_Product_Teacher>();
			}
		}
		
		public System.Data.Linq.Table<M_Role_Account> M_Role_Account
		{
			get
			{
				return this.GetTable<M_Role_Account>();
			}
		}
		
		public System.Data.Linq.Table<M_Role_Menu> M_Role_Menu
		{
			get
			{
				return this.GetTable<M_Role_Menu>();
			}
		}
		
		public System.Data.Linq.Table<Meeting_Location> Meeting_Location
		{
			get
			{
				return this.GetTable<Meeting_Location>();
			}
		}
		
		public System.Data.Linq.Table<Meeting_Location_Set> Meeting_Location_Set
		{
			get
			{
				return this.GetTable<Meeting_Location_Set>();
			}
		}
		
		public System.Data.Linq.Table<Meeting_Location_Used> Meeting_Location_Used
		{
			get
			{
				return this.GetTable<Meeting_Location_Used>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menu
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Order_Header> Order_Header
		{
			get
			{
				return this.GetTable<Order_Header>();
			}
		}
		
		public System.Data.Linq.Table<Order_Join> Order_Join
		{
			get
			{
				return this.GetTable<Order_Join>();
			}
		}
		
		public System.Data.Linq.Table<Order_Paid> Order_Paid
		{
			get
			{
				return this.GetTable<Order_Paid>();
			}
		}
		
		public System.Data.Linq.Table<Order_PaidDetail> Order_PaidDetail
		{
			get
			{
				return this.GetTable<Order_PaidDetail>();
			}
		}
		
		public System.Data.Linq.Table<Order_Product> Order_Product
		{
			get
			{
				return this.GetTable<Order_Product>();
			}
		}
		
		public System.Data.Linq.Table<Organize> Organize
		{
			get
			{
				return this.GetTable<Organize>();
			}
		}
		
		public System.Data.Linq.Table<OrganizeInfo> OrganizeInfo
		{
			get
			{
				return this.GetTable<OrganizeInfo>();
			}
		}
		
		public System.Data.Linq.Table<OrganizeJobType> OrganizeJobType
		{
			get
			{
				return this.GetTable<OrganizeJobType>();
			}
		}
		
		public System.Data.Linq.Table<PayType> PayType
		{
			get
			{
				return this.GetTable<PayType>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Product_Class> Product_Class
		{
			get
			{
				return this.GetTable<Product_Class>();
			}
		}
		
		public System.Data.Linq.Table<Product_ClassTime> Product_ClassTime
		{
			get
			{
				return this.GetTable<Product_ClassTime>();
			}
		}
		
		public System.Data.Linq.Table<Product_File> Product_File
		{
			get
			{
				return this.GetTable<Product_File>();
			}
		}
		
		public System.Data.Linq.Table<Product_Rule> Product_Rule
		{
			get
			{
				return this.GetTable<Product_Rule>();
			}
		}
		
		public System.Data.Linq.Table<Role> Role
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staff
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Staff_Category> Staff_Category
		{
			get
			{
				return this.GetTable<Staff_Category>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teacher
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Token_Check> Token_Check
		{
			get
			{
				return this.GetTable<Token_Check>();
			}
		}
		
		public System.Data.Linq.Table<M_OI_Coupon> M_OI_Coupon
		{
			get
			{
				return this.GetTable<M_OI_Coupon>();
			}
		}
		
		public System.Data.Linq.Table<Coupon_Rule> Coupon_Rule
		{
			get
			{
				return this.GetTable<Coupon_Rule>();
			}
		}
		
		public System.Data.Linq.Table<Coupon_Header> Coupon_Header
		{
			get
			{
				return this.GetTable<Coupon_Header>();
			}
		}
		
		public System.Data.Linq.Table<M_Staff_Account> M_Staff_Account
		{
			get
			{
				return this.GetTable<M_Staff_Account>();
			}
		}
		
		public System.Data.Linq.Table<Account_Performance> Account_Performance
		{
			get
			{
				return this.GetTable<Account_Performance>();
			}
		}
		
		public System.Data.Linq.Table<Account_Spiritual> Account_Spiritual
		{
			get
			{
				return this.GetTable<Account_Spiritual>();
			}
		}
		
		public System.Data.Linq.Table<Log_BusinessType_Account> Log_BusinessType_Account
		{
			get
			{
				return this.GetTable<Log_BusinessType_Account>();
			}
		}
		
		public System.Data.Linq.Table<Log_BusinessType_Header> Log_BusinessType_Header
		{
			get
			{
				return this.GetTable<Log_BusinessType_Header>();
			}
		}
		
		public System.Data.Linq.Table<M_OI_Account> M_OI_Account
		{
			get
			{
				return this.GetTable<M_OI_Account>();
			}
		}
		
		public System.Data.Linq.Table<Log_OrganizeInfo_ACID> Log_OrganizeInfo_ACID
		{
			get
			{
				return this.GetTable<Log_OrganizeInfo_ACID>();
			}
		}
		
		public System.Data.Linq.Table<Coupon_Account> Coupon_Account
		{
			get
			{
				return this.GetTable<Coupon_Account>();
			}
		}
		
		public System.Data.Linq.Table<Message_Target> Message_Target
		{
			get
			{
				return this.GetTable<Message_Target>();
			}
		}
		
		public System.Data.Linq.Table<M_MH_Account> M_MH_Account
		{
			get
			{
				return this.GetTable<M_MH_Account>();
			}
		}
		
		public System.Data.Linq.Table<Message_Header> Message_Header
		{
			get
			{
				return this.GetTable<Message_Header>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetOI2List")]
		public ISingleResult<sp_GetOI2ListResult> sp_GetOI2List([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ACID", DbType="Int")] System.Nullable<int> aCID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aCID);
			return ((ISingleResult<sp_GetOI2ListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetOI2_ACList")]
		public ISingleResult<sp_GetOI2_ACListResult> sp_GetOI2_ACList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ACID", DbType="Int")] System.Nullable<int> aCID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aCID);
			return ((ISingleResult<sp_GetOI2_ACListResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACID;
		
		private string _Login;
		
		private string _Password;
		
		private string _Name_First;
		
		private string _Name_Last;
		
		private bool _ManFlag;
		
		private string _IDNumber;
		
		private int _IDType;
		
		private System.DateTime _Birthday;
		
		private int _EducationType;
		
		private int _JobType;
		
		private int _MarriageType;
		
		private string _MarriageNote;
		
		private int _BaptizedType;
		
		private string _GroupType;
		
		private bool _BackUsedFlag;
		
		private bool _TeacherFlag;
		
		private bool _NightLeaderFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private System.DateTime _LoginDate;
		
		private System.DateTime _LogoutDate;
		
		private int _SaveACID;
		
		private int _OldID;
		
		private EntitySet<Account_Bank> _Account_Bank;
		
		private EntitySet<Account_Note> _Account_Note;
		
		private EntitySet<Baptized> _Baptized;
		
		private EntityRef<Change_OI_Order> _Change_OI_Order;
		
		private EntitySet<Community> _Community;
		
		private EntitySet<Family> _Family;
		
		private EntitySet<JoinGroupWish> _JoinGroupWish;
		
		private EntitySet<M_ML_Account> _M_ML_Account;
		
		private EntitySet<M_O_Account> _M_O_Account;
		
		private EntitySet<M_OI2_Account> _M_OI2_Account;
		
		private EntitySet<M_OJT_Account> _M_OJT_Account;
		
		private EntitySet<M_Role_Account> _M_Role_Account;
		
		private EntitySet<Order_Header> _Order_Header;
		
		private EntitySet<OrganizeInfo> _OrganizeInfo;
		
		private EntitySet<M_Staff_Account> _M_Staff_Account;
		
		private EntitySet<Account_Performance> _Account_Performance;
		
		private EntitySet<Account_Spiritual> _Account_Spiritual;
		
		private EntitySet<Log_BusinessType_Account> _Log_BusinessType_Account;
		
		private EntitySet<M_OI_Account> _M_OI_Account;
		
		private EntitySet<Log_OrganizeInfo_ACID> _Log_OrganizeInfo_ACID;
		
		private EntitySet<Coupon_Account> _Coupon_Account;
		
		private EntitySet<M_MH_Account> _M_MH_Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnName_FirstChanging(string value);
    partial void OnName_FirstChanged();
    partial void OnName_LastChanging(string value);
    partial void OnName_LastChanged();
    partial void OnManFlagChanging(bool value);
    partial void OnManFlagChanged();
    partial void OnIDNumberChanging(string value);
    partial void OnIDNumberChanged();
    partial void OnIDTypeChanging(int value);
    partial void OnIDTypeChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnEducationTypeChanging(int value);
    partial void OnEducationTypeChanged();
    partial void OnJobTypeChanging(int value);
    partial void OnJobTypeChanged();
    partial void OnMarriageTypeChanging(int value);
    partial void OnMarriageTypeChanged();
    partial void OnMarriageNoteChanging(string value);
    partial void OnMarriageNoteChanged();
    partial void OnBaptizedTypeChanging(int value);
    partial void OnBaptizedTypeChanged();
    partial void OnGroupTypeChanging(string value);
    partial void OnGroupTypeChanged();
    partial void OnBackUsedFlagChanging(bool value);
    partial void OnBackUsedFlagChanged();
    partial void OnTeacherFlagChanging(bool value);
    partial void OnTeacherFlagChanged();
    partial void OnNightLeaderFlagChanging(bool value);
    partial void OnNightLeaderFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnLoginDateChanging(System.DateTime value);
    partial void OnLoginDateChanged();
    partial void OnLogoutDateChanging(System.DateTime value);
    partial void OnLogoutDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    partial void OnOldIDChanging(int value);
    partial void OnOldIDChanged();
    #endregion
		
		public Account()
		{
			this._Account_Bank = new EntitySet<Account_Bank>(new Action<Account_Bank>(this.attach_Account_Bank), new Action<Account_Bank>(this.detach_Account_Bank));
			this._Account_Note = new EntitySet<Account_Note>(new Action<Account_Note>(this.attach_Account_Note), new Action<Account_Note>(this.detach_Account_Note));
			this._Baptized = new EntitySet<Baptized>(new Action<Baptized>(this.attach_Baptized), new Action<Baptized>(this.detach_Baptized));
			this._Change_OI_Order = default(EntityRef<Change_OI_Order>);
			this._Community = new EntitySet<Community>(new Action<Community>(this.attach_Community), new Action<Community>(this.detach_Community));
			this._Family = new EntitySet<Family>(new Action<Family>(this.attach_Family), new Action<Family>(this.detach_Family));
			this._JoinGroupWish = new EntitySet<JoinGroupWish>(new Action<JoinGroupWish>(this.attach_JoinGroupWish), new Action<JoinGroupWish>(this.detach_JoinGroupWish));
			this._M_ML_Account = new EntitySet<M_ML_Account>(new Action<M_ML_Account>(this.attach_M_ML_Account), new Action<M_ML_Account>(this.detach_M_ML_Account));
			this._M_O_Account = new EntitySet<M_O_Account>(new Action<M_O_Account>(this.attach_M_O_Account), new Action<M_O_Account>(this.detach_M_O_Account));
			this._M_OI2_Account = new EntitySet<M_OI2_Account>(new Action<M_OI2_Account>(this.attach_M_OI2_Account), new Action<M_OI2_Account>(this.detach_M_OI2_Account));
			this._M_OJT_Account = new EntitySet<M_OJT_Account>(new Action<M_OJT_Account>(this.attach_M_OJT_Account), new Action<M_OJT_Account>(this.detach_M_OJT_Account));
			this._M_Role_Account = new EntitySet<M_Role_Account>(new Action<M_Role_Account>(this.attach_M_Role_Account), new Action<M_Role_Account>(this.detach_M_Role_Account));
			this._Order_Header = new EntitySet<Order_Header>(new Action<Order_Header>(this.attach_Order_Header), new Action<Order_Header>(this.detach_Order_Header));
			this._OrganizeInfo = new EntitySet<OrganizeInfo>(new Action<OrganizeInfo>(this.attach_OrganizeInfo), new Action<OrganizeInfo>(this.detach_OrganizeInfo));
			this._M_Staff_Account = new EntitySet<M_Staff_Account>(new Action<M_Staff_Account>(this.attach_M_Staff_Account), new Action<M_Staff_Account>(this.detach_M_Staff_Account));
			this._Account_Performance = new EntitySet<Account_Performance>(new Action<Account_Performance>(this.attach_Account_Performance), new Action<Account_Performance>(this.detach_Account_Performance));
			this._Account_Spiritual = new EntitySet<Account_Spiritual>(new Action<Account_Spiritual>(this.attach_Account_Spiritual), new Action<Account_Spiritual>(this.detach_Account_Spiritual));
			this._Log_BusinessType_Account = new EntitySet<Log_BusinessType_Account>(new Action<Log_BusinessType_Account>(this.attach_Log_BusinessType_Account), new Action<Log_BusinessType_Account>(this.detach_Log_BusinessType_Account));
			this._M_OI_Account = new EntitySet<M_OI_Account>(new Action<M_OI_Account>(this.attach_M_OI_Account), new Action<M_OI_Account>(this.detach_M_OI_Account));
			this._Log_OrganizeInfo_ACID = new EntitySet<Log_OrganizeInfo_ACID>(new Action<Log_OrganizeInfo_ACID>(this.attach_Log_OrganizeInfo_ACID), new Action<Log_OrganizeInfo_ACID>(this.detach_Log_OrganizeInfo_ACID));
			this._Coupon_Account = new EntitySet<Coupon_Account>(new Action<Coupon_Account>(this.attach_Coupon_Account), new Action<Coupon_Account>(this.detach_Coupon_Account));
			this._M_MH_Account = new EntitySet<M_MH_Account>(new Action<M_MH_Account>(this.attach_M_MH_Account), new Action<M_MH_Account>(this.detach_M_MH_Account));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(100)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_First", DbType="NVarChar(50)")]
		public string Name_First
		{
			get
			{
				return this._Name_First;
			}
			set
			{
				if ((this._Name_First != value))
				{
					this.OnName_FirstChanging(value);
					this.SendPropertyChanging();
					this._Name_First = value;
					this.SendPropertyChanged("Name_First");
					this.OnName_FirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Last", DbType="NVarChar(50)")]
		public string Name_Last
		{
			get
			{
				return this._Name_Last;
			}
			set
			{
				if ((this._Name_Last != value))
				{
					this.OnName_LastChanging(value);
					this.SendPropertyChanging();
					this._Name_Last = value;
					this.SendPropertyChanged("Name_Last");
					this.OnName_LastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManFlag", DbType="Bit NOT NULL")]
		public bool ManFlag
		{
			get
			{
				return this._ManFlag;
			}
			set
			{
				if ((this._ManFlag != value))
				{
					this.OnManFlagChanging(value);
					this.SendPropertyChanging();
					this._ManFlag = value;
					this.SendPropertyChanged("ManFlag");
					this.OnManFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="VarChar(30)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDType", DbType="Int NOT NULL")]
		public int IDType
		{
			get
			{
				return this._IDType;
			}
			set
			{
				if ((this._IDType != value))
				{
					this.OnIDTypeChanging(value);
					this.SendPropertyChanging();
					this._IDType = value;
					this.SendPropertyChanged("IDType");
					this.OnIDTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime NOT NULL")]
		public System.DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationType", DbType="Int NOT NULL")]
		public int EducationType
		{
			get
			{
				return this._EducationType;
			}
			set
			{
				if ((this._EducationType != value))
				{
					this.OnEducationTypeChanging(value);
					this.SendPropertyChanging();
					this._EducationType = value;
					this.SendPropertyChanged("EducationType");
					this.OnEducationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobType", DbType="Int NOT NULL")]
		public int JobType
		{
			get
			{
				return this._JobType;
			}
			set
			{
				if ((this._JobType != value))
				{
					this.OnJobTypeChanging(value);
					this.SendPropertyChanging();
					this._JobType = value;
					this.SendPropertyChanged("JobType");
					this.OnJobTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriageType", DbType="Int NOT NULL")]
		public int MarriageType
		{
			get
			{
				return this._MarriageType;
			}
			set
			{
				if ((this._MarriageType != value))
				{
					this.OnMarriageTypeChanging(value);
					this.SendPropertyChanging();
					this._MarriageType = value;
					this.SendPropertyChanged("MarriageType");
					this.OnMarriageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriageNote", DbType="NVarChar(100)")]
		public string MarriageNote
		{
			get
			{
				return this._MarriageNote;
			}
			set
			{
				if ((this._MarriageNote != value))
				{
					this.OnMarriageNoteChanging(value);
					this.SendPropertyChanging();
					this._MarriageNote = value;
					this.SendPropertyChanged("MarriageNote");
					this.OnMarriageNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaptizedType", DbType="Int NOT NULL")]
		public int BaptizedType
		{
			get
			{
				return this._BaptizedType;
			}
			set
			{
				if ((this._BaptizedType != value))
				{
					this.OnBaptizedTypeChanging(value);
					this.SendPropertyChanging();
					this._BaptizedType = value;
					this.SendPropertyChanged("BaptizedType");
					this.OnBaptizedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupType", DbType="NVarChar(50)")]
		public string GroupType
		{
			get
			{
				return this._GroupType;
			}
			set
			{
				if ((this._GroupType != value))
				{
					this.OnGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._GroupType = value;
					this.SendPropertyChanged("GroupType");
					this.OnGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackUsedFlag", DbType="Bit NOT NULL")]
		public bool BackUsedFlag
		{
			get
			{
				return this._BackUsedFlag;
			}
			set
			{
				if ((this._BackUsedFlag != value))
				{
					this.OnBackUsedFlagChanging(value);
					this.SendPropertyChanging();
					this._BackUsedFlag = value;
					this.SendPropertyChanged("BackUsedFlag");
					this.OnBackUsedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherFlag", DbType="Bit NOT NULL")]
		public bool TeacherFlag
		{
			get
			{
				return this._TeacherFlag;
			}
			set
			{
				if ((this._TeacherFlag != value))
				{
					this.OnTeacherFlagChanging(value);
					this.SendPropertyChanging();
					this._TeacherFlag = value;
					this.SendPropertyChanged("TeacherFlag");
					this.OnTeacherFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightLeaderFlag", DbType="Bit NOT NULL")]
		public bool NightLeaderFlag
		{
			get
			{
				return this._NightLeaderFlag;
			}
			set
			{
				if ((this._NightLeaderFlag != value))
				{
					this.OnNightLeaderFlagChanging(value);
					this.SendPropertyChanging();
					this._NightLeaderFlag = value;
					this.SendPropertyChanged("NightLeaderFlag");
					this.OnNightLeaderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogoutDate
		{
			get
			{
				return this._LogoutDate;
			}
			set
			{
				if ((this._LogoutDate != value))
				{
					this.OnLogoutDateChanging(value);
					this.SendPropertyChanging();
					this._LogoutDate = value;
					this.SendPropertyChanged("LogoutDate");
					this.OnLogoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int NOT NULL")]
		public int OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Bank", Storage="_Account_Bank", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Account_Bank> Account_Bank
		{
			get
			{
				return this._Account_Bank;
			}
			set
			{
				this._Account_Bank.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Note", Storage="_Account_Note", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Account_Note> Account_Note
		{
			get
			{
				return this._Account_Note;
			}
			set
			{
				this._Account_Note.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Baptized", Storage="_Baptized", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Baptized> Baptized
		{
			get
			{
				return this._Baptized;
			}
			set
			{
				this._Baptized.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Change_OI_Order", Storage="_Change_OI_Order", ThisKey="ACID", OtherKey="COIOID", IsUnique=true, IsForeignKey=false)]
		public Change_OI_Order Change_OI_Order
		{
			get
			{
				return this._Change_OI_Order.Entity;
			}
			set
			{
				Change_OI_Order previousValue = this._Change_OI_Order.Entity;
				if (((previousValue != value) 
							|| (this._Change_OI_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Change_OI_Order.Entity = null;
						previousValue.Account = null;
					}
					this._Change_OI_Order.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("Change_OI_Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Community", Storage="_Community", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Community> Community
		{
			get
			{
				return this._Community;
			}
			set
			{
				this._Community.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Family", Storage="_Family", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Family> Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				this._Family.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_JoinGroupWish", Storage="_JoinGroupWish", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<JoinGroupWish> JoinGroupWish
		{
			get
			{
				return this._JoinGroupWish;
			}
			set
			{
				this._JoinGroupWish.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_ML_Account", Storage="_M_ML_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_ML_Account> M_ML_Account
		{
			get
			{
				return this._M_ML_Account;
			}
			set
			{
				this._M_ML_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_O_Account", Storage="_M_O_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_O_Account> M_O_Account
		{
			get
			{
				return this._M_O_Account;
			}
			set
			{
				this._M_O_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_OI2_Account", Storage="_M_OI2_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_OI2_Account> M_OI2_Account
		{
			get
			{
				return this._M_OI2_Account;
			}
			set
			{
				this._M_OI2_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_OJT_Account", Storage="_M_OJT_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_OJT_Account> M_OJT_Account
		{
			get
			{
				return this._M_OJT_Account;
			}
			set
			{
				this._M_OJT_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_Role_Account", Storage="_M_Role_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_Role_Account> M_Role_Account
		{
			get
			{
				return this._M_Role_Account;
			}
			set
			{
				this._M_Role_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order_Header", Storage="_Order_Header", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Order_Header> Order_Header
		{
			get
			{
				return this._Order_Header;
			}
			set
			{
				this._Order_Header.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_OrganizeInfo", Storage="_OrganizeInfo", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<OrganizeInfo> OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo;
			}
			set
			{
				this._OrganizeInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_Staff_Account", Storage="_M_Staff_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_Staff_Account> M_Staff_Account
		{
			get
			{
				return this._M_Staff_Account;
			}
			set
			{
				this._M_Staff_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Performance", Storage="_Account_Performance", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Account_Performance> Account_Performance
		{
			get
			{
				return this._Account_Performance;
			}
			set
			{
				this._Account_Performance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Spiritual", Storage="_Account_Spiritual", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Account_Spiritual> Account_Spiritual
		{
			get
			{
				return this._Account_Spiritual;
			}
			set
			{
				this._Account_Spiritual.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Log_BusinessType_Account", Storage="_Log_BusinessType_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Log_BusinessType_Account> Log_BusinessType_Account
		{
			get
			{
				return this._Log_BusinessType_Account;
			}
			set
			{
				this._Log_BusinessType_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_OI_Account", Storage="_M_OI_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_OI_Account> M_OI_Account
		{
			get
			{
				return this._M_OI_Account;
			}
			set
			{
				this._M_OI_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Log_OrganizeInfo_ACID", Storage="_Log_OrganizeInfo_ACID", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Log_OrganizeInfo_ACID> Log_OrganizeInfo_ACID
		{
			get
			{
				return this._Log_OrganizeInfo_ACID;
			}
			set
			{
				this._Log_OrganizeInfo_ACID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Coupon_Account", Storage="_Coupon_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<Coupon_Account> Coupon_Account
		{
			get
			{
				return this._Coupon_Account;
			}
			set
			{
				this._Coupon_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_MH_Account", Storage="_M_MH_Account", ThisKey="ACID", OtherKey="ACID")]
		public EntitySet<M_MH_Account> M_MH_Account
		{
			get
			{
				return this._M_MH_Account;
			}
			set
			{
				this._M_MH_Account.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Account_Bank(Account_Bank entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Account_Bank(Account_Bank entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Account_Note(Account_Note entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Account_Note(Account_Note entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Baptized(Baptized entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Baptized(Baptized entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Community(Community entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Community(Community entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Family(Family entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Family(Family entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_JoinGroupWish(JoinGroupWish entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_JoinGroupWish(JoinGroupWish entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_ML_Account(M_ML_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_ML_Account(M_ML_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_O_Account(M_O_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_O_Account(M_O_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_OI2_Account(M_OI2_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_OI2_Account(M_OI2_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_OJT_Account(M_OJT_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_OJT_Account(M_OJT_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_Role_Account(M_Role_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_Role_Account(M_Role_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Order_Header(Order_Header entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Order_Header(Order_Header entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_OrganizeInfo(OrganizeInfo entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_OrganizeInfo(OrganizeInfo entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_Staff_Account(M_Staff_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_Staff_Account(M_Staff_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Account_Performance(Account_Performance entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Account_Performance(Account_Performance entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Account_Spiritual(Account_Spiritual entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Account_Spiritual(Account_Spiritual entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Log_BusinessType_Account(Log_BusinessType_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Log_BusinessType_Account(Log_BusinessType_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_OI_Account(M_OI_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_OI_Account(M_OI_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Log_OrganizeInfo_ACID(Log_OrganizeInfo_ACID entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Log_OrganizeInfo_ACID(Log_OrganizeInfo_ACID entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Coupon_Account(Coupon_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Coupon_Account(Coupon_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_M_MH_Account(M_MH_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_M_MH_Account(M_MH_Account entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZipCode")]
	public partial class ZipCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZID;
		
		private int _ParentID;
		
		private string _Code;
		
		private string _Title;
		
		private string _GroupName;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private EntitySet<Location> _Location;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZIDChanging(int value);
    partial void OnZIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    #endregion
		
		public ZipCode()
		{
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ZID
		{
			get
			{
				return this._ZID;
			}
			set
			{
				if ((this._ZID != value))
				{
					this.OnZIDChanging(value);
					this.SendPropertyChanging();
					this._ZID = value;
					this.SendPropertyChanged("ZID");
					this.OnZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZipCode_Location", Storage="_Location", ThisKey="ZID", OtherKey="ZID")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.ZipCode = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.ZipCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account_Bank")]
	public partial class Account_Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ABID;
		
		private int _ACID;
		
		private int _BID;
		
		private string _Title;
		
		private string _BankNo;
		
		private string _AccountNo;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Bank> _Bank;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnABIDChanging(int value);
    partial void OnABIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnBIDChanging(int value);
    partial void OnBIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBankNoChanging(string value);
    partial void OnBankNoChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Account_Bank()
		{
			this._Account = default(EntityRef<Account>);
			this._Bank = default(EntityRef<Bank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ABID
		{
			get
			{
				return this._ABID;
			}
			set
			{
				if ((this._ABID != value))
				{
					this.OnABIDChanging(value);
					this.SendPropertyChanging();
					this._ABID = value;
					this.SendPropertyChanged("ABID");
					this.OnABIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", DbType="Int NOT NULL")]
		public int BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BankNo
		{
			get
			{
				return this._BankNo;
			}
			set
			{
				if ((this._BankNo != value))
				{
					this.OnBankNoChanging(value);
					this.SendPropertyChanging();
					this._BankNo = value;
					this.SendPropertyChanged("BankNo");
					this.OnBankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Bank", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Account_Bank.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Account_Bank.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Account_Bank", Storage="_Bank", ThisKey="BID", OtherKey="BID", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.Account_Bank.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.Account_Bank.Add(this);
						this._BID = value.BID;
					}
					else
					{
						this._BID = default(int);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account_Note")]
	public partial class Account_Note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ANID;
		
		private int _ACID;
		
		private int _OIID;
		
		private int _NoteType;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnANIDChanging(int value);
    partial void OnANIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnNoteTypeChanging(int value);
    partial void OnNoteTypeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Account_Note()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ANID
		{
			get
			{
				return this._ANID;
			}
			set
			{
				if ((this._ANID != value))
				{
					this.OnANIDChanging(value);
					this.SendPropertyChanging();
					this._ANID = value;
					this.SendPropertyChanged("ANID");
					this.OnANIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteType", DbType="Int NOT NULL")]
		public int NoteType
		{
			get
			{
				return this._NoteType;
			}
			set
			{
				if ((this._NoteType != value))
				{
					this.OnNoteTypeChanging(value);
					this.SendPropertyChanging();
					this._NoteType = value;
					this.SendPropertyChanged("NoteType");
					this.OnNoteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Note", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Account_Note.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Account_Note.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BID;
		
		private int _BankNo;
		
		private int _BankType;
		
		private string _Title;
		
		private bool _ActiveFlag;
		
		private EntitySet<Account_Bank> _Account_Bank;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIDChanging(int value);
    partial void OnBIDChanged();
    partial void OnBankNoChanging(int value);
    partial void OnBankNoChanged();
    partial void OnBankTypeChanging(int value);
    partial void OnBankTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    #endregion
		
		public Bank()
		{
			this._Account_Bank = new EntitySet<Account_Bank>(new Action<Account_Bank>(this.attach_Account_Bank), new Action<Account_Bank>(this.detach_Account_Bank));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNo", DbType="Int NOT NULL")]
		public int BankNo
		{
			get
			{
				return this._BankNo;
			}
			set
			{
				if ((this._BankNo != value))
				{
					this.OnBankNoChanging(value);
					this.SendPropertyChanging();
					this._BankNo = value;
					this.SendPropertyChanged("BankNo");
					this.OnBankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankType", DbType="Int NOT NULL")]
		public int BankType
		{
			get
			{
				return this._BankType;
			}
			set
			{
				if ((this._BankType != value))
				{
					this.OnBankTypeChanging(value);
					this.SendPropertyChanging();
					this._BankType = value;
					this.SendPropertyChanged("BankType");
					this.OnBankTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Account_Bank", Storage="_Account_Bank", ThisKey="BID", OtherKey="BID")]
		public EntitySet<Account_Bank> Account_Bank
		{
			get
			{
				return this._Account_Bank;
			}
			set
			{
				this._Account_Bank.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Account_Bank(Account_Bank entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_Account_Bank(Account_Bank entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Baptized")]
	public partial class Baptized : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BID;
		
		private int _OIID;
		
		private int _ACID;
		
		private System.DateTime _BaptismDate;
		
		private bool _ImplementFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIDChanging(int value);
    partial void OnBIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnBaptismDateChanging(System.DateTime value);
    partial void OnBaptismDateChanged();
    partial void OnImplementFlagChanging(bool value);
    partial void OnImplementFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Baptized()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaptismDate", DbType="DateTime NOT NULL")]
		public System.DateTime BaptismDate
		{
			get
			{
				return this._BaptismDate;
			}
			set
			{
				if ((this._BaptismDate != value))
				{
					this.OnBaptismDateChanging(value);
					this.SendPropertyChanging();
					this._BaptismDate = value;
					this.SendPropertyChanged("BaptismDate");
					this.OnBaptismDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImplementFlag", DbType="Bit NOT NULL")]
		public bool ImplementFlag
		{
			get
			{
				return this._ImplementFlag;
			}
			set
			{
				if ((this._ImplementFlag != value))
				{
					this.OnImplementFlagChanging(value);
					this.SendPropertyChanging();
					this._ImplementFlag = value;
					this.SendPropertyChanged("ImplementFlag");
					this.OnImplementFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Baptized", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Baptized.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Baptized.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Change_OI_Order")]
	public partial class Change_OI_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COIOID;
		
		private int _ACID;
		
		private int _From_OIID;
		
		private int _To_OIID;
		
		private int _Order_Type;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo1;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOIOIDChanging(int value);
    partial void OnCOIOIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnFrom_OIIDChanging(int value);
    partial void OnFrom_OIIDChanged();
    partial void OnTo_OIIDChanging(int value);
    partial void OnTo_OIIDChanged();
    partial void OnOrder_TypeChanging(int value);
    partial void OnOrder_TypeChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Change_OI_Order()
		{
			this._Account = default(EntityRef<Account>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			this._OrganizeInfo1 = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COIOID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COIOID
		{
			get
			{
				return this._COIOID;
			}
			set
			{
				if ((this._COIOID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOIOIDChanging(value);
					this.SendPropertyChanging();
					this._COIOID = value;
					this.SendPropertyChanged("COIOID");
					this.OnCOIOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From_OIID", DbType="Int NOT NULL")]
		public int From_OIID
		{
			get
			{
				return this._From_OIID;
			}
			set
			{
				if ((this._From_OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFrom_OIIDChanging(value);
					this.SendPropertyChanging();
					this._From_OIID = value;
					this.SendPropertyChanged("From_OIID");
					this.OnFrom_OIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_To_OIID", DbType="Int NOT NULL")]
		public int To_OIID
		{
			get
			{
				return this._To_OIID;
			}
			set
			{
				if ((this._To_OIID != value))
				{
					if (this._OrganizeInfo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTo_OIIDChanging(value);
					this.SendPropertyChanging();
					this._To_OIID = value;
					this.SendPropertyChanged("To_OIID");
					this.OnTo_OIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type", DbType="Int NOT NULL")]
		public int Order_Type
		{
			get
			{
				return this._Order_Type;
			}
			set
			{
				if ((this._Order_Type != value))
				{
					this.OnOrder_TypeChanging(value);
					this.SendPropertyChanging();
					this._Order_Type = value;
					this.SendPropertyChanged("Order_Type");
					this.OnOrder_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Change_OI_Order", Storage="_Account", ThisKey="COIOID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Change_OI_Order = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Change_OI_Order = this;
						this._COIOID = value.ACID;
					}
					else
					{
						this._COIOID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Change_OI_Order", Storage="_OrganizeInfo", ThisKey="From_OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.Change_OI_Order.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.Change_OI_Order.Add(this);
						this._From_OIID = value.OIID;
					}
					else
					{
						this._From_OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Change_OI_Order1", Storage="_OrganizeInfo1", ThisKey="To_OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo1
		{
			get
			{
				return this._OrganizeInfo1.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo1.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo1.Entity = null;
						previousValue.Change_OI_Order1.Remove(this);
					}
					this._OrganizeInfo1.Entity = value;
					if ((value != null))
					{
						value.Change_OI_Order1.Add(this);
						this._To_OIID = value.OIID;
					}
					else
					{
						this._To_OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Community")]
	public partial class Community : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private int _ACID;
		
		private int _CommunityType;
		
		private string _CommunityValue;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnCommunityTypeChanging(int value);
    partial void OnCommunityTypeChanged();
    partial void OnCommunityValueChanging(string value);
    partial void OnCommunityValueChanged();
    #endregion
		
		public Community()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityType", DbType="Int NOT NULL")]
		public int CommunityType
		{
			get
			{
				return this._CommunityType;
			}
			set
			{
				if ((this._CommunityType != value))
				{
					this.OnCommunityTypeChanging(value);
					this.SendPropertyChanging();
					this._CommunityType = value;
					this.SendPropertyChanged("CommunityType");
					this.OnCommunityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityValue", DbType="VarChar(300)")]
		public string CommunityValue
		{
			get
			{
				return this._CommunityValue;
			}
			set
			{
				if ((this._CommunityValue != value))
				{
					this.OnCommunityValueChanging(value);
					this.SendPropertyChanging();
					this._CommunityValue = value;
					this.SendPropertyChanged("CommunityValue");
					this.OnCommunityValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Community", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Community.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Community.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contect")]
	public partial class Contect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private int _TargetType;
		
		private int _TargetID;
		
		private int _ZID;
		
		private int _ContectType;
		
		private string _ContectValue;
		
		private bool _CheckFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _CheckDate;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnZIDChanging(int value);
    partial void OnZIDChanged();
    partial void OnContectTypeChanging(int value);
    partial void OnContectTypeChanged();
    partial void OnContectValueChanging(string value);
    partial void OnContectValueChanged();
    partial void OnCheckFlagChanging(bool value);
    partial void OnCheckFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    #endregion
		
		public Contect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZID", DbType="Int NOT NULL")]
		public int ZID
		{
			get
			{
				return this._ZID;
			}
			set
			{
				if ((this._ZID != value))
				{
					this.OnZIDChanging(value);
					this.SendPropertyChanging();
					this._ZID = value;
					this.SendPropertyChanged("ZID");
					this.OnZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContectType", DbType="Int NOT NULL")]
		public int ContectType
		{
			get
			{
				return this._ContectType;
			}
			set
			{
				if ((this._ContectType != value))
				{
					this.OnContectTypeChanging(value);
					this.SendPropertyChanging();
					this._ContectType = value;
					this.SendPropertyChanged("ContectType");
					this.OnContectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContectValue", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string ContectValue
		{
			get
			{
				return this._ContectValue;
			}
			set
			{
				if ((this._ContectValue != value))
				{
					this.OnContectValueChanging(value);
					this.SendPropertyChanging();
					this._ContectValue = value;
					this.SendPropertyChanged("ContectValue");
					this.OnContectValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckFlag", DbType="Bit NOT NULL")]
		public bool CheckFlag
		{
			get
			{
				return this._CheckFlag;
			}
			set
			{
				if ((this._CheckFlag != value))
				{
					this.OnCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._CheckFlag = value;
					this.SendPropertyChanged("CheckFlag");
					this.OnCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private int _CCID;
		
		private string _Code;
		
		private string _Title;
		
		private int _CourseType;
		
		private string _CourseInfo;
		
		private string _TargetInfo;
		
		private string _GraduationInfo;
		
		private bool _ClassicalFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Course_Rule> _Course_Rule;
		
		private EntitySet<Product> _Product;
		
		private EntityRef<Course_Category> _Course_Category;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnCCIDChanging(int value);
    partial void OnCCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCourseTypeChanging(int value);
    partial void OnCourseTypeChanged();
    partial void OnCourseInfoChanging(string value);
    partial void OnCourseInfoChanged();
    partial void OnTargetInfoChanging(string value);
    partial void OnTargetInfoChanged();
    partial void OnGraduationInfoChanging(string value);
    partial void OnGraduationInfoChanged();
    partial void OnClassicalFlagChanging(bool value);
    partial void OnClassicalFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Course()
		{
			this._Course_Rule = new EntitySet<Course_Rule>(new Action<Course_Rule>(this.attach_Course_Rule), new Action<Course_Rule>(this.detach_Course_Rule));
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			this._Course_Category = default(EntityRef<Course_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCID", DbType="Int NOT NULL")]
		public int CCID
		{
			get
			{
				return this._CCID;
			}
			set
			{
				if ((this._CCID != value))
				{
					if (this._Course_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCCIDChanging(value);
					this.SendPropertyChanging();
					this._CCID = value;
					this.SendPropertyChanged("CCID");
					this.OnCCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseType", DbType="Int NOT NULL")]
		public int CourseType
		{
			get
			{
				return this._CourseType;
			}
			set
			{
				if ((this._CourseType != value))
				{
					this.OnCourseTypeChanging(value);
					this.SendPropertyChanging();
					this._CourseType = value;
					this.SendPropertyChanged("CourseType");
					this.OnCourseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseInfo", DbType="NVarChar(MAX)")]
		public string CourseInfo
		{
			get
			{
				return this._CourseInfo;
			}
			set
			{
				if ((this._CourseInfo != value))
				{
					this.OnCourseInfoChanging(value);
					this.SendPropertyChanging();
					this._CourseInfo = value;
					this.SendPropertyChanged("CourseInfo");
					this.OnCourseInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInfo", DbType="NVarChar(MAX)")]
		public string TargetInfo
		{
			get
			{
				return this._TargetInfo;
			}
			set
			{
				if ((this._TargetInfo != value))
				{
					this.OnTargetInfoChanging(value);
					this.SendPropertyChanging();
					this._TargetInfo = value;
					this.SendPropertyChanged("TargetInfo");
					this.OnTargetInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduationInfo", DbType="NVarChar(MAX)")]
		public string GraduationInfo
		{
			get
			{
				return this._GraduationInfo;
			}
			set
			{
				if ((this._GraduationInfo != value))
				{
					this.OnGraduationInfoChanging(value);
					this.SendPropertyChanging();
					this._GraduationInfo = value;
					this.SendPropertyChanged("GraduationInfo");
					this.OnGraduationInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassicalFlag", DbType="Bit NOT NULL")]
		public bool ClassicalFlag
		{
			get
			{
				return this._ClassicalFlag;
			}
			set
			{
				if ((this._ClassicalFlag != value))
				{
					this.OnClassicalFlagChanging(value);
					this.SendPropertyChanging();
					this._ClassicalFlag = value;
					this.SendPropertyChanged("ClassicalFlag");
					this.OnClassicalFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Course_Rule", Storage="_Course_Rule", ThisKey="CID", OtherKey="CID")]
		public EntitySet<Course_Rule> Course_Rule
		{
			get
			{
				return this._Course_Rule;
			}
			set
			{
				this._Course_Rule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Product", Storage="_Product", ThisKey="CID", OtherKey="CID")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Category_Course", Storage="_Course_Category", ThisKey="CCID", OtherKey="CCID", IsForeignKey=true)]
		public Course_Category Course_Category
		{
			get
			{
				return this._Course_Category.Entity;
			}
			set
			{
				Course_Category previousValue = this._Course_Category.Entity;
				if (((previousValue != value) 
							|| (this._Course_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course_Category.Entity = null;
						previousValue.Course.Remove(this);
					}
					this._Course_Category.Entity = value;
					if ((value != null))
					{
						value.Course.Add(this);
						this._CCID = value.CCID;
					}
					else
					{
						this._CCID = default(int);
					}
					this.SendPropertyChanged("Course_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Course_Rule(Course_Rule entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Course_Rule(Course_Rule entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course_Category")]
	public partial class Course_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CCID;
		
		private string _Code;
		
		private string _Title;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Course> _Course;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCCIDChanging(int value);
    partial void OnCCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Course_Category()
		{
			this._Course = new EntitySet<Course>(new Action<Course>(this.attach_Course), new Action<Course>(this.detach_Course));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CCID
		{
			get
			{
				return this._CCID;
			}
			set
			{
				if ((this._CCID != value))
				{
					this.OnCCIDChanging(value);
					this.SendPropertyChanging();
					this._CCID = value;
					this.SendPropertyChanged("CCID");
					this.OnCCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Category_Course", Storage="_Course", ThisKey="CCID", OtherKey="CCID")]
		public EntitySet<Course> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				this._Course.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Course_Category = this;
		}
		
		private void detach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Course_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course_Rule")]
	public partial class Course_Rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CRID;
		
		private int _CID;
		
		private int _TargetType;
		
		private int _TargetInt1;
		
		private int _TargetInt2;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Course> _Course;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCRIDChanging(int value);
    partial void OnCRIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetInt1Changing(int value);
    partial void OnTargetInt1Changed();
    partial void OnTargetInt2Changing(int value);
    partial void OnTargetInt2Changed();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Course_Rule()
		{
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CRID
		{
			get
			{
				return this._CRID;
			}
			set
			{
				if ((this._CRID != value))
				{
					this.OnCRIDChanging(value);
					this.SendPropertyChanging();
					this._CRID = value;
					this.SendPropertyChanged("CRID");
					this.OnCRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInt1", DbType="Int NOT NULL")]
		public int TargetInt1
		{
			get
			{
				return this._TargetInt1;
			}
			set
			{
				if ((this._TargetInt1 != value))
				{
					this.OnTargetInt1Changing(value);
					this.SendPropertyChanging();
					this._TargetInt1 = value;
					this.SendPropertyChanged("TargetInt1");
					this.OnTargetInt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInt2", DbType="Int NOT NULL")]
		public int TargetInt2
		{
			get
			{
				return this._TargetInt2;
			}
			set
			{
				if ((this._TargetInt2 != value))
				{
					this.OnTargetInt2Changing(value);
					this.SendPropertyChanging();
					this._TargetInt2 = value;
					this.SendPropertyChanged("TargetInt2");
					this.OnTargetInt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Course_Rule", Storage="_Course", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Course_Rule.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Course_Rule.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EID;
		
		private int _ECID;
		
		private string _Title;
		
		private int _EventType;
		
		private string _EventInfo;
		
		private bool _CircleFlag;
		
		private System.DateTime _EventDate;
		
		private int _WeeklyNo;
		
		private System.TimeSpan _STime;
		
		private System.TimeSpan _ETime;
		
		private System.DateTime _SDate_AllowJoin;
		
		private System.DateTime _EDate_AllowJoin;
		
		private System.TimeSpan _STime_AllowJoin;
		
		private System.TimeSpan _ETime_AllowJoin;
		
		private string _PhoneNo;
		
		private int _Location_MID;
		
		private string _Location_URL;
		
		private string _Location_Note;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Event_Join_Header> _Event_Join_Header;
		
		private EntityRef<Event_Category> _Event_Category;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIDChanging(int value);
    partial void OnEIDChanged();
    partial void OnECIDChanging(int value);
    partial void OnECIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEventTypeChanging(int value);
    partial void OnEventTypeChanged();
    partial void OnEventInfoChanging(string value);
    partial void OnEventInfoChanged();
    partial void OnCircleFlagChanging(bool value);
    partial void OnCircleFlagChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnWeeklyNoChanging(int value);
    partial void OnWeeklyNoChanged();
    partial void OnSTimeChanging(System.TimeSpan value);
    partial void OnSTimeChanged();
    partial void OnETimeChanging(System.TimeSpan value);
    partial void OnETimeChanged();
    partial void OnSDate_AllowJoinChanging(System.DateTime value);
    partial void OnSDate_AllowJoinChanged();
    partial void OnEDate_AllowJoinChanging(System.DateTime value);
    partial void OnEDate_AllowJoinChanged();
    partial void OnSTime_AllowJoinChanging(System.TimeSpan value);
    partial void OnSTime_AllowJoinChanged();
    partial void OnETime_AllowJoinChanging(System.TimeSpan value);
    partial void OnETime_AllowJoinChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnLocation_MIDChanging(int value);
    partial void OnLocation_MIDChanged();
    partial void OnLocation_URLChanging(string value);
    partial void OnLocation_URLChanged();
    partial void OnLocation_NoteChanging(string value);
    partial void OnLocation_NoteChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Event()
		{
			this._Event_Join_Header = new EntitySet<Event_Join_Header>(new Action<Event_Join_Header>(this.attach_Event_Join_Header), new Action<Event_Join_Header>(this.detach_Event_Join_Header));
			this._Event_Category = default(EntityRef<Event_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECID", DbType="Int NOT NULL")]
		public int ECID
		{
			get
			{
				return this._ECID;
			}
			set
			{
				if ((this._ECID != value))
				{
					if (this._Event_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnECIDChanging(value);
					this.SendPropertyChanging();
					this._ECID = value;
					this.SendPropertyChanged("ECID");
					this.OnECIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Int NOT NULL")]
		public int EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventInfo", DbType="NVarChar(MAX)")]
		public string EventInfo
		{
			get
			{
				return this._EventInfo;
			}
			set
			{
				if ((this._EventInfo != value))
				{
					this.OnEventInfoChanging(value);
					this.SendPropertyChanging();
					this._EventInfo = value;
					this.SendPropertyChanged("EventInfo");
					this.OnEventInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CircleFlag", DbType="Bit NOT NULL")]
		public bool CircleFlag
		{
			get
			{
				return this._CircleFlag;
			}
			set
			{
				if ((this._CircleFlag != value))
				{
					this.OnCircleFlagChanging(value);
					this.SendPropertyChanging();
					this._CircleFlag = value;
					this.SendPropertyChanged("CircleFlag");
					this.OnCircleFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="Date NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyNo", DbType="Int NOT NULL")]
		public int WeeklyNo
		{
			get
			{
				return this._WeeklyNo;
			}
			set
			{
				if ((this._WeeklyNo != value))
				{
					this.OnWeeklyNoChanging(value);
					this.SendPropertyChanging();
					this._WeeklyNo = value;
					this.SendPropertyChanged("WeeklyNo");
					this.OnWeeklyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STime", DbType="Time NOT NULL")]
		public System.TimeSpan STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETime", DbType="Time NOT NULL")]
		public System.TimeSpan ETime
		{
			get
			{
				return this._ETime;
			}
			set
			{
				if ((this._ETime != value))
				{
					this.OnETimeChanging(value);
					this.SendPropertyChanging();
					this._ETime = value;
					this.SendPropertyChanged("ETime");
					this.OnETimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDate_AllowJoin", DbType="Date NOT NULL")]
		public System.DateTime SDate_AllowJoin
		{
			get
			{
				return this._SDate_AllowJoin;
			}
			set
			{
				if ((this._SDate_AllowJoin != value))
				{
					this.OnSDate_AllowJoinChanging(value);
					this.SendPropertyChanging();
					this._SDate_AllowJoin = value;
					this.SendPropertyChanged("SDate_AllowJoin");
					this.OnSDate_AllowJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDate_AllowJoin", DbType="Date NOT NULL")]
		public System.DateTime EDate_AllowJoin
		{
			get
			{
				return this._EDate_AllowJoin;
			}
			set
			{
				if ((this._EDate_AllowJoin != value))
				{
					this.OnEDate_AllowJoinChanging(value);
					this.SendPropertyChanging();
					this._EDate_AllowJoin = value;
					this.SendPropertyChanged("EDate_AllowJoin");
					this.OnEDate_AllowJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STime_AllowJoin", DbType="Time NOT NULL")]
		public System.TimeSpan STime_AllowJoin
		{
			get
			{
				return this._STime_AllowJoin;
			}
			set
			{
				if ((this._STime_AllowJoin != value))
				{
					this.OnSTime_AllowJoinChanging(value);
					this.SendPropertyChanging();
					this._STime_AllowJoin = value;
					this.SendPropertyChanged("STime_AllowJoin");
					this.OnSTime_AllowJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETime_AllowJoin", DbType="Time NOT NULL")]
		public System.TimeSpan ETime_AllowJoin
		{
			get
			{
				return this._ETime_AllowJoin;
			}
			set
			{
				if ((this._ETime_AllowJoin != value))
				{
					this.OnETime_AllowJoinChanging(value);
					this.SendPropertyChanging();
					this._ETime_AllowJoin = value;
					this.SendPropertyChanged("ETime_AllowJoin");
					this.OnETime_AllowJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_MID", DbType="Int NOT NULL")]
		public int Location_MID
		{
			get
			{
				return this._Location_MID;
			}
			set
			{
				if ((this._Location_MID != value))
				{
					this.OnLocation_MIDChanging(value);
					this.SendPropertyChanging();
					this._Location_MID = value;
					this.SendPropertyChanged("Location_MID");
					this.OnLocation_MIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_URL", DbType="NVarChar(300)")]
		public string Location_URL
		{
			get
			{
				return this._Location_URL;
			}
			set
			{
				if ((this._Location_URL != value))
				{
					this.OnLocation_URLChanging(value);
					this.SendPropertyChanging();
					this._Location_URL = value;
					this.SendPropertyChanged("Location_URL");
					this.OnLocation_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Note", DbType="NVarChar(300)")]
		public string Location_Note
		{
			get
			{
				return this._Location_Note;
			}
			set
			{
				if ((this._Location_Note != value))
				{
					this.OnLocation_NoteChanging(value);
					this.SendPropertyChanging();
					this._Location_Note = value;
					this.SendPropertyChanged("Location_Note");
					this.OnLocation_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(300)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Event_Join_Header", Storage="_Event_Join_Header", ThisKey="EID", OtherKey="EID")]
		public EntitySet<Event_Join_Header> Event_Join_Header
		{
			get
			{
				return this._Event_Join_Header;
			}
			set
			{
				this._Event_Join_Header.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Category_Event", Storage="_Event_Category", ThisKey="ECID", OtherKey="ECID", IsForeignKey=true)]
		public Event_Category Event_Category
		{
			get
			{
				return this._Event_Category.Entity;
			}
			set
			{
				Event_Category previousValue = this._Event_Category.Entity;
				if (((previousValue != value) 
							|| (this._Event_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event_Category.Entity = null;
						previousValue.Event.Remove(this);
					}
					this._Event_Category.Entity = value;
					if ((value != null))
					{
						value.Event.Add(this);
						this._ECID = value.ECID;
					}
					else
					{
						this._ECID = default(int);
					}
					this.SendPropertyChanged("Event_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_Join_Header(Event_Join_Header entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_Event_Join_Header(Event_Join_Header entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Category")]
	public partial class Event_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ECID;
		
		private string _Code;
		
		private string _Title;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Event> _Event;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnECIDChanging(int value);
    partial void OnECIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Event_Category()
		{
			this._Event = new EntitySet<Event>(new Action<Event>(this.attach_Event), new Action<Event>(this.detach_Event));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ECID
		{
			get
			{
				return this._ECID;
			}
			set
			{
				if ((this._ECID != value))
				{
					this.OnECIDChanging(value);
					this.SendPropertyChanging();
					this._ECID = value;
					this.SendPropertyChanged("ECID");
					this.OnECIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Category_Event", Storage="_Event", ThisKey="ECID", OtherKey="ECID")]
		public EntitySet<Event> Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				this._Event.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event(Event entity)
		{
			this.SendPropertyChanging();
			entity.Event_Category = this;
		}
		
		private void detach_Event(Event entity)
		{
			this.SendPropertyChanging();
			entity.Event_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Join_Detail")]
	public partial class Event_Join_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EJDID;
		
		private int _EJHID;
		
		private int _ACID;
		
		private string _Name;
		
		private string _PhoneNo;
		
		private bool _DeleteFlag;
		
		private System.DateTime _JoinDate;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Event_Join_Header> _Event_Join_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEJDIDChanging(int value);
    partial void OnEJDIDChanged();
    partial void OnEJHIDChanging(int value);
    partial void OnEJHIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Event_Join_Detail()
		{
			this._Event_Join_Header = default(EntityRef<Event_Join_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EJDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EJDID
		{
			get
			{
				return this._EJDID;
			}
			set
			{
				if ((this._EJDID != value))
				{
					this.OnEJDIDChanging(value);
					this.SendPropertyChanging();
					this._EJDID = value;
					this.SendPropertyChanged("EJDID");
					this.OnEJDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EJHID", DbType="Int NOT NULL")]
		public int EJHID
		{
			get
			{
				return this._EJHID;
			}
			set
			{
				if ((this._EJHID != value))
				{
					if (this._Event_Join_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEJHIDChanging(value);
					this.SendPropertyChanging();
					this._EJHID = value;
					this.SendPropertyChanged("EJHID");
					this.OnEJHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(50)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Join_Header_Event_Join_Detail", Storage="_Event_Join_Header", ThisKey="EJHID", OtherKey="EJHID", IsForeignKey=true)]
		public Event_Join_Header Event_Join_Header
		{
			get
			{
				return this._Event_Join_Header.Entity;
			}
			set
			{
				Event_Join_Header previousValue = this._Event_Join_Header.Entity;
				if (((previousValue != value) 
							|| (this._Event_Join_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event_Join_Header.Entity = null;
						previousValue.Event_Join_Detail.Remove(this);
					}
					this._Event_Join_Header.Entity = value;
					if ((value != null))
					{
						value.Event_Join_Detail.Add(this);
						this._EJHID = value.EJHID;
					}
					else
					{
						this._EJHID = default(int);
					}
					this.SendPropertyChanged("Event_Join_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Join_Header")]
	public partial class Event_Join_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EJHID;
		
		private int _EID;
		
		private int _TargetType;
		
		private int _TargetID;
		
		private System.Nullable<int> _OIID;
		
		private System.DateTime _EventDate;
		
		private string _Note;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Event_Join_Detail> _Event_Join_Detail;
		
		private EntityRef<Event> _Event;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEJHIDChanging(int value);
    partial void OnEJHIDChanged();
    partial void OnEIDChanging(int value);
    partial void OnEIDChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnOIIDChanging(System.Nullable<int> value);
    partial void OnOIIDChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Event_Join_Header()
		{
			this._Event_Join_Detail = new EntitySet<Event_Join_Detail>(new Action<Event_Join_Detail>(this.attach_Event_Join_Detail), new Action<Event_Join_Detail>(this.detach_Event_Join_Detail));
			this._Event = default(EntityRef<Event>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EJHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EJHID
		{
			get
			{
				return this._EJHID;
			}
			set
			{
				if ((this._EJHID != value))
				{
					this.OnEJHIDChanging(value);
					this.SendPropertyChanging();
					this._EJHID = value;
					this.SendPropertyChanged("EJHID");
					this.OnEJHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", DbType="Int NOT NULL")]
		public int EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int")]
		public System.Nullable<int> OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="Date NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(300)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Join_Header_Event_Join_Detail", Storage="_Event_Join_Detail", ThisKey="EJHID", OtherKey="EJHID")]
		public EntitySet<Event_Join_Detail> Event_Join_Detail
		{
			get
			{
				return this._Event_Join_Detail;
			}
			set
			{
				this._Event_Join_Detail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Event_Join_Header", Storage="_Event", ThisKey="EID", OtherKey="EID", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Event_Join_Header.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Event_Join_Header.Add(this);
						this._EID = value.EID;
					}
					else
					{
						this._EID = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_Join_Detail(Event_Join_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Event_Join_Header = this;
		}
		
		private void detach_Event_Join_Detail(Event_Join_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Event_Join_Header = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
	public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FID;
		
		private int _ACID;
		
		private string _Name;
		
		private string _IDNumber;
		
		private string _Login;
		
		private int _FamilyType;
		
		private string _FamilyTitle;
		
		private int _TargetACID;
		
		private int _SortNo;
		
		private bool _DeleteFlag;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFIDChanging(int value);
    partial void OnFIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDNumberChanging(string value);
    partial void OnIDNumberChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnFamilyTypeChanging(int value);
    partial void OnFamilyTypeChanged();
    partial void OnFamilyTitleChanging(string value);
    partial void OnFamilyTitleChanged();
    partial void OnTargetACIDChanging(int value);
    partial void OnTargetACIDChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Family()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FID
		{
			get
			{
				return this._FID;
			}
			set
			{
				if ((this._FID != value))
				{
					this.OnFIDChanging(value);
					this.SendPropertyChanging();
					this._FID = value;
					this.SendPropertyChanged("FID");
					this.OnFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(30)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(100)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyType", DbType="Int NOT NULL")]
		public int FamilyType
		{
			get
			{
				return this._FamilyType;
			}
			set
			{
				if ((this._FamilyType != value))
				{
					this.OnFamilyTypeChanging(value);
					this.SendPropertyChanging();
					this._FamilyType = value;
					this.SendPropertyChanged("FamilyType");
					this.OnFamilyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyTitle", DbType="NVarChar(50)")]
		public string FamilyTitle
		{
			get
			{
				return this._FamilyTitle;
			}
			set
			{
				if ((this._FamilyTitle != value))
				{
					this.OnFamilyTitleChanging(value);
					this.SendPropertyChanging();
					this._FamilyTitle = value;
					this.SendPropertyChanged("FamilyTitle");
					this.OnFamilyTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetACID", DbType="Int NOT NULL")]
		public int TargetACID
		{
			get
			{
				return this._TargetACID;
			}
			set
			{
				if ((this._TargetACID != value))
				{
					this.OnTargetACIDChanging(value);
					this.SendPropertyChanging();
					this._TargetACID = value;
					this.SendPropertyChanged("TargetACID");
					this.OnTargetACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Family", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Family.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Family.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JoinGroupWish")]
	public partial class JoinGroupWish : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JGWID;
		
		private int _ACID;
		
		private int _JoinType;
		
		private int _SortNo;
		
		private int _WeeklyNo;
		
		private int _TimeNo;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJGWIDChanging(int value);
    partial void OnJGWIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnJoinTypeChanging(int value);
    partial void OnJoinTypeChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnWeeklyNoChanging(int value);
    partial void OnWeeklyNoChanged();
    partial void OnTimeNoChanging(int value);
    partial void OnTimeNoChanged();
    #endregion
		
		public JoinGroupWish()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JGWID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JGWID
		{
			get
			{
				return this._JGWID;
			}
			set
			{
				if ((this._JGWID != value))
				{
					this.OnJGWIDChanging(value);
					this.SendPropertyChanging();
					this._JGWID = value;
					this.SendPropertyChanged("JGWID");
					this.OnJGWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinType", DbType="Int NOT NULL")]
		public int JoinType
		{
			get
			{
				return this._JoinType;
			}
			set
			{
				if ((this._JoinType != value))
				{
					this.OnJoinTypeChanging(value);
					this.SendPropertyChanging();
					this._JoinType = value;
					this.SendPropertyChanged("JoinType");
					this.OnJoinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyNo", DbType="Int NOT NULL")]
		public int WeeklyNo
		{
			get
			{
				return this._WeeklyNo;
			}
			set
			{
				if ((this._WeeklyNo != value))
				{
					this.OnWeeklyNoChanging(value);
					this.SendPropertyChanging();
					this._WeeklyNo = value;
					this.SendPropertyChanged("WeeklyNo");
					this.OnWeeklyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeNo", DbType="Int NOT NULL")]
		public int TimeNo
		{
			get
			{
				return this._TimeNo;
			}
			set
			{
				if ((this._TimeNo != value))
				{
					this.OnTimeNoChanging(value);
					this.SendPropertyChanging();
					this._TimeNo = value;
					this.SendPropertyChanged("TimeNo");
					this.OnTimeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_JoinGroupWish", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.JoinGroupWish.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.JoinGroupWish.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LID;
		
		private int _TargetType;
		
		private int _TargetID;
		
		private int _ZID;
		
		private string _Address;
		
		private EntityRef<ZipCode> _ZipCode;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLIDChanging(int value);
    partial void OnLIDChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnZIDChanging(int value);
    partial void OnZIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Location()
		{
			this._ZipCode = default(EntityRef<ZipCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LID
		{
			get
			{
				return this._LID;
			}
			set
			{
				if ((this._LID != value))
				{
					this.OnLIDChanging(value);
					this.SendPropertyChanging();
					this._LID = value;
					this.SendPropertyChanged("LID");
					this.OnLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZID", DbType="Int NOT NULL")]
		public int ZID
		{
			get
			{
				return this._ZID;
			}
			set
			{
				if ((this._ZID != value))
				{
					if (this._ZipCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZIDChanging(value);
					this.SendPropertyChanging();
					this._ZID = value;
					this.SendPropertyChanged("ZID");
					this.OnZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZipCode_Location", Storage="_ZipCode", ThisKey="ZID", OtherKey="ZID", IsForeignKey=true)]
		public ZipCode ZipCode
		{
			get
			{
				return this._ZipCode.Entity;
			}
			set
			{
				ZipCode previousValue = this._ZipCode.Entity;
				if (((previousValue != value) 
							|| (this._ZipCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZipCode.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._ZipCode.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._ZID = value.ZID;
					}
					else
					{
						this._ZID = default(int);
					}
					this.SendPropertyChanged("ZipCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_ML_Account")]
	public partial class M_ML_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _MLID;
		
		private int _ACID;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Meeting_Location> _Meeting_Location;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnMLIDChanging(int value);
    partial void OnMLIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_ML_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._Meeting_Location = default(EntityRef<Meeting_Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLID", DbType="Int NOT NULL")]
		public int MLID
		{
			get
			{
				return this._MLID;
			}
			set
			{
				if ((this._MLID != value))
				{
					if (this._Meeting_Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMLIDChanging(value);
					this.SendPropertyChanging();
					this._MLID = value;
					this.SendPropertyChanged("MLID");
					this.OnMLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_ML_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_ML_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_ML_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Location_M_ML_Account", Storage="_Meeting_Location", ThisKey="MLID", OtherKey="MLID", IsForeignKey=true)]
		public Meeting_Location Meeting_Location
		{
			get
			{
				return this._Meeting_Location.Entity;
			}
			set
			{
				Meeting_Location previousValue = this._Meeting_Location.Entity;
				if (((previousValue != value) 
							|| (this._Meeting_Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting_Location.Entity = null;
						previousValue.M_ML_Account.Remove(this);
					}
					this._Meeting_Location.Entity = value;
					if ((value != null))
					{
						value.M_ML_Account.Add(this);
						this._MLID = value.MLID;
					}
					else
					{
						this._MLID = default(int);
					}
					this.SendPropertyChanged("Meeting_Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_O_Account")]
	public partial class M_O_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _OID;
		
		private int _ACID;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Organize> _Organize;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public M_O_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._Organize = default(EntityRef<Organize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Int NOT NULL")]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					if (this._Organize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_O_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_O_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_O_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organize_M_O_Account", Storage="_Organize", ThisKey="OID", OtherKey="OID", IsForeignKey=true)]
		public Organize Organize
		{
			get
			{
				return this._Organize.Entity;
			}
			set
			{
				Organize previousValue = this._Organize.Entity;
				if (((previousValue != value) 
							|| (this._Organize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organize.Entity = null;
						previousValue.M_O_Account.Remove(this);
					}
					this._Organize.Entity = value;
					if ((value != null))
					{
						value.M_O_Account.Add(this);
						this._OID = value.OID;
					}
					else
					{
						this._OID = default(int);
					}
					this.SendPropertyChanged("Organize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_OI2_Account")]
	public partial class M_OI2_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _OIID;
		
		private int _ACID;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_OI2_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_OI2_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_OI2_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_OI2_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OI2_Account", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.M_OI2_Account.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.M_OI2_Account.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_OJT_Account")]
	public partial class M_OJT_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _OIID;
		
		private int _OJTID;
		
		private int _ACID;
		
		private System.DateTime _JoinDate;
		
		private System.DateTime _LeaveDate;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
		private EntityRef<OrganizeJobType> _OrganizeJobType;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnOJTIDChanging(int value);
    partial void OnOJTIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_OJT_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			this._OrganizeJobType = default(EntityRef<OrganizeJobType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OJTID", DbType="Int NOT NULL")]
		public int OJTID
		{
			get
			{
				return this._OJTID;
			}
			set
			{
				if ((this._OJTID != value))
				{
					if (this._OrganizeJobType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOJTIDChanging(value);
					this.SendPropertyChanging();
					this._OJTID = value;
					this.SendPropertyChanged("OJTID");
					this.OnOJTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_OJT_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_OJT_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_OJT_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OJT_Account", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.M_OJT_Account.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.M_OJT_Account.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeJobType_M_OJT_Account", Storage="_OrganizeJobType", ThisKey="OJTID", OtherKey="OJTID", IsForeignKey=true)]
		public OrganizeJobType OrganizeJobType
		{
			get
			{
				return this._OrganizeJobType.Entity;
			}
			set
			{
				OrganizeJobType previousValue = this._OrganizeJobType.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeJobType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeJobType.Entity = null;
						previousValue.M_OJT_Account.Remove(this);
					}
					this._OrganizeJobType.Entity = value;
					if ((value != null))
					{
						value.M_OJT_Account.Add(this);
						this._OJTID = value.OJTID;
					}
					else
					{
						this._OJTID = default(int);
					}
					this.SendPropertyChanged("OrganizeJobType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Product_PayType")]
	public partial class M_Product_PayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _PID;
		
		private int _PTID;
		
		private bool _ActiveFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<PayType> _PayType;
		
		private EntityRef<Product> _Product;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPTIDChanging(int value);
    partial void OnPTIDChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_Product_PayType()
		{
			this._PayType = default(EntityRef<PayType>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTID", DbType="Int NOT NULL")]
		public int PTID
		{
			get
			{
				return this._PTID;
			}
			set
			{
				if ((this._PTID != value))
				{
					if (this._PayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTIDChanging(value);
					this.SendPropertyChanging();
					this._PTID = value;
					this.SendPropertyChanged("PTID");
					this.OnPTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayType_M_Product_PayType", Storage="_PayType", ThisKey="PTID", OtherKey="PTID", IsForeignKey=true)]
		public PayType PayType
		{
			get
			{
				return this._PayType.Entity;
			}
			set
			{
				PayType previousValue = this._PayType.Entity;
				if (((previousValue != value) 
							|| (this._PayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayType.Entity = null;
						previousValue.M_Product_PayType.Remove(this);
					}
					this._PayType.Entity = value;
					if ((value != null))
					{
						value.M_Product_PayType.Add(this);
						this._PTID = value.PTID;
					}
					else
					{
						this._PTID = default(int);
					}
					this.SendPropertyChanged("PayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_M_Product_PayType", Storage="_Product", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.M_Product_PayType.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.M_Product_PayType.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Product_Teacher")]
	public partial class M_Product_Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _PID;
		
		private int _PCID;
		
		private int _TID;
		
		private string _Title;
		
		private string _Note;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product_Class> _Product_Class;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPCIDChanging(int value);
    partial void OnPCIDChanged();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_Product_Teacher()
		{
			this._Product = default(EntityRef<Product>);
			this._Product_Class = default(EntityRef<Product_Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCID", DbType="Int NOT NULL")]
		public int PCID
		{
			get
			{
				return this._PCID;
			}
			set
			{
				if ((this._PCID != value))
				{
					if (this._Product_Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCIDChanging(value);
					this.SendPropertyChanging();
					this._PCID = value;
					this.SendPropertyChanged("PCID");
					this.OnPCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", DbType="Int NOT NULL")]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_M_Product_Teacher", Storage="_Product", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.M_Product_Teacher.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.M_Product_Teacher.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Class_M_Product_Teacher", Storage="_Product_Class", ThisKey="PCID", OtherKey="PCID", IsForeignKey=true)]
		public Product_Class Product_Class
		{
			get
			{
				return this._Product_Class.Entity;
			}
			set
			{
				Product_Class previousValue = this._Product_Class.Entity;
				if (((previousValue != value) 
							|| (this._Product_Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Class.Entity = null;
						previousValue.M_Product_Teacher.Remove(this);
					}
					this._Product_Class.Entity = value;
					if ((value != null))
					{
						value.M_Product_Teacher.Add(this);
						this._PCID = value.PCID;
					}
					else
					{
						this._PCID = default(int);
					}
					this.SendPropertyChanged("Product_Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Role_Account")]
	public partial class M_Role_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _ACID;
		
		private int _RID;
		
		private System.DateTime _JoinDate;
		
		private System.DateTime _LeaveDate;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Role> _Role;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_Role_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int NOT NULL")]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_Role_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_Role_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_Role_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_M_Role_Account", Storage="_Role", ThisKey="RID", OtherKey="RID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.M_Role_Account.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.M_Role_Account.Add(this);
						this._RID = value.RID;
					}
					else
					{
						this._RID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Role_Menu")]
	public partial class M_Role_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MPMID;
		
		private int _RID;
		
		private int _MID;
		
		private bool _ShowFlag;
		
		private bool _AddFlag;
		
		private bool _EditFlag;
		
		private bool _DeleteFlag;
		
		private bool _PrintFlag;
		
		private bool _UploadFlag;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<Role> _Role;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMPMIDChanging(int value);
    partial void OnMPMIDChanged();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnShowFlagChanging(bool value);
    partial void OnShowFlagChanged();
    partial void OnAddFlagChanging(bool value);
    partial void OnAddFlagChanged();
    partial void OnEditFlagChanging(bool value);
    partial void OnEditFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnPrintFlagChanging(bool value);
    partial void OnPrintFlagChanged();
    partial void OnUploadFlagChanging(bool value);
    partial void OnUploadFlagChanged();
    #endregion
		
		public M_Role_Menu()
		{
			this._Menu = default(EntityRef<Menu>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPMID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MPMID
		{
			get
			{
				return this._MPMID;
			}
			set
			{
				if ((this._MPMID != value))
				{
					this.OnMPMIDChanging(value);
					this.SendPropertyChanging();
					this._MPMID = value;
					this.SendPropertyChanged("MPMID");
					this.OnMPMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int NOT NULL")]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", DbType="Int NOT NULL")]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowFlag", DbType="Bit NOT NULL")]
		public bool ShowFlag
		{
			get
			{
				return this._ShowFlag;
			}
			set
			{
				if ((this._ShowFlag != value))
				{
					this.OnShowFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowFlag = value;
					this.SendPropertyChanged("ShowFlag");
					this.OnShowFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddFlag", DbType="Bit NOT NULL")]
		public bool AddFlag
		{
			get
			{
				return this._AddFlag;
			}
			set
			{
				if ((this._AddFlag != value))
				{
					this.OnAddFlagChanging(value);
					this.SendPropertyChanging();
					this._AddFlag = value;
					this.SendPropertyChanged("AddFlag");
					this.OnAddFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditFlag", DbType="Bit NOT NULL")]
		public bool EditFlag
		{
			get
			{
				return this._EditFlag;
			}
			set
			{
				if ((this._EditFlag != value))
				{
					this.OnEditFlagChanging(value);
					this.SendPropertyChanging();
					this._EditFlag = value;
					this.SendPropertyChanged("EditFlag");
					this.OnEditFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintFlag", DbType="Bit NOT NULL")]
		public bool PrintFlag
		{
			get
			{
				return this._PrintFlag;
			}
			set
			{
				if ((this._PrintFlag != value))
				{
					this.OnPrintFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintFlag = value;
					this.SendPropertyChanged("PrintFlag");
					this.OnPrintFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadFlag", DbType="Bit NOT NULL")]
		public bool UploadFlag
		{
			get
			{
				return this._UploadFlag;
			}
			set
			{
				if ((this._UploadFlag != value))
				{
					this.OnUploadFlagChanging(value);
					this.SendPropertyChanging();
					this._UploadFlag = value;
					this.SendPropertyChanged("UploadFlag");
					this.OnUploadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_M_Role_Menu", Storage="_Menu", ThisKey="MID", OtherKey="MID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.M_Role_Menu.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.M_Role_Menu.Add(this);
						this._MID = value.MID;
					}
					else
					{
						this._MID = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_M_Role_Menu", Storage="_Role", ThisKey="RID", OtherKey="RID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.M_Role_Menu.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.M_Role_Menu.Add(this);
						this._RID = value.RID;
					}
					else
					{
						this._RID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meeting_Location")]
	public partial class Meeting_Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MLID;
		
		private string _Code;
		
		private string _Title;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_ML_Account> _M_ML_Account;
		
		private EntitySet<Meeting_Location_Set> _Meeting_Location_Set;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMLIDChanging(int value);
    partial void OnMLIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Meeting_Location()
		{
			this._M_ML_Account = new EntitySet<M_ML_Account>(new Action<M_ML_Account>(this.attach_M_ML_Account), new Action<M_ML_Account>(this.detach_M_ML_Account));
			this._Meeting_Location_Set = new EntitySet<Meeting_Location_Set>(new Action<Meeting_Location_Set>(this.attach_Meeting_Location_Set), new Action<Meeting_Location_Set>(this.detach_Meeting_Location_Set));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MLID
		{
			get
			{
				return this._MLID;
			}
			set
			{
				if ((this._MLID != value))
				{
					this.OnMLIDChanging(value);
					this.SendPropertyChanging();
					this._MLID = value;
					this.SendPropertyChanged("MLID");
					this.OnMLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(30)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Location_M_ML_Account", Storage="_M_ML_Account", ThisKey="MLID", OtherKey="MLID")]
		public EntitySet<M_ML_Account> M_ML_Account
		{
			get
			{
				return this._M_ML_Account;
			}
			set
			{
				this._M_ML_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Location_Meeting_Location_Set", Storage="_Meeting_Location_Set", ThisKey="MLID", OtherKey="MLID")]
		public EntitySet<Meeting_Location_Set> Meeting_Location_Set
		{
			get
			{
				return this._Meeting_Location_Set;
			}
			set
			{
				this._Meeting_Location_Set.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_ML_Account(M_ML_Account entity)
		{
			this.SendPropertyChanging();
			entity.Meeting_Location = this;
		}
		
		private void detach_M_ML_Account(M_ML_Account entity)
		{
			this.SendPropertyChanging();
			entity.Meeting_Location = null;
		}
		
		private void attach_Meeting_Location_Set(Meeting_Location_Set entity)
		{
			this.SendPropertyChanging();
			entity.Meeting_Location = this;
		}
		
		private void detach_Meeting_Location_Set(Meeting_Location_Set entity)
		{
			this.SendPropertyChanging();
			entity.Meeting_Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meeting_Location_Set")]
	public partial class Meeting_Location_Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MLSID;
		
		private int _MLID;
		
		private int _SetType;
		
		private int _OIID;
		
		private int _WeeklyNo;
		
		private int _TimeNo;
		
		private int _S_hour;
		
		private int _S_minute;
		
		private int _E_hour;
		
		private int _E_minute;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Meeting_Location_Used> _Meeting_Location_Used;
		
		private EntityRef<Meeting_Location> _Meeting_Location;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMLSIDChanging(int value);
    partial void OnMLSIDChanged();
    partial void OnMLIDChanging(int value);
    partial void OnMLIDChanged();
    partial void OnSetTypeChanging(int value);
    partial void OnSetTypeChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnWeeklyNoChanging(int value);
    partial void OnWeeklyNoChanged();
    partial void OnTimeNoChanging(int value);
    partial void OnTimeNoChanged();
    partial void OnS_hourChanging(int value);
    partial void OnS_hourChanged();
    partial void OnS_minuteChanging(int value);
    partial void OnS_minuteChanged();
    partial void OnE_hourChanging(int value);
    partial void OnE_hourChanged();
    partial void OnE_minuteChanging(int value);
    partial void OnE_minuteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Meeting_Location_Set()
		{
			this._Meeting_Location_Used = new EntitySet<Meeting_Location_Used>(new Action<Meeting_Location_Used>(this.attach_Meeting_Location_Used), new Action<Meeting_Location_Used>(this.detach_Meeting_Location_Used));
			this._Meeting_Location = default(EntityRef<Meeting_Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MLSID
		{
			get
			{
				return this._MLSID;
			}
			set
			{
				if ((this._MLSID != value))
				{
					this.OnMLSIDChanging(value);
					this.SendPropertyChanging();
					this._MLSID = value;
					this.SendPropertyChanged("MLSID");
					this.OnMLSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLID", DbType="Int NOT NULL")]
		public int MLID
		{
			get
			{
				return this._MLID;
			}
			set
			{
				if ((this._MLID != value))
				{
					if (this._Meeting_Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMLIDChanging(value);
					this.SendPropertyChanging();
					this._MLID = value;
					this.SendPropertyChanged("MLID");
					this.OnMLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetType", DbType="Int NOT NULL")]
		public int SetType
		{
			get
			{
				return this._SetType;
			}
			set
			{
				if ((this._SetType != value))
				{
					this.OnSetTypeChanging(value);
					this.SendPropertyChanging();
					this._SetType = value;
					this.SendPropertyChanged("SetType");
					this.OnSetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyNo", DbType="Int NOT NULL")]
		public int WeeklyNo
		{
			get
			{
				return this._WeeklyNo;
			}
			set
			{
				if ((this._WeeklyNo != value))
				{
					this.OnWeeklyNoChanging(value);
					this.SendPropertyChanging();
					this._WeeklyNo = value;
					this.SendPropertyChanged("WeeklyNo");
					this.OnWeeklyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeNo", DbType="Int NOT NULL")]
		public int TimeNo
		{
			get
			{
				return this._TimeNo;
			}
			set
			{
				if ((this._TimeNo != value))
				{
					this.OnTimeNoChanging(value);
					this.SendPropertyChanging();
					this._TimeNo = value;
					this.SendPropertyChanged("TimeNo");
					this.OnTimeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_hour", DbType="Int NOT NULL")]
		public int S_hour
		{
			get
			{
				return this._S_hour;
			}
			set
			{
				if ((this._S_hour != value))
				{
					this.OnS_hourChanging(value);
					this.SendPropertyChanging();
					this._S_hour = value;
					this.SendPropertyChanged("S_hour");
					this.OnS_hourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_minute", DbType="Int NOT NULL")]
		public int S_minute
		{
			get
			{
				return this._S_minute;
			}
			set
			{
				if ((this._S_minute != value))
				{
					this.OnS_minuteChanging(value);
					this.SendPropertyChanging();
					this._S_minute = value;
					this.SendPropertyChanged("S_minute");
					this.OnS_minuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_hour", DbType="Int NOT NULL")]
		public int E_hour
		{
			get
			{
				return this._E_hour;
			}
			set
			{
				if ((this._E_hour != value))
				{
					this.OnE_hourChanging(value);
					this.SendPropertyChanging();
					this._E_hour = value;
					this.SendPropertyChanged("E_hour");
					this.OnE_hourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_minute", DbType="Int NOT NULL")]
		public int E_minute
		{
			get
			{
				return this._E_minute;
			}
			set
			{
				if ((this._E_minute != value))
				{
					this.OnE_minuteChanging(value);
					this.SendPropertyChanging();
					this._E_minute = value;
					this.SendPropertyChanged("E_minute");
					this.OnE_minuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Location_Set_Meeting_Location_Used", Storage="_Meeting_Location_Used", ThisKey="MLSID", OtherKey="MLSID")]
		public EntitySet<Meeting_Location_Used> Meeting_Location_Used
		{
			get
			{
				return this._Meeting_Location_Used;
			}
			set
			{
				this._Meeting_Location_Used.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Location_Meeting_Location_Set", Storage="_Meeting_Location", ThisKey="MLID", OtherKey="MLID", IsForeignKey=true)]
		public Meeting_Location Meeting_Location
		{
			get
			{
				return this._Meeting_Location.Entity;
			}
			set
			{
				Meeting_Location previousValue = this._Meeting_Location.Entity;
				if (((previousValue != value) 
							|| (this._Meeting_Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting_Location.Entity = null;
						previousValue.Meeting_Location_Set.Remove(this);
					}
					this._Meeting_Location.Entity = value;
					if ((value != null))
					{
						value.Meeting_Location_Set.Add(this);
						this._MLID = value.MLID;
					}
					else
					{
						this._MLID = default(int);
					}
					this.SendPropertyChanged("Meeting_Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meeting_Location_Used(Meeting_Location_Used entity)
		{
			this.SendPropertyChanging();
			entity.Meeting_Location_Set = this;
		}
		
		private void detach_Meeting_Location_Used(Meeting_Location_Used entity)
		{
			this.SendPropertyChanging();
			entity.Meeting_Location_Set = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meeting_Location_Used")]
	public partial class Meeting_Location_Used : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MLUID;
		
		private int _MLSID;
		
		private string _Title;
		
		private System.DateTime _S_DateTime;
		
		private System.DateTime _E_DateTime;
		
		private int _JoinCt_Child;
		
		private int _JoinCt_Juiner;
		
		private int _JoinCt_Aldult;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Meeting_Location_Set> _Meeting_Location_Set;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMLUIDChanging(int value);
    partial void OnMLUIDChanged();
    partial void OnMLSIDChanging(int value);
    partial void OnMLSIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnS_DateTimeChanging(System.DateTime value);
    partial void OnS_DateTimeChanged();
    partial void OnE_DateTimeChanging(System.DateTime value);
    partial void OnE_DateTimeChanged();
    partial void OnJoinCt_ChildChanging(int value);
    partial void OnJoinCt_ChildChanged();
    partial void OnJoinCt_JuinerChanging(int value);
    partial void OnJoinCt_JuinerChanged();
    partial void OnJoinCt_AldultChanging(int value);
    partial void OnJoinCt_AldultChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Meeting_Location_Used()
		{
			this._Meeting_Location_Set = default(EntityRef<Meeting_Location_Set>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MLUID
		{
			get
			{
				return this._MLUID;
			}
			set
			{
				if ((this._MLUID != value))
				{
					this.OnMLUIDChanging(value);
					this.SendPropertyChanging();
					this._MLUID = value;
					this.SendPropertyChanged("MLUID");
					this.OnMLUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLSID", DbType="Int NOT NULL")]
		public int MLSID
		{
			get
			{
				return this._MLSID;
			}
			set
			{
				if ((this._MLSID != value))
				{
					if (this._Meeting_Location_Set.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMLSIDChanging(value);
					this.SendPropertyChanging();
					this._MLSID = value;
					this.SendPropertyChanged("MLSID");
					this.OnMLSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime S_DateTime
		{
			get
			{
				return this._S_DateTime;
			}
			set
			{
				if ((this._S_DateTime != value))
				{
					this.OnS_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._S_DateTime = value;
					this.SendPropertyChanged("S_DateTime");
					this.OnS_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime E_DateTime
		{
			get
			{
				return this._E_DateTime;
			}
			set
			{
				if ((this._E_DateTime != value))
				{
					this.OnE_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._E_DateTime = value;
					this.SendPropertyChanged("E_DateTime");
					this.OnE_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinCt_Child", DbType="Int NOT NULL")]
		public int JoinCt_Child
		{
			get
			{
				return this._JoinCt_Child;
			}
			set
			{
				if ((this._JoinCt_Child != value))
				{
					this.OnJoinCt_ChildChanging(value);
					this.SendPropertyChanging();
					this._JoinCt_Child = value;
					this.SendPropertyChanged("JoinCt_Child");
					this.OnJoinCt_ChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinCt_Juiner", DbType="Int NOT NULL")]
		public int JoinCt_Juiner
		{
			get
			{
				return this._JoinCt_Juiner;
			}
			set
			{
				if ((this._JoinCt_Juiner != value))
				{
					this.OnJoinCt_JuinerChanging(value);
					this.SendPropertyChanging();
					this._JoinCt_Juiner = value;
					this.SendPropertyChanged("JoinCt_Juiner");
					this.OnJoinCt_JuinerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinCt_Aldult", DbType="Int NOT NULL")]
		public int JoinCt_Aldult
		{
			get
			{
				return this._JoinCt_Aldult;
			}
			set
			{
				if ((this._JoinCt_Aldult != value))
				{
					this.OnJoinCt_AldultChanging(value);
					this.SendPropertyChanging();
					this._JoinCt_Aldult = value;
					this.SendPropertyChanged("JoinCt_Aldult");
					this.OnJoinCt_AldultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Location_Set_Meeting_Location_Used", Storage="_Meeting_Location_Set", ThisKey="MLSID", OtherKey="MLSID", IsForeignKey=true)]
		public Meeting_Location_Set Meeting_Location_Set
		{
			get
			{
				return this._Meeting_Location_Set.Entity;
			}
			set
			{
				Meeting_Location_Set previousValue = this._Meeting_Location_Set.Entity;
				if (((previousValue != value) 
							|| (this._Meeting_Location_Set.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting_Location_Set.Entity = null;
						previousValue.Meeting_Location_Used.Remove(this);
					}
					this._Meeting_Location_Set.Entity = value;
					if ((value != null))
					{
						value.Meeting_Location_Used.Add(this);
						this._MLSID = value.MLSID;
					}
					else
					{
						this._MLSID = default(int);
					}
					this.SendPropertyChanged("Meeting_Location_Set");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _ParentID;
		
		private int _MenuType;
		
		private string _Title;
		
		private string _URL;
		
		private string _ImgURL;
		
		private int _SortNo;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_Role_Menu> _M_Role_Menu;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnMenuTypeChanging(int value);
    partial void OnMenuTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnImgURLChanging(string value);
    partial void OnImgURLChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Menu()
		{
			this._M_Role_Menu = new EntitySet<M_Role_Menu>(new Action<M_Role_Menu>(this.attach_M_Role_Menu), new Action<M_Role_Menu>(this.detach_M_Role_Menu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuType", DbType="Int NOT NULL")]
		public int MenuType
		{
			get
			{
				return this._MenuType;
			}
			set
			{
				if ((this._MenuType != value))
				{
					this.OnMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._MenuType = value;
					this.SendPropertyChanged("MenuType");
					this.OnMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgURL", DbType="NVarChar(50)")]
		public string ImgURL
		{
			get
			{
				return this._ImgURL;
			}
			set
			{
				if ((this._ImgURL != value))
				{
					this.OnImgURLChanging(value);
					this.SendPropertyChanging();
					this._ImgURL = value;
					this.SendPropertyChanged("ImgURL");
					this.OnImgURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_M_Role_Menu", Storage="_M_Role_Menu", ThisKey="MID", OtherKey="MID")]
		public EntitySet<M_Role_Menu> M_Role_Menu
		{
			get
			{
				return this._M_Role_Menu;
			}
			set
			{
				this._M_Role_Menu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Role_Menu(M_Role_Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_M_Role_Menu(M_Role_Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Header")]
	public partial class Order_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OHID;
		
		private int _OIID;
		
		private int _ACID;
		
		private int _Order_Type;
		
		private int _TotalPrice;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Order_Paid> _Order_Paid;
		
		private EntitySet<Order_Product> _Order_Product;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOHIDChanging(int value);
    partial void OnOHIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnOrder_TypeChanging(int value);
    partial void OnOrder_TypeChanged();
    partial void OnTotalPriceChanging(int value);
    partial void OnTotalPriceChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Order_Header()
		{
			this._Order_Paid = new EntitySet<Order_Paid>(new Action<Order_Paid>(this.attach_Order_Paid), new Action<Order_Paid>(this.detach_Order_Paid));
			this._Order_Product = new EntitySet<Order_Product>(new Action<Order_Product>(this.attach_Order_Product), new Action<Order_Product>(this.detach_Order_Product));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OHID
		{
			get
			{
				return this._OHID;
			}
			set
			{
				if ((this._OHID != value))
				{
					this.OnOHIDChanging(value);
					this.SendPropertyChanging();
					this._OHID = value;
					this.SendPropertyChanged("OHID");
					this.OnOHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type", DbType="Int NOT NULL")]
		public int Order_Type
		{
			get
			{
				return this._Order_Type;
			}
			set
			{
				if ((this._Order_Type != value))
				{
					this.OnOrder_TypeChanging(value);
					this.SendPropertyChanging();
					this._Order_Type = value;
					this.SendPropertyChanged("Order_Type");
					this.OnOrder_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Int NOT NULL")]
		public int TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Header_Order_Paid", Storage="_Order_Paid", ThisKey="OHID", OtherKey="OHID")]
		public EntitySet<Order_Paid> Order_Paid
		{
			get
			{
				return this._Order_Paid;
			}
			set
			{
				this._Order_Paid.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Header_Order_Product", Storage="_Order_Product", ThisKey="OHID", OtherKey="OHID")]
		public EntitySet<Order_Product> Order_Product
		{
			get
			{
				return this._Order_Product;
			}
			set
			{
				this._Order_Product.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order_Header", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Order_Header.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Order_Header.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Paid(Order_Paid entity)
		{
			this.SendPropertyChanging();
			entity.Order_Header = this;
		}
		
		private void detach_Order_Paid(Order_Paid entity)
		{
			this.SendPropertyChanging();
			entity.Order_Header = null;
		}
		
		private void attach_Order_Product(Order_Product entity)
		{
			this.SendPropertyChanging();
			entity.Order_Header = this;
		}
		
		private void detach_Order_Product(Order_Product entity)
		{
			this.SendPropertyChanging();
			entity.Order_Header = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Join")]
	public partial class Order_Join : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OJID;
		
		private int _OPID;
		
		private int _PCTID;
		
		private int _ACID;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Order_Product> _Order_Product;
		
		private EntityRef<Product_ClassTime> _Product_ClassTime;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOJIDChanging(int value);
    partial void OnOJIDChanged();
    partial void OnOPIDChanging(int value);
    partial void OnOPIDChanged();
    partial void OnPCTIDChanging(int value);
    partial void OnPCTIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Order_Join()
		{
			this._Order_Product = default(EntityRef<Order_Product>);
			this._Product_ClassTime = default(EntityRef<Product_ClassTime>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OJID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OJID
		{
			get
			{
				return this._OJID;
			}
			set
			{
				if ((this._OJID != value))
				{
					this.OnOJIDChanging(value);
					this.SendPropertyChanging();
					this._OJID = value;
					this.SendPropertyChanged("OJID");
					this.OnOJIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPID", DbType="Int NOT NULL")]
		public int OPID
		{
			get
			{
				return this._OPID;
			}
			set
			{
				if ((this._OPID != value))
				{
					if (this._Order_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOPIDChanging(value);
					this.SendPropertyChanging();
					this._OPID = value;
					this.SendPropertyChanged("OPID");
					this.OnOPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCTID", DbType="Int NOT NULL")]
		public int PCTID
		{
			get
			{
				return this._PCTID;
			}
			set
			{
				if ((this._PCTID != value))
				{
					if (this._Product_ClassTime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCTIDChanging(value);
					this.SendPropertyChanging();
					this._PCTID = value;
					this.SendPropertyChanged("PCTID");
					this.OnPCTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Product_Order_Join", Storage="_Order_Product", ThisKey="OPID", OtherKey="OPID", IsForeignKey=true)]
		public Order_Product Order_Product
		{
			get
			{
				return this._Order_Product.Entity;
			}
			set
			{
				Order_Product previousValue = this._Order_Product.Entity;
				if (((previousValue != value) 
							|| (this._Order_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Product.Entity = null;
						previousValue.Order_Join.Remove(this);
					}
					this._Order_Product.Entity = value;
					if ((value != null))
					{
						value.Order_Join.Add(this);
						this._OPID = value.OPID;
					}
					else
					{
						this._OPID = default(int);
					}
					this.SendPropertyChanged("Order_Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ClassTime_Order_Join", Storage="_Product_ClassTime", ThisKey="PCTID", OtherKey="PCTID", IsForeignKey=true)]
		public Product_ClassTime Product_ClassTime
		{
			get
			{
				return this._Product_ClassTime.Entity;
			}
			set
			{
				Product_ClassTime previousValue = this._Product_ClassTime.Entity;
				if (((previousValue != value) 
							|| (this._Product_ClassTime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_ClassTime.Entity = null;
						previousValue.Order_Join.Remove(this);
					}
					this._Product_ClassTime.Entity = value;
					if ((value != null))
					{
						value.Order_Join.Add(this);
						this._PCTID = value.PCTID;
					}
					else
					{
						this._PCTID = default(int);
					}
					this.SendPropertyChanged("Product_ClassTime");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Paid")]
	public partial class Order_Paid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OPID;
		
		private int _OHID;
		
		private int _PTID;
		
		private bool _PaidFlag;
		
		private System.DateTime _PaidDateTime;
		
		private string _TradeNo;
		
		private double _TradeAmt;
		
		private double _PayAmt;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private EntitySet<Order_PaidDetail> _Order_PaidDetail;
		
		private EntityRef<Order_Header> _Order_Header;
		
		private EntityRef<PayType> _PayType;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOPIDChanging(int value);
    partial void OnOPIDChanged();
    partial void OnOHIDChanging(int value);
    partial void OnOHIDChanged();
    partial void OnPTIDChanging(int value);
    partial void OnPTIDChanged();
    partial void OnPaidFlagChanging(bool value);
    partial void OnPaidFlagChanged();
    partial void OnPaidDateTimeChanging(System.DateTime value);
    partial void OnPaidDateTimeChanged();
    partial void OnTradeNoChanging(string value);
    partial void OnTradeNoChanged();
    partial void OnTradeAmtChanging(double value);
    partial void OnTradeAmtChanged();
    partial void OnPayAmtChanging(double value);
    partial void OnPayAmtChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    #endregion
		
		public Order_Paid()
		{
			this._Order_PaidDetail = new EntitySet<Order_PaidDetail>(new Action<Order_PaidDetail>(this.attach_Order_PaidDetail), new Action<Order_PaidDetail>(this.detach_Order_PaidDetail));
			this._Order_Header = default(EntityRef<Order_Header>);
			this._PayType = default(EntityRef<PayType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OPID
		{
			get
			{
				return this._OPID;
			}
			set
			{
				if ((this._OPID != value))
				{
					this.OnOPIDChanging(value);
					this.SendPropertyChanging();
					this._OPID = value;
					this.SendPropertyChanged("OPID");
					this.OnOPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OHID", DbType="Int NOT NULL")]
		public int OHID
		{
			get
			{
				return this._OHID;
			}
			set
			{
				if ((this._OHID != value))
				{
					if (this._Order_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOHIDChanging(value);
					this.SendPropertyChanging();
					this._OHID = value;
					this.SendPropertyChanged("OHID");
					this.OnOHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTID", DbType="Int NOT NULL")]
		public int PTID
		{
			get
			{
				return this._PTID;
			}
			set
			{
				if ((this._PTID != value))
				{
					if (this._PayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTIDChanging(value);
					this.SendPropertyChanging();
					this._PTID = value;
					this.SendPropertyChanged("PTID");
					this.OnPTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidFlag", DbType="Bit NOT NULL")]
		public bool PaidFlag
		{
			get
			{
				return this._PaidFlag;
			}
			set
			{
				if ((this._PaidFlag != value))
				{
					this.OnPaidFlagChanging(value);
					this.SendPropertyChanging();
					this._PaidFlag = value;
					this.SendPropertyChanged("PaidFlag");
					this.OnPaidFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime PaidDateTime
		{
			get
			{
				return this._PaidDateTime;
			}
			set
			{
				if ((this._PaidDateTime != value))
				{
					this.OnPaidDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PaidDateTime = value;
					this.SendPropertyChanged("PaidDateTime");
					this.OnPaidDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeNo", DbType="VarChar(100)")]
		public string TradeNo
		{
			get
			{
				return this._TradeNo;
			}
			set
			{
				if ((this._TradeNo != value))
				{
					this.OnTradeNoChanging(value);
					this.SendPropertyChanging();
					this._TradeNo = value;
					this.SendPropertyChanged("TradeNo");
					this.OnTradeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeAmt", DbType="Float NOT NULL")]
		public double TradeAmt
		{
			get
			{
				return this._TradeAmt;
			}
			set
			{
				if ((this._TradeAmt != value))
				{
					this.OnTradeAmtChanging(value);
					this.SendPropertyChanging();
					this._TradeAmt = value;
					this.SendPropertyChanged("TradeAmt");
					this.OnTradeAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayAmt", DbType="Float NOT NULL")]
		public double PayAmt
		{
			get
			{
				return this._PayAmt;
			}
			set
			{
				if ((this._PayAmt != value))
				{
					this.OnPayAmtChanging(value);
					this.SendPropertyChanging();
					this._PayAmt = value;
					this.SendPropertyChanged("PayAmt");
					this.OnPayAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Paid_Order_PaidDetail", Storage="_Order_PaidDetail", ThisKey="OPID", OtherKey="OPID")]
		public EntitySet<Order_PaidDetail> Order_PaidDetail
		{
			get
			{
				return this._Order_PaidDetail;
			}
			set
			{
				this._Order_PaidDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Header_Order_Paid", Storage="_Order_Header", ThisKey="OHID", OtherKey="OHID", IsForeignKey=true)]
		public Order_Header Order_Header
		{
			get
			{
				return this._Order_Header.Entity;
			}
			set
			{
				Order_Header previousValue = this._Order_Header.Entity;
				if (((previousValue != value) 
							|| (this._Order_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Header.Entity = null;
						previousValue.Order_Paid.Remove(this);
					}
					this._Order_Header.Entity = value;
					if ((value != null))
					{
						value.Order_Paid.Add(this);
						this._OHID = value.OHID;
					}
					else
					{
						this._OHID = default(int);
					}
					this.SendPropertyChanged("Order_Header");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayType_Order_Paid", Storage="_PayType", ThisKey="PTID", OtherKey="PTID", IsForeignKey=true)]
		public PayType PayType
		{
			get
			{
				return this._PayType.Entity;
			}
			set
			{
				PayType previousValue = this._PayType.Entity;
				if (((previousValue != value) 
							|| (this._PayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayType.Entity = null;
						previousValue.Order_Paid.Remove(this);
					}
					this._PayType.Entity = value;
					if ((value != null))
					{
						value.Order_Paid.Add(this);
						this._PTID = value.PTID;
					}
					else
					{
						this._PTID = default(int);
					}
					this.SendPropertyChanged("PayType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_PaidDetail(Order_PaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order_Paid = this;
		}
		
		private void detach_Order_PaidDetail(Order_PaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order_Paid = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_PaidDetail")]
	public partial class Order_PaidDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OPDID;
		
		private int _OPID;
		
		private int _OPDType;
		
		private string _Title;
		
		private string _Description;
		
		private EntityRef<Order_Paid> _Order_Paid;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOPDIDChanging(int value);
    partial void OnOPDIDChanged();
    partial void OnOPIDChanging(int value);
    partial void OnOPIDChanged();
    partial void OnOPDTypeChanging(int value);
    partial void OnOPDTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Order_PaidDetail()
		{
			this._Order_Paid = default(EntityRef<Order_Paid>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OPDID
		{
			get
			{
				return this._OPDID;
			}
			set
			{
				if ((this._OPDID != value))
				{
					this.OnOPDIDChanging(value);
					this.SendPropertyChanging();
					this._OPDID = value;
					this.SendPropertyChanged("OPDID");
					this.OnOPDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPID", DbType="Int NOT NULL")]
		public int OPID
		{
			get
			{
				return this._OPID;
			}
			set
			{
				if ((this._OPID != value))
				{
					if (this._Order_Paid.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOPIDChanging(value);
					this.SendPropertyChanging();
					this._OPID = value;
					this.SendPropertyChanged("OPID");
					this.OnOPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPDType", DbType="Int NOT NULL")]
		public int OPDType
		{
			get
			{
				return this._OPDType;
			}
			set
			{
				if ((this._OPDType != value))
				{
					this.OnOPDTypeChanging(value);
					this.SendPropertyChanging();
					this._OPDType = value;
					this.SendPropertyChanged("OPDType");
					this.OnOPDTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Paid_Order_PaidDetail", Storage="_Order_Paid", ThisKey="OPID", OtherKey="OPID", IsForeignKey=true)]
		public Order_Paid Order_Paid
		{
			get
			{
				return this._Order_Paid.Entity;
			}
			set
			{
				Order_Paid previousValue = this._Order_Paid.Entity;
				if (((previousValue != value) 
							|| (this._Order_Paid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Paid.Entity = null;
						previousValue.Order_PaidDetail.Remove(this);
					}
					this._Order_Paid.Entity = value;
					if ((value != null))
					{
						value.Order_PaidDetail.Add(this);
						this._OPID = value.OPID;
					}
					else
					{
						this._OPID = default(int);
					}
					this.SendPropertyChanged("Order_Paid");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Product")]
	public partial class Order_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OPID;
		
		private int _OHID;
		
		private int _PID;
		
		private int _PCID;
		
		private int _CHID;
		
		private int _Price_Basic;
		
		private int _Price_Finally;
		
		private int _Price_Type;
		
		private string _Price_Note;
		
		private bool _Graduation_Flag;
		
		private System.DateTime _Graduation_Date;
		
		private int _Graduation_ACID;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Order_Join> _Order_Join;
		
		private EntityRef<Order_Header> _Order_Header;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product_Class> _Product_Class;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOPIDChanging(int value);
    partial void OnOPIDChanged();
    partial void OnOHIDChanging(int value);
    partial void OnOHIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPCIDChanging(int value);
    partial void OnPCIDChanged();
    partial void OnCRIDChanging(int value);
    partial void OnCRIDChanged();
    partial void OnPrice_BasicChanging(int value);
    partial void OnPrice_BasicChanged();
    partial void OnPrice_FinallyChanging(int value);
    partial void OnPrice_FinallyChanged();
    partial void OnPrice_TypeChanging(int value);
    partial void OnPrice_TypeChanged();
    partial void OnPrice_NoteChanging(string value);
    partial void OnPrice_NoteChanged();
    partial void OnGraduation_FlagChanging(bool value);
    partial void OnGraduation_FlagChanged();
    partial void OnGraduation_DateChanging(System.DateTime value);
    partial void OnGraduation_DateChanged();
    partial void OnGraduation_ACIDChanging(int value);
    partial void OnGraduation_ACIDChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Order_Product()
		{
			this._Order_Join = new EntitySet<Order_Join>(new Action<Order_Join>(this.attach_Order_Join), new Action<Order_Join>(this.detach_Order_Join));
			this._Order_Header = default(EntityRef<Order_Header>);
			this._Product = default(EntityRef<Product>);
			this._Product_Class = default(EntityRef<Product_Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OPID
		{
			get
			{
				return this._OPID;
			}
			set
			{
				if ((this._OPID != value))
				{
					this.OnOPIDChanging(value);
					this.SendPropertyChanging();
					this._OPID = value;
					this.SendPropertyChanged("OPID");
					this.OnOPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OHID", DbType="Int NOT NULL")]
		public int OHID
		{
			get
			{
				return this._OHID;
			}
			set
			{
				if ((this._OHID != value))
				{
					if (this._Order_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOHIDChanging(value);
					this.SendPropertyChanging();
					this._OHID = value;
					this.SendPropertyChanged("OHID");
					this.OnOHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCID", DbType="Int NOT NULL")]
		public int PCID
		{
			get
			{
				return this._PCID;
			}
			set
			{
				if ((this._PCID != value))
				{
					if (this._Product_Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCIDChanging(value);
					this.SendPropertyChanging();
					this._PCID = value;
					this.SendPropertyChanged("PCID");
					this.OnPCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHID", DbType="Int NOT NULL")]
		public int CRID
		{
			get
			{
				return this._CHID;
			}
			set
			{
				if ((this._CHID != value))
				{
					this.OnCRIDChanging(value);
					this.SendPropertyChanging();
					this._CHID = value;
					this.SendPropertyChanged("CRID");
					this.OnCRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Basic", DbType="Int NOT NULL")]
		public int Price_Basic
		{
			get
			{
				return this._Price_Basic;
			}
			set
			{
				if ((this._Price_Basic != value))
				{
					this.OnPrice_BasicChanging(value);
					this.SendPropertyChanging();
					this._Price_Basic = value;
					this.SendPropertyChanged("Price_Basic");
					this.OnPrice_BasicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Finally", DbType="Int NOT NULL")]
		public int Price_Finally
		{
			get
			{
				return this._Price_Finally;
			}
			set
			{
				if ((this._Price_Finally != value))
				{
					this.OnPrice_FinallyChanging(value);
					this.SendPropertyChanging();
					this._Price_Finally = value;
					this.SendPropertyChanged("Price_Finally");
					this.OnPrice_FinallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Type", DbType="Int NOT NULL")]
		public int Price_Type
		{
			get
			{
				return this._Price_Type;
			}
			set
			{
				if ((this._Price_Type != value))
				{
					this.OnPrice_TypeChanging(value);
					this.SendPropertyChanging();
					this._Price_Type = value;
					this.SendPropertyChanged("Price_Type");
					this.OnPrice_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Note", DbType="NVarChar(MAX)")]
		public string Price_Note
		{
			get
			{
				return this._Price_Note;
			}
			set
			{
				if ((this._Price_Note != value))
				{
					this.OnPrice_NoteChanging(value);
					this.SendPropertyChanging();
					this._Price_Note = value;
					this.SendPropertyChanged("Price_Note");
					this.OnPrice_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Graduation_Flag", DbType="Bit NOT NULL")]
		public bool Graduation_Flag
		{
			get
			{
				return this._Graduation_Flag;
			}
			set
			{
				if ((this._Graduation_Flag != value))
				{
					this.OnGraduation_FlagChanging(value);
					this.SendPropertyChanging();
					this._Graduation_Flag = value;
					this.SendPropertyChanged("Graduation_Flag");
					this.OnGraduation_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Graduation_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Graduation_Date
		{
			get
			{
				return this._Graduation_Date;
			}
			set
			{
				if ((this._Graduation_Date != value))
				{
					this.OnGraduation_DateChanging(value);
					this.SendPropertyChanging();
					this._Graduation_Date = value;
					this.SendPropertyChanged("Graduation_Date");
					this.OnGraduation_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Graduation_ACID", DbType="Int NOT NULL")]
		public int Graduation_ACID
		{
			get
			{
				return this._Graduation_ACID;
			}
			set
			{
				if ((this._Graduation_ACID != value))
				{
					this.OnGraduation_ACIDChanging(value);
					this.SendPropertyChanging();
					this._Graduation_ACID = value;
					this.SendPropertyChanged("Graduation_ACID");
					this.OnGraduation_ACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Product_Order_Join", Storage="_Order_Join", ThisKey="OPID", OtherKey="OPID")]
		public EntitySet<Order_Join> Order_Join
		{
			get
			{
				return this._Order_Join;
			}
			set
			{
				this._Order_Join.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Header_Order_Product", Storage="_Order_Header", ThisKey="OHID", OtherKey="OHID", IsForeignKey=true)]
		public Order_Header Order_Header
		{
			get
			{
				return this._Order_Header.Entity;
			}
			set
			{
				Order_Header previousValue = this._Order_Header.Entity;
				if (((previousValue != value) 
							|| (this._Order_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Header.Entity = null;
						previousValue.Order_Product.Remove(this);
					}
					this._Order_Header.Entity = value;
					if ((value != null))
					{
						value.Order_Product.Add(this);
						this._OHID = value.OHID;
					}
					else
					{
						this._OHID = default(int);
					}
					this.SendPropertyChanged("Order_Header");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Product", Storage="_Product", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Order_Product.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Order_Product.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Class_Order_Product", Storage="_Product_Class", ThisKey="PCID", OtherKey="PCID", IsForeignKey=true)]
		public Product_Class Product_Class
		{
			get
			{
				return this._Product_Class.Entity;
			}
			set
			{
				Product_Class previousValue = this._Product_Class.Entity;
				if (((previousValue != value) 
							|| (this._Product_Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Class.Entity = null;
						previousValue.Order_Product.Remove(this);
					}
					this._Product_Class.Entity = value;
					if ((value != null))
					{
						value.Order_Product.Add(this);
						this._PCID = value.PCID;
					}
					else
					{
						this._PCID = default(int);
					}
					this.SendPropertyChanged("Product_Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Join(Order_Join entity)
		{
			this.SendPropertyChanging();
			entity.Order_Product = this;
		}
		
		private void detach_Order_Join(Order_Join entity)
		{
			this.SendPropertyChanging();
			entity.Order_Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organize")]
	public partial class Organize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private int _ParentID;
		
		private string _Title;
		
		private string _JobTitle;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_O_Account> _M_O_Account;
		
		private EntitySet<OrganizeInfo> _OrganizeInfo;
		
		private EntitySet<OrganizeJobType> _OrganizeJobType;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Organize()
		{
			this._M_O_Account = new EntitySet<M_O_Account>(new Action<M_O_Account>(this.attach_M_O_Account), new Action<M_O_Account>(this.detach_M_O_Account));
			this._OrganizeInfo = new EntitySet<OrganizeInfo>(new Action<OrganizeInfo>(this.attach_OrganizeInfo), new Action<OrganizeInfo>(this.detach_OrganizeInfo));
			this._OrganizeJobType = new EntitySet<OrganizeJobType>(new Action<OrganizeJobType>(this.attach_OrganizeJobType), new Action<OrganizeJobType>(this.detach_OrganizeJobType));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(10)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organize_M_O_Account", Storage="_M_O_Account", ThisKey="OID", OtherKey="OID")]
		public EntitySet<M_O_Account> M_O_Account
		{
			get
			{
				return this._M_O_Account;
			}
			set
			{
				this._M_O_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organize_OrganizeInfo", Storage="_OrganizeInfo", ThisKey="OID", OtherKey="OID")]
		public EntitySet<OrganizeInfo> OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo;
			}
			set
			{
				this._OrganizeInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organize_OrganizeJobType", Storage="_OrganizeJobType", ThisKey="OID", OtherKey="OID")]
		public EntitySet<OrganizeJobType> OrganizeJobType
		{
			get
			{
				return this._OrganizeJobType;
			}
			set
			{
				this._OrganizeJobType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_O_Account(M_O_Account entity)
		{
			this.SendPropertyChanging();
			entity.Organize = this;
		}
		
		private void detach_M_O_Account(M_O_Account entity)
		{
			this.SendPropertyChanging();
			entity.Organize = null;
		}
		
		private void attach_OrganizeInfo(OrganizeInfo entity)
		{
			this.SendPropertyChanging();
			entity.Organize = this;
		}
		
		private void detach_OrganizeInfo(OrganizeInfo entity)
		{
			this.SendPropertyChanging();
			entity.Organize = null;
		}
		
		private void attach_OrganizeJobType(OrganizeJobType entity)
		{
			this.SendPropertyChanging();
			entity.Organize = this;
		}
		
		private void detach_OrganizeJobType(OrganizeJobType entity)
		{
			this.SendPropertyChanging();
			entity.Organize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizeInfo")]
	public partial class OrganizeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OIID;
		
		private int _OID;
		
		private int _ParentID;
		
		private System.Nullable<int> _OI2_ID;
		
		private string _Title;
		
		private int _ACID;
		
		private string _Note;
		
		private int _BusinessType;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private int _OldID;
		
		private EntitySet<Change_OI_Order> _Change_OI_Order;
		
		private EntitySet<Change_OI_Order> _Change_OI_Order1;
		
		private EntitySet<M_OI2_Account> _M_OI2_Account;
		
		private EntitySet<M_OJT_Account> _M_OJT_Account;
		
		private EntitySet<PayType> _PayType;
		
		private EntitySet<Product> _Product;
		
		private EntitySet<M_OI_Coupon> _M_OI_Coupon;
		
		private EntitySet<M_Staff_Account> _M_Staff_Account;
		
		private EntitySet<Log_BusinessType_Header> _Log_BusinessType_Header;
		
		private EntitySet<M_OI_Account> _M_OI_Account;
		
		private EntitySet<Log_OrganizeInfo_ACID> _Log_OrganizeInfo_ACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Organize> _Organize;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnOI2_IDChanging(System.Nullable<int> value);
    partial void OnOI2_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnBusinessTypeChanging(int value);
    partial void OnBusinessTypeChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    partial void OnOldIDChanging(int value);
    partial void OnOldIDChanged();
    #endregion
		
		public OrganizeInfo()
		{
			this._Change_OI_Order = new EntitySet<Change_OI_Order>(new Action<Change_OI_Order>(this.attach_Change_OI_Order), new Action<Change_OI_Order>(this.detach_Change_OI_Order));
			this._Change_OI_Order1 = new EntitySet<Change_OI_Order>(new Action<Change_OI_Order>(this.attach_Change_OI_Order1), new Action<Change_OI_Order>(this.detach_Change_OI_Order1));
			this._M_OI2_Account = new EntitySet<M_OI2_Account>(new Action<M_OI2_Account>(this.attach_M_OI2_Account), new Action<M_OI2_Account>(this.detach_M_OI2_Account));
			this._M_OJT_Account = new EntitySet<M_OJT_Account>(new Action<M_OJT_Account>(this.attach_M_OJT_Account), new Action<M_OJT_Account>(this.detach_M_OJT_Account));
			this._PayType = new EntitySet<PayType>(new Action<PayType>(this.attach_PayType), new Action<PayType>(this.detach_PayType));
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			this._M_OI_Coupon = new EntitySet<M_OI_Coupon>(new Action<M_OI_Coupon>(this.attach_M_OI_Coupon), new Action<M_OI_Coupon>(this.detach_M_OI_Coupon));
			this._M_Staff_Account = new EntitySet<M_Staff_Account>(new Action<M_Staff_Account>(this.attach_M_Staff_Account), new Action<M_Staff_Account>(this.detach_M_Staff_Account));
			this._Log_BusinessType_Header = new EntitySet<Log_BusinessType_Header>(new Action<Log_BusinessType_Header>(this.attach_Log_BusinessType_Header), new Action<Log_BusinessType_Header>(this.detach_Log_BusinessType_Header));
			this._M_OI_Account = new EntitySet<M_OI_Account>(new Action<M_OI_Account>(this.attach_M_OI_Account), new Action<M_OI_Account>(this.detach_M_OI_Account));
			this._Log_OrganizeInfo_ACID = new EntitySet<Log_OrganizeInfo_ACID>(new Action<Log_OrganizeInfo_ACID>(this.attach_Log_OrganizeInfo_ACID), new Action<Log_OrganizeInfo_ACID>(this.detach_Log_OrganizeInfo_ACID));
			this._Account = default(EntityRef<Account>);
			this._Organize = default(EntityRef<Organize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Int NOT NULL")]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					if (this._Organize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OI2_ID", DbType="Int")]
		public System.Nullable<int> OI2_ID
		{
			get
			{
				return this._OI2_ID;
			}
			set
			{
				if ((this._OI2_ID != value))
				{
					this.OnOI2_IDChanging(value);
					this.SendPropertyChanging();
					this._OI2_ID = value;
					this.SendPropertyChanged("OI2_ID");
					this.OnOI2_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessType", DbType="Int NOT NULL")]
		public int BusinessType
		{
			get
			{
				return this._BusinessType;
			}
			set
			{
				if ((this._BusinessType != value))
				{
					this.OnBusinessTypeChanging(value);
					this.SendPropertyChanging();
					this._BusinessType = value;
					this.SendPropertyChanged("BusinessType");
					this.OnBusinessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int NOT NULL")]
		public int OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Change_OI_Order", Storage="_Change_OI_Order", ThisKey="OIID", OtherKey="From_OIID")]
		public EntitySet<Change_OI_Order> Change_OI_Order
		{
			get
			{
				return this._Change_OI_Order;
			}
			set
			{
				this._Change_OI_Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Change_OI_Order1", Storage="_Change_OI_Order1", ThisKey="OIID", OtherKey="To_OIID")]
		public EntitySet<Change_OI_Order> Change_OI_Order1
		{
			get
			{
				return this._Change_OI_Order1;
			}
			set
			{
				this._Change_OI_Order1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OI2_Account", Storage="_M_OI2_Account", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<M_OI2_Account> M_OI2_Account
		{
			get
			{
				return this._M_OI2_Account;
			}
			set
			{
				this._M_OI2_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OJT_Account", Storage="_M_OJT_Account", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<M_OJT_Account> M_OJT_Account
		{
			get
			{
				return this._M_OJT_Account;
			}
			set
			{
				this._M_OJT_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_PayType", Storage="_PayType", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<PayType> PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				this._PayType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Product", Storage="_Product", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OI_Coupon", Storage="_M_OI_Coupon", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<M_OI_Coupon> M_OI_Coupon
		{
			get
			{
				return this._M_OI_Coupon;
			}
			set
			{
				this._M_OI_Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_Staff_Account", Storage="_M_Staff_Account", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<M_Staff_Account> M_Staff_Account
		{
			get
			{
				return this._M_Staff_Account;
			}
			set
			{
				this._M_Staff_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Log_BusinessType_Header", Storage="_Log_BusinessType_Header", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<Log_BusinessType_Header> Log_BusinessType_Header
		{
			get
			{
				return this._Log_BusinessType_Header;
			}
			set
			{
				this._Log_BusinessType_Header.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OI_Account", Storage="_M_OI_Account", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<M_OI_Account> M_OI_Account
		{
			get
			{
				return this._M_OI_Account;
			}
			set
			{
				this._M_OI_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Log_OrganizeInfo_ACID", Storage="_Log_OrganizeInfo_ACID", ThisKey="OIID", OtherKey="OIID")]
		public EntitySet<Log_OrganizeInfo_ACID> Log_OrganizeInfo_ACID
		{
			get
			{
				return this._Log_OrganizeInfo_ACID;
			}
			set
			{
				this._Log_OrganizeInfo_ACID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_OrganizeInfo", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.OrganizeInfo.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.OrganizeInfo.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organize_OrganizeInfo", Storage="_Organize", ThisKey="OID", OtherKey="OID", IsForeignKey=true)]
		public Organize Organize
		{
			get
			{
				return this._Organize.Entity;
			}
			set
			{
				Organize previousValue = this._Organize.Entity;
				if (((previousValue != value) 
							|| (this._Organize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organize.Entity = null;
						previousValue.OrganizeInfo.Remove(this);
					}
					this._Organize.Entity = value;
					if ((value != null))
					{
						value.OrganizeInfo.Add(this);
						this._OID = value.OID;
					}
					else
					{
						this._OID = default(int);
					}
					this.SendPropertyChanged("Organize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Change_OI_Order(Change_OI_Order entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_Change_OI_Order(Change_OI_Order entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_Change_OI_Order1(Change_OI_Order entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo1 = this;
		}
		
		private void detach_Change_OI_Order1(Change_OI_Order entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo1 = null;
		}
		
		private void attach_M_OI2_Account(M_OI2_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_M_OI2_Account(M_OI2_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_M_OJT_Account(M_OJT_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_M_OJT_Account(M_OJT_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_PayType(PayType entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_PayType(PayType entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_M_OI_Coupon(M_OI_Coupon entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_M_OI_Coupon(M_OI_Coupon entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_M_Staff_Account(M_Staff_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_M_Staff_Account(M_Staff_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_Log_BusinessType_Header(Log_BusinessType_Header entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_Log_BusinessType_Header(Log_BusinessType_Header entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_M_OI_Account(M_OI_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_M_OI_Account(M_OI_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
		
		private void attach_Log_OrganizeInfo_ACID(Log_OrganizeInfo_ACID entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = this;
		}
		
		private void detach_Log_OrganizeInfo_ACID(Log_OrganizeInfo_ACID entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizeJobType")]
	public partial class OrganizeJobType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OJTID;
		
		private int _OID;
		
		private string _Title;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_OJT_Account> _M_OJT_Account;
		
		private EntityRef<Organize> _Organize;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOJTIDChanging(int value);
    partial void OnOJTIDChanged();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public OrganizeJobType()
		{
			this._M_OJT_Account = new EntitySet<M_OJT_Account>(new Action<M_OJT_Account>(this.attach_M_OJT_Account), new Action<M_OJT_Account>(this.detach_M_OJT_Account));
			this._Organize = default(EntityRef<Organize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OJTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OJTID
		{
			get
			{
				return this._OJTID;
			}
			set
			{
				if ((this._OJTID != value))
				{
					this.OnOJTIDChanging(value);
					this.SendPropertyChanging();
					this._OJTID = value;
					this.SendPropertyChanged("OJTID");
					this.OnOJTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Int NOT NULL")]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					if (this._Organize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeJobType_M_OJT_Account", Storage="_M_OJT_Account", ThisKey="OJTID", OtherKey="OJTID")]
		public EntitySet<M_OJT_Account> M_OJT_Account
		{
			get
			{
				return this._M_OJT_Account;
			}
			set
			{
				this._M_OJT_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organize_OrganizeJobType", Storage="_Organize", ThisKey="OID", OtherKey="OID", IsForeignKey=true)]
		public Organize Organize
		{
			get
			{
				return this._Organize.Entity;
			}
			set
			{
				Organize previousValue = this._Organize.Entity;
				if (((previousValue != value) 
							|| (this._Organize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organize.Entity = null;
						previousValue.OrganizeJobType.Remove(this);
					}
					this._Organize.Entity = value;
					if ((value != null))
					{
						value.OrganizeJobType.Add(this);
						this._OID = value.OID;
					}
					else
					{
						this._OID = default(int);
					}
					this.SendPropertyChanged("Organize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_OJT_Account(M_OJT_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeJobType = this;
		}
		
		private void detach_M_OJT_Account(M_OJT_Account entity)
		{
			this.SendPropertyChanging();
			entity.OrganizeJobType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayType")]
	public partial class PayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PTID;
		
		private int _OIID;
		
		private int _PayTypeID;
		
		private string _Title;
		
		private string _Note;
		
		private string _TargetURL;
		
		private string _BackURL;
		
		private string _MerchantID;
		
		private string _HashKey;
		
		private string _HashIV;
		
		private string _PayKey1;
		
		private string _PayKey2;
		
		private string _PayKey3;
		
		private string _PayKey4;
		
		private string _PayKey5;
		
		private int _EndPayDay;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_Product_PayType> _M_Product_PayType;
		
		private EntitySet<Order_Paid> _Order_Paid;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPTIDChanging(int value);
    partial void OnPTIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnPayTypeIDChanging(int value);
    partial void OnPayTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnTargetURLChanging(string value);
    partial void OnTargetURLChanged();
    partial void OnBackURLChanging(string value);
    partial void OnBackURLChanged();
    partial void OnMerchantIDChanging(string value);
    partial void OnMerchantIDChanged();
    partial void OnHashKeyChanging(string value);
    partial void OnHashKeyChanged();
    partial void OnHashIVChanging(string value);
    partial void OnHashIVChanged();
    partial void OnPayKey1Changing(string value);
    partial void OnPayKey1Changed();
    partial void OnPayKey2Changing(string value);
    partial void OnPayKey2Changed();
    partial void OnPayKey3Changing(string value);
    partial void OnPayKey3Changed();
    partial void OnPayKey4Changing(string value);
    partial void OnPayKey4Changed();
    partial void OnPayKey5Changing(string value);
    partial void OnPayKey5Changed();
    partial void OnEndPayDayChanging(int value);
    partial void OnEndPayDayChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public PayType()
		{
			this._M_Product_PayType = new EntitySet<M_Product_PayType>(new Action<M_Product_PayType>(this.attach_M_Product_PayType), new Action<M_Product_PayType>(this.detach_M_Product_PayType));
			this._Order_Paid = new EntitySet<Order_Paid>(new Action<Order_Paid>(this.attach_Order_Paid), new Action<Order_Paid>(this.detach_Order_Paid));
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PTID
		{
			get
			{
				return this._PTID;
			}
			set
			{
				if ((this._PTID != value))
				{
					this.OnPTIDChanging(value);
					this.SendPropertyChanging();
					this._PTID = value;
					this.SendPropertyChanged("PTID");
					this.OnPTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeID", DbType="Int NOT NULL")]
		public int PayTypeID
		{
			get
			{
				return this._PayTypeID;
			}
			set
			{
				if ((this._PayTypeID != value))
				{
					this.OnPayTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PayTypeID = value;
					this.SendPropertyChanged("PayTypeID");
					this.OnPayTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetURL", DbType="VarChar(200)")]
		public string TargetURL
		{
			get
			{
				return this._TargetURL;
			}
			set
			{
				if ((this._TargetURL != value))
				{
					this.OnTargetURLChanging(value);
					this.SendPropertyChanging();
					this._TargetURL = value;
					this.SendPropertyChanged("TargetURL");
					this.OnTargetURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackURL", DbType="VarChar(200)")]
		public string BackURL
		{
			get
			{
				return this._BackURL;
			}
			set
			{
				if ((this._BackURL != value))
				{
					this.OnBackURLChanging(value);
					this.SendPropertyChanging();
					this._BackURL = value;
					this.SendPropertyChanged("BackURL");
					this.OnBackURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantID", DbType="VarChar(100)")]
		public string MerchantID
		{
			get
			{
				return this._MerchantID;
			}
			set
			{
				if ((this._MerchantID != value))
				{
					this.OnMerchantIDChanging(value);
					this.SendPropertyChanging();
					this._MerchantID = value;
					this.SendPropertyChanged("MerchantID");
					this.OnMerchantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashKey", DbType="VarChar(100)")]
		public string HashKey
		{
			get
			{
				return this._HashKey;
			}
			set
			{
				if ((this._HashKey != value))
				{
					this.OnHashKeyChanging(value);
					this.SendPropertyChanging();
					this._HashKey = value;
					this.SendPropertyChanged("HashKey");
					this.OnHashKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashIV", DbType="VarChar(100)")]
		public string HashIV
		{
			get
			{
				return this._HashIV;
			}
			set
			{
				if ((this._HashIV != value))
				{
					this.OnHashIVChanging(value);
					this.SendPropertyChanging();
					this._HashIV = value;
					this.SendPropertyChanged("HashIV");
					this.OnHashIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayKey1", DbType="VarChar(100)")]
		public string PayKey1
		{
			get
			{
				return this._PayKey1;
			}
			set
			{
				if ((this._PayKey1 != value))
				{
					this.OnPayKey1Changing(value);
					this.SendPropertyChanging();
					this._PayKey1 = value;
					this.SendPropertyChanged("PayKey1");
					this.OnPayKey1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayKey2", DbType="VarChar(100)")]
		public string PayKey2
		{
			get
			{
				return this._PayKey2;
			}
			set
			{
				if ((this._PayKey2 != value))
				{
					this.OnPayKey2Changing(value);
					this.SendPropertyChanging();
					this._PayKey2 = value;
					this.SendPropertyChanged("PayKey2");
					this.OnPayKey2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayKey3", DbType="VarChar(100)")]
		public string PayKey3
		{
			get
			{
				return this._PayKey3;
			}
			set
			{
				if ((this._PayKey3 != value))
				{
					this.OnPayKey3Changing(value);
					this.SendPropertyChanging();
					this._PayKey3 = value;
					this.SendPropertyChanged("PayKey3");
					this.OnPayKey3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayKey4", DbType="VarChar(100)")]
		public string PayKey4
		{
			get
			{
				return this._PayKey4;
			}
			set
			{
				if ((this._PayKey4 != value))
				{
					this.OnPayKey4Changing(value);
					this.SendPropertyChanging();
					this._PayKey4 = value;
					this.SendPropertyChanged("PayKey4");
					this.OnPayKey4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayKey5", DbType="VarChar(100)")]
		public string PayKey5
		{
			get
			{
				return this._PayKey5;
			}
			set
			{
				if ((this._PayKey5 != value))
				{
					this.OnPayKey5Changing(value);
					this.SendPropertyChanging();
					this._PayKey5 = value;
					this.SendPropertyChanged("PayKey5");
					this.OnPayKey5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPayDay", DbType="Int NOT NULL")]
		public int EndPayDay
		{
			get
			{
				return this._EndPayDay;
			}
			set
			{
				if ((this._EndPayDay != value))
				{
					this.OnEndPayDayChanging(value);
					this.SendPropertyChanging();
					this._EndPayDay = value;
					this.SendPropertyChanged("EndPayDay");
					this.OnEndPayDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayType_M_Product_PayType", Storage="_M_Product_PayType", ThisKey="PTID", OtherKey="PTID")]
		public EntitySet<M_Product_PayType> M_Product_PayType
		{
			get
			{
				return this._M_Product_PayType;
			}
			set
			{
				this._M_Product_PayType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayType_Order_Paid", Storage="_Order_Paid", ThisKey="PTID", OtherKey="PTID")]
		public EntitySet<Order_Paid> Order_Paid
		{
			get
			{
				return this._Order_Paid;
			}
			set
			{
				this._Order_Paid.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_PayType", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.PayType.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.PayType.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Product_PayType(M_Product_PayType entity)
		{
			this.SendPropertyChanging();
			entity.PayType = this;
		}
		
		private void detach_M_Product_PayType(M_Product_PayType entity)
		{
			this.SendPropertyChanging();
			entity.PayType = null;
		}
		
		private void attach_Order_Paid(Order_Paid entity)
		{
			this.SendPropertyChanging();
			entity.PayType = this;
		}
		
		private void detach_Order_Paid(Order_Paid entity)
		{
			this.SendPropertyChanging();
			entity.PayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PID;
		
		private int _CID;
		
		private int _OIID;
		
		private string _Title;
		
		private string _SubTitle;
		
		private int _ProductType;
		
		private string _ProductInfo;
		
		private string _TargetInfo;
		
		private string _GraduationInfo;
		
		private int _YearNo;
		
		private int _EchelonNo;
		
		private string _ImgURL;
		
		private int _Price_Basic;
		
		private int _Price_Early;
		
		private System.DateTime _SDate_Signup;
		
		private System.DateTime _EDate_Signup;
		
		private System.DateTime _SDate_Early;
		
		private System.DateTime _EDate_Early;
		
		private bool _ShowFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_Product_PayType> _M_Product_PayType;
		
		private EntitySet<M_Product_Teacher> _M_Product_Teacher;
		
		private EntitySet<Order_Product> _Order_Product;
		
		private EntitySet<Product_Class> _Product_Class;
		
		private EntitySet<Product_File> _Product_File;
		
		private EntitySet<Product_Rule> _Product_Rule;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubTitleChanging(string value);
    partial void OnSubTitleChanged();
    partial void OnProductTypeChanging(int value);
    partial void OnProductTypeChanged();
    partial void OnProductInfoChanging(string value);
    partial void OnProductInfoChanged();
    partial void OnTargetInfoChanging(string value);
    partial void OnTargetInfoChanged();
    partial void OnGraduationInfoChanging(string value);
    partial void OnGraduationInfoChanged();
    partial void OnYearNoChanging(int value);
    partial void OnYearNoChanged();
    partial void OnEchelonNoChanging(int value);
    partial void OnEchelonNoChanged();
    partial void OnImgURLChanging(string value);
    partial void OnImgURLChanged();
    partial void OnPrice_BasicChanging(int value);
    partial void OnPrice_BasicChanged();
    partial void OnPrice_EarlyChanging(int value);
    partial void OnPrice_EarlyChanged();
    partial void OnSDate_SignupChanging(System.DateTime value);
    partial void OnSDate_SignupChanged();
    partial void OnEDate_SignupChanging(System.DateTime value);
    partial void OnEDate_SignupChanged();
    partial void OnSDate_EarlyChanging(System.DateTime value);
    partial void OnSDate_EarlyChanged();
    partial void OnEDate_EarlyChanging(System.DateTime value);
    partial void OnEDate_EarlyChanged();
    partial void OnShowFlagChanging(bool value);
    partial void OnShowFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Product()
		{
			this._M_Product_PayType = new EntitySet<M_Product_PayType>(new Action<M_Product_PayType>(this.attach_M_Product_PayType), new Action<M_Product_PayType>(this.detach_M_Product_PayType));
			this._M_Product_Teacher = new EntitySet<M_Product_Teacher>(new Action<M_Product_Teacher>(this.attach_M_Product_Teacher), new Action<M_Product_Teacher>(this.detach_M_Product_Teacher));
			this._Order_Product = new EntitySet<Order_Product>(new Action<Order_Product>(this.attach_Order_Product), new Action<Order_Product>(this.detach_Order_Product));
			this._Product_Class = new EntitySet<Product_Class>(new Action<Product_Class>(this.attach_Product_Class), new Action<Product_Class>(this.detach_Product_Class));
			this._Product_File = new EntitySet<Product_File>(new Action<Product_File>(this.attach_Product_File), new Action<Product_File>(this.detach_Product_File));
			this._Product_Rule = new EntitySet<Product_Rule>(new Action<Product_Rule>(this.attach_Product_Rule), new Action<Product_Rule>(this.detach_Product_Rule));
			this._Course = default(EntityRef<Course>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTitle", DbType="NVarChar(50)")]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this.OnSubTitleChanging(value);
					this.SendPropertyChanging();
					this._SubTitle = value;
					this.SendPropertyChanged("SubTitle");
					this.OnSubTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="Int NOT NULL")]
		public int ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductInfo", DbType="NVarChar(MAX)")]
		public string ProductInfo
		{
			get
			{
				return this._ProductInfo;
			}
			set
			{
				if ((this._ProductInfo != value))
				{
					this.OnProductInfoChanging(value);
					this.SendPropertyChanging();
					this._ProductInfo = value;
					this.SendPropertyChanged("ProductInfo");
					this.OnProductInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInfo", DbType="NVarChar(MAX)")]
		public string TargetInfo
		{
			get
			{
				return this._TargetInfo;
			}
			set
			{
				if ((this._TargetInfo != value))
				{
					this.OnTargetInfoChanging(value);
					this.SendPropertyChanging();
					this._TargetInfo = value;
					this.SendPropertyChanged("TargetInfo");
					this.OnTargetInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduationInfo", DbType="NVarChar(MAX)")]
		public string GraduationInfo
		{
			get
			{
				return this._GraduationInfo;
			}
			set
			{
				if ((this._GraduationInfo != value))
				{
					this.OnGraduationInfoChanging(value);
					this.SendPropertyChanging();
					this._GraduationInfo = value;
					this.SendPropertyChanged("GraduationInfo");
					this.OnGraduationInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNo", DbType="Int NOT NULL")]
		public int YearNo
		{
			get
			{
				return this._YearNo;
			}
			set
			{
				if ((this._YearNo != value))
				{
					this.OnYearNoChanging(value);
					this.SendPropertyChanging();
					this._YearNo = value;
					this.SendPropertyChanged("YearNo");
					this.OnYearNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EchelonNo", DbType="Int NOT NULL")]
		public int EchelonNo
		{
			get
			{
				return this._EchelonNo;
			}
			set
			{
				if ((this._EchelonNo != value))
				{
					this.OnEchelonNoChanging(value);
					this.SendPropertyChanging();
					this._EchelonNo = value;
					this.SendPropertyChanged("EchelonNo");
					this.OnEchelonNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgURL", DbType="NVarChar(300)")]
		public string ImgURL
		{
			get
			{
				return this._ImgURL;
			}
			set
			{
				if ((this._ImgURL != value))
				{
					this.OnImgURLChanging(value);
					this.SendPropertyChanging();
					this._ImgURL = value;
					this.SendPropertyChanged("ImgURL");
					this.OnImgURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Basic", DbType="Int NOT NULL")]
		public int Price_Basic
		{
			get
			{
				return this._Price_Basic;
			}
			set
			{
				if ((this._Price_Basic != value))
				{
					this.OnPrice_BasicChanging(value);
					this.SendPropertyChanging();
					this._Price_Basic = value;
					this.SendPropertyChanged("Price_Basic");
					this.OnPrice_BasicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Early", DbType="Int NOT NULL")]
		public int Price_Early
		{
			get
			{
				return this._Price_Early;
			}
			set
			{
				if ((this._Price_Early != value))
				{
					this.OnPrice_EarlyChanging(value);
					this.SendPropertyChanging();
					this._Price_Early = value;
					this.SendPropertyChanged("Price_Early");
					this.OnPrice_EarlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDate_Signup", DbType="DateTime NOT NULL")]
		public System.DateTime SDate_Signup
		{
			get
			{
				return this._SDate_Signup;
			}
			set
			{
				if ((this._SDate_Signup != value))
				{
					this.OnSDate_SignupChanging(value);
					this.SendPropertyChanging();
					this._SDate_Signup = value;
					this.SendPropertyChanged("SDate_Signup");
					this.OnSDate_SignupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDate_Signup", DbType="DateTime NOT NULL")]
		public System.DateTime EDate_Signup
		{
			get
			{
				return this._EDate_Signup;
			}
			set
			{
				if ((this._EDate_Signup != value))
				{
					this.OnEDate_SignupChanging(value);
					this.SendPropertyChanging();
					this._EDate_Signup = value;
					this.SendPropertyChanged("EDate_Signup");
					this.OnEDate_SignupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDate_Early", DbType="DateTime NOT NULL")]
		public System.DateTime SDate_Early
		{
			get
			{
				return this._SDate_Early;
			}
			set
			{
				if ((this._SDate_Early != value))
				{
					this.OnSDate_EarlyChanging(value);
					this.SendPropertyChanging();
					this._SDate_Early = value;
					this.SendPropertyChanged("SDate_Early");
					this.OnSDate_EarlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDate_Early", DbType="DateTime NOT NULL")]
		public System.DateTime EDate_Early
		{
			get
			{
				return this._EDate_Early;
			}
			set
			{
				if ((this._EDate_Early != value))
				{
					this.OnEDate_EarlyChanging(value);
					this.SendPropertyChanging();
					this._EDate_Early = value;
					this.SendPropertyChanged("EDate_Early");
					this.OnEDate_EarlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowFlag", DbType="Bit NOT NULL")]
		public bool ShowFlag
		{
			get
			{
				return this._ShowFlag;
			}
			set
			{
				if ((this._ShowFlag != value))
				{
					this.OnShowFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowFlag = value;
					this.SendPropertyChanged("ShowFlag");
					this.OnShowFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_M_Product_PayType", Storage="_M_Product_PayType", ThisKey="PID", OtherKey="PID")]
		public EntitySet<M_Product_PayType> M_Product_PayType
		{
			get
			{
				return this._M_Product_PayType;
			}
			set
			{
				this._M_Product_PayType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_M_Product_Teacher", Storage="_M_Product_Teacher", ThisKey="PID", OtherKey="PID")]
		public EntitySet<M_Product_Teacher> M_Product_Teacher
		{
			get
			{
				return this._M_Product_Teacher;
			}
			set
			{
				this._M_Product_Teacher.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Product", Storage="_Order_Product", ThisKey="PID", OtherKey="PID")]
		public EntitySet<Order_Product> Order_Product
		{
			get
			{
				return this._Order_Product;
			}
			set
			{
				this._Order_Product.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Class", Storage="_Product_Class", ThisKey="PID", OtherKey="PID")]
		public EntitySet<Product_Class> Product_Class
		{
			get
			{
				return this._Product_Class;
			}
			set
			{
				this._Product_Class.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_File", Storage="_Product_File", ThisKey="PID", OtherKey="PID")]
		public EntitySet<Product_File> Product_File
		{
			get
			{
				return this._Product_File;
			}
			set
			{
				this._Product_File.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Rule", Storage="_Product_Rule", ThisKey="PID", OtherKey="PID")]
		public EntitySet<Product_Rule> Product_Rule
		{
			get
			{
				return this._Product_Rule;
			}
			set
			{
				this._Product_Rule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Product", Storage="_Course", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Product", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Product_PayType(M_Product_PayType entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_M_Product_PayType(M_Product_PayType entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_M_Product_Teacher(M_Product_Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_M_Product_Teacher(M_Product_Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Order_Product(Order_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Order_Product(Order_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_Class(Product_Class entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_Class(Product_Class entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_File(Product_File entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_File(Product_File entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_Rule(Product_Rule entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_Rule(Product_Rule entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Class")]
	public partial class Product_Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PCID;
		
		private int _PID;
		
		private string _Title;
		
		private int _PeopleCt;
		
		private string _PhoneNo;
		
		private string _LocationName;
		
		private string _Address;
		
		private string _MeetURL;
		
		private System.DateTime _GraduateDate;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_Product_Teacher> _M_Product_Teacher;
		
		private EntitySet<Order_Product> _Order_Product;
		
		private EntitySet<Product_ClassTime> _Product_ClassTime;
		
		private EntityRef<Product> _Product;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPCIDChanging(int value);
    partial void OnPCIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPeopleCtChanging(int value);
    partial void OnPeopleCtChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMeetURLChanging(string value);
    partial void OnMeetURLChanged();
    partial void OnGraduateDateChanging(System.DateTime value);
    partial void OnGraduateDateChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Product_Class()
		{
			this._M_Product_Teacher = new EntitySet<M_Product_Teacher>(new Action<M_Product_Teacher>(this.attach_M_Product_Teacher), new Action<M_Product_Teacher>(this.detach_M_Product_Teacher));
			this._Order_Product = new EntitySet<Order_Product>(new Action<Order_Product>(this.attach_Order_Product), new Action<Order_Product>(this.detach_Order_Product));
			this._Product_ClassTime = new EntitySet<Product_ClassTime>(new Action<Product_ClassTime>(this.attach_Product_ClassTime), new Action<Product_ClassTime>(this.detach_Product_ClassTime));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PCID
		{
			get
			{
				return this._PCID;
			}
			set
			{
				if ((this._PCID != value))
				{
					this.OnPCIDChanging(value);
					this.SendPropertyChanging();
					this._PCID = value;
					this.SendPropertyChanged("PCID");
					this.OnPCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeopleCt", DbType="Int NOT NULL")]
		public int PeopleCt
		{
			get
			{
				return this._PeopleCt;
			}
			set
			{
				if ((this._PeopleCt != value))
				{
					this.OnPeopleCtChanging(value);
					this.SendPropertyChanging();
					this._PeopleCt = value;
					this.SendPropertyChanged("PeopleCt");
					this.OnPeopleCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(100)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(100)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetURL", DbType="NVarChar(300)")]
		public string MeetURL
		{
			get
			{
				return this._MeetURL;
			}
			set
			{
				if ((this._MeetURL != value))
				{
					this.OnMeetURLChanging(value);
					this.SendPropertyChanging();
					this._MeetURL = value;
					this.SendPropertyChanged("MeetURL");
					this.OnMeetURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduateDate", DbType="DateTime NOT NULL")]
		public System.DateTime GraduateDate
		{
			get
			{
				return this._GraduateDate;
			}
			set
			{
				if ((this._GraduateDate != value))
				{
					this.OnGraduateDateChanging(value);
					this.SendPropertyChanging();
					this._GraduateDate = value;
					this.SendPropertyChanged("GraduateDate");
					this.OnGraduateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Class_M_Product_Teacher", Storage="_M_Product_Teacher", ThisKey="PCID", OtherKey="PCID")]
		public EntitySet<M_Product_Teacher> M_Product_Teacher
		{
			get
			{
				return this._M_Product_Teacher;
			}
			set
			{
				this._M_Product_Teacher.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Class_Order_Product", Storage="_Order_Product", ThisKey="PCID", OtherKey="PCID")]
		public EntitySet<Order_Product> Order_Product
		{
			get
			{
				return this._Order_Product;
			}
			set
			{
				this._Order_Product.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Class_Product_ClassTime", Storage="_Product_ClassTime", ThisKey="PCID", OtherKey="PCID")]
		public EntitySet<Product_ClassTime> Product_ClassTime
		{
			get
			{
				return this._Product_ClassTime;
			}
			set
			{
				this._Product_ClassTime.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Class", Storage="_Product", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_Class.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_Class.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Product_Teacher(M_Product_Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Product_Class = this;
		}
		
		private void detach_M_Product_Teacher(M_Product_Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Product_Class = null;
		}
		
		private void attach_Order_Product(Order_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product_Class = this;
		}
		
		private void detach_Order_Product(Order_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product_Class = null;
		}
		
		private void attach_Product_ClassTime(Product_ClassTime entity)
		{
			this.SendPropertyChanging();
			entity.Product_Class = this;
		}
		
		private void detach_Product_ClassTime(Product_ClassTime entity)
		{
			this.SendPropertyChanging();
			entity.Product_Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_ClassTime")]
	public partial class Product_ClassTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PCTID;
		
		private int _PCID;
		
		private System.DateTime _ClassDate;
		
		private System.TimeSpan _STime;
		
		private System.TimeSpan _ETime;
		
		private EntitySet<Order_Join> _Order_Join;
		
		private EntityRef<Product_Class> _Product_Class;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPCTIDChanging(int value);
    partial void OnPCTIDChanged();
    partial void OnPCIDChanging(int value);
    partial void OnPCIDChanged();
    partial void OnClassDateChanging(System.DateTime value);
    partial void OnClassDateChanged();
    partial void OnSTimeChanging(System.TimeSpan value);
    partial void OnSTimeChanged();
    partial void OnETimeChanging(System.TimeSpan value);
    partial void OnETimeChanged();
    #endregion
		
		public Product_ClassTime()
		{
			this._Order_Join = new EntitySet<Order_Join>(new Action<Order_Join>(this.attach_Order_Join), new Action<Order_Join>(this.detach_Order_Join));
			this._Product_Class = default(EntityRef<Product_Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PCTID
		{
			get
			{
				return this._PCTID;
			}
			set
			{
				if ((this._PCTID != value))
				{
					this.OnPCTIDChanging(value);
					this.SendPropertyChanging();
					this._PCTID = value;
					this.SendPropertyChanged("PCTID");
					this.OnPCTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCID", DbType="Int NOT NULL")]
		public int PCID
		{
			get
			{
				return this._PCID;
			}
			set
			{
				if ((this._PCID != value))
				{
					if (this._Product_Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCIDChanging(value);
					this.SendPropertyChanging();
					this._PCID = value;
					this.SendPropertyChanged("PCID");
					this.OnPCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDate", DbType="Date NOT NULL")]
		public System.DateTime ClassDate
		{
			get
			{
				return this._ClassDate;
			}
			set
			{
				if ((this._ClassDate != value))
				{
					this.OnClassDateChanging(value);
					this.SendPropertyChanging();
					this._ClassDate = value;
					this.SendPropertyChanged("ClassDate");
					this.OnClassDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STime", DbType="Time NOT NULL")]
		public System.TimeSpan STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETime", DbType="Time NOT NULL")]
		public System.TimeSpan ETime
		{
			get
			{
				return this._ETime;
			}
			set
			{
				if ((this._ETime != value))
				{
					this.OnETimeChanging(value);
					this.SendPropertyChanging();
					this._ETime = value;
					this.SendPropertyChanged("ETime");
					this.OnETimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ClassTime_Order_Join", Storage="_Order_Join", ThisKey="PCTID", OtherKey="PCTID")]
		public EntitySet<Order_Join> Order_Join
		{
			get
			{
				return this._Order_Join;
			}
			set
			{
				this._Order_Join.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Class_Product_ClassTime", Storage="_Product_Class", ThisKey="PCID", OtherKey="PCID", IsForeignKey=true)]
		public Product_Class Product_Class
		{
			get
			{
				return this._Product_Class.Entity;
			}
			set
			{
				Product_Class previousValue = this._Product_Class.Entity;
				if (((previousValue != value) 
							|| (this._Product_Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Class.Entity = null;
						previousValue.Product_ClassTime.Remove(this);
					}
					this._Product_Class.Entity = value;
					if ((value != null))
					{
						value.Product_ClassTime.Add(this);
						this._PCID = value.PCID;
					}
					else
					{
						this._PCID = default(int);
					}
					this.SendPropertyChanged("Product_Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Join(Order_Join entity)
		{
			this.SendPropertyChanging();
			entity.Product_ClassTime = this;
		}
		
		private void detach_Order_Join(Order_Join entity)
		{
			this.SendPropertyChanging();
			entity.Product_ClassTime = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_File")]
	public partial class Product_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PFID;
		
		private int _PID;
		
		private int _FileType;
		
		private string _FileURL;
		
		private bool _DownloadFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Product> _Product;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPFIDChanging(int value);
    partial void OnPFIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileURLChanging(string value);
    partial void OnFileURLChanged();
    partial void OnDownloadFlagChanging(bool value);
    partial void OnDownloadFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Product_File()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PFID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PFID
		{
			get
			{
				return this._PFID;
			}
			set
			{
				if ((this._PFID != value))
				{
					this.OnPFIDChanging(value);
					this.SendPropertyChanging();
					this._PFID = value;
					this.SendPropertyChanged("PFID");
					this.OnPFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileURL", DbType="NVarChar(300)")]
		public string FileURL
		{
			get
			{
				return this._FileURL;
			}
			set
			{
				if ((this._FileURL != value))
				{
					this.OnFileURLChanging(value);
					this.SendPropertyChanging();
					this._FileURL = value;
					this.SendPropertyChanged("FileURL");
					this.OnFileURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadFlag", DbType="Bit NOT NULL")]
		public bool DownloadFlag
		{
			get
			{
				return this._DownloadFlag;
			}
			set
			{
				if ((this._DownloadFlag != value))
				{
					this.OnDownloadFlagChanging(value);
					this.SendPropertyChanging();
					this._DownloadFlag = value;
					this.SendPropertyChanged("DownloadFlag");
					this.OnDownloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_File", Storage="_Product", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_File.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_File.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Rule")]
	public partial class Product_Rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRID;
		
		private int _PID;
		
		private int _CRID;
		
		private int _TargetType;
		
		private int _TargetInt1;
		
		private int _TargetInt2;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Product> _Product;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRIDChanging(int value);
    partial void OnPRIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnCRIDChanging(int value);
    partial void OnCRIDChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetInt1Changing(int value);
    partial void OnTargetInt1Changed();
    partial void OnTargetInt2Changing(int value);
    partial void OnTargetInt2Changed();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Product_Rule()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRID
		{
			get
			{
				return this._PRID;
			}
			set
			{
				if ((this._PRID != value))
				{
					this.OnPRIDChanging(value);
					this.SendPropertyChanging();
					this._PRID = value;
					this.SendPropertyChanged("PRID");
					this.OnPRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRID", DbType="Int NOT NULL")]
		public int CRID
		{
			get
			{
				return this._CRID;
			}
			set
			{
				if ((this._CRID != value))
				{
					this.OnCRIDChanging(value);
					this.SendPropertyChanging();
					this._CRID = value;
					this.SendPropertyChanged("CRID");
					this.OnCRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInt1", DbType="Int NOT NULL")]
		public int TargetInt1
		{
			get
			{
				return this._TargetInt1;
			}
			set
			{
				if ((this._TargetInt1 != value))
				{
					this.OnTargetInt1Changing(value);
					this.SendPropertyChanging();
					this._TargetInt1 = value;
					this.SendPropertyChanged("TargetInt1");
					this.OnTargetInt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInt2", DbType="Int NOT NULL")]
		public int TargetInt2
		{
			get
			{
				return this._TargetInt2;
			}
			set
			{
				if ((this._TargetInt2 != value))
				{
					this.OnTargetInt2Changing(value);
					this.SendPropertyChanging();
					this._TargetInt2 = value;
					this.SendPropertyChanged("TargetInt2");
					this.OnTargetInt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Rule", Storage="_Product", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_Rule.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_Rule.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RID;
		
		private int _ParentID;
		
		private int _OID;
		
		private string _Title;
		
		private int _RoleType;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_Role_Account> _M_Role_Account;
		
		private EntitySet<M_Role_Menu> _M_Role_Menu;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRoleTypeChanging(int value);
    partial void OnRoleTypeChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Role()
		{
			this._M_Role_Account = new EntitySet<M_Role_Account>(new Action<M_Role_Account>(this.attach_M_Role_Account), new Action<M_Role_Account>(this.detach_M_Role_Account));
			this._M_Role_Menu = new EntitySet<M_Role_Menu>(new Action<M_Role_Menu>(this.attach_M_Role_Menu), new Action<M_Role_Menu>(this.detach_M_Role_Menu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Int NOT NULL")]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleType", DbType="Int NOT NULL")]
		public int RoleType
		{
			get
			{
				return this._RoleType;
			}
			set
			{
				if ((this._RoleType != value))
				{
					this.OnRoleTypeChanging(value);
					this.SendPropertyChanging();
					this._RoleType = value;
					this.SendPropertyChanged("RoleType");
					this.OnRoleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_M_Role_Account", Storage="_M_Role_Account", ThisKey="RID", OtherKey="RID")]
		public EntitySet<M_Role_Account> M_Role_Account
		{
			get
			{
				return this._M_Role_Account;
			}
			set
			{
				this._M_Role_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_M_Role_Menu", Storage="_M_Role_Menu", ThisKey="RID", OtherKey="RID")]
		public EntitySet<M_Role_Menu> M_Role_Menu
		{
			get
			{
				return this._M_Role_Menu;
			}
			set
			{
				this._M_Role_Menu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Role_Account(M_Role_Account entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_M_Role_Account(M_Role_Account entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_M_Role_Menu(M_Role_Menu entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_M_Role_Menu(M_Role_Menu entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SID;
		
		private int _SCID;
		
		private string _Title;
		
		private bool _LeadersFlag;
		
		private bool _ChildrenFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_Staff_Account> _M_Staff_Account;
		
		private EntityRef<Staff_Category> _Staff_Category;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(int value);
    partial void OnSIDChanged();
    partial void OnSCIDChanging(int value);
    partial void OnSCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLeadersFlagChanging(bool value);
    partial void OnLeadersFlagChanged();
    partial void OnChildrenFlagChanging(bool value);
    partial void OnChildrenFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Staff()
		{
			this._M_Staff_Account = new EntitySet<M_Staff_Account>(new Action<M_Staff_Account>(this.attach_M_Staff_Account), new Action<M_Staff_Account>(this.detach_M_Staff_Account));
			this._Staff_Category = default(EntityRef<Staff_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCID", DbType="Int NOT NULL")]
		public int SCID
		{
			get
			{
				return this._SCID;
			}
			set
			{
				if ((this._SCID != value))
				{
					if (this._Staff_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCIDChanging(value);
					this.SendPropertyChanging();
					this._SCID = value;
					this.SendPropertyChanged("SCID");
					this.OnSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadersFlag", DbType="Bit NOT NULL")]
		public bool LeadersFlag
		{
			get
			{
				return this._LeadersFlag;
			}
			set
			{
				if ((this._LeadersFlag != value))
				{
					this.OnLeadersFlagChanging(value);
					this.SendPropertyChanging();
					this._LeadersFlag = value;
					this.SendPropertyChanged("LeadersFlag");
					this.OnLeadersFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrenFlag", DbType="Bit NOT NULL")]
		public bool ChildrenFlag
		{
			get
			{
				return this._ChildrenFlag;
			}
			set
			{
				if ((this._ChildrenFlag != value))
				{
					this.OnChildrenFlagChanging(value);
					this.SendPropertyChanging();
					this._ChildrenFlag = value;
					this.SendPropertyChanged("ChildrenFlag");
					this.OnChildrenFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_M_Staff_Account", Storage="_M_Staff_Account", ThisKey="SID", OtherKey="SID")]
		public EntitySet<M_Staff_Account> M_Staff_Account
		{
			get
			{
				return this._M_Staff_Account;
			}
			set
			{
				this._M_Staff_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Category_Staff", Storage="_Staff_Category", ThisKey="SCID", OtherKey="SCID", IsForeignKey=true)]
		public Staff_Category Staff_Category
		{
			get
			{
				return this._Staff_Category.Entity;
			}
			set
			{
				Staff_Category previousValue = this._Staff_Category.Entity;
				if (((previousValue != value) 
							|| (this._Staff_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff_Category.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._Staff_Category.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._SCID = value.SCID;
					}
					else
					{
						this._SCID = default(int);
					}
					this.SendPropertyChanged("Staff_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Staff_Account(M_Staff_Account entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_M_Staff_Account(M_Staff_Account entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff_Category")]
	public partial class Staff_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SCID;
		
		private string _Title;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<Staff> _Staff;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSCIDChanging(int value);
    partial void OnSCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Staff_Category()
		{
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SCID
		{
			get
			{
				return this._SCID;
			}
			set
			{
				if ((this._SCID != value))
				{
					this.OnSCIDChanging(value);
					this.SendPropertyChanging();
					this._SCID = value;
					this.SendPropertyChanged("SCID");
					this.OnSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Category_Staff", Storage="_Staff", ThisKey="SCID", OtherKey="SCID")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Staff_Category = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Staff_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TID;
		
		private int _ACID;
		
		private string _Title;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Teacher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Token_Check")]
	public partial class Token_Check : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCID;
		
		private string _Title;
		
		private string _Note;
		
		private System.DateTime _S_DateTime;
		
		private System.DateTime _E_DateTime;
		
		private bool _NoEndFlag;
		
		private string _CheckCode;
		
		private string _JWT;
		
		private string _CheckType;
		
		private string _Doman;
		
		private string _LoginBack;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCIDChanging(int value);
    partial void OnTCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnS_DateTimeChanging(System.DateTime value);
    partial void OnS_DateTimeChanged();
    partial void OnE_DateTimeChanging(System.DateTime value);
    partial void OnE_DateTimeChanged();
    partial void OnNoEndFlagChanging(bool value);
    partial void OnNoEndFlagChanged();
    partial void OnCheckCodeChanging(string value);
    partial void OnCheckCodeChanged();
    partial void OnJWTChanging(string value);
    partial void OnJWTChanged();
    partial void OnCheckTypeChanging(string value);
    partial void OnCheckTypeChanged();
    partial void OnDomanChanging(string value);
    partial void OnDomanChanged();
    partial void OnLoginBackChanging(string value);
    partial void OnLoginBackChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Token_Check()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TCID
		{
			get
			{
				return this._TCID;
			}
			set
			{
				if ((this._TCID != value))
				{
					this.OnTCIDChanging(value);
					this.SendPropertyChanging();
					this._TCID = value;
					this.SendPropertyChanged("TCID");
					this.OnTCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime S_DateTime
		{
			get
			{
				return this._S_DateTime;
			}
			set
			{
				if ((this._S_DateTime != value))
				{
					this.OnS_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._S_DateTime = value;
					this.SendPropertyChanged("S_DateTime");
					this.OnS_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime E_DateTime
		{
			get
			{
				return this._E_DateTime;
			}
			set
			{
				if ((this._E_DateTime != value))
				{
					this.OnE_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._E_DateTime = value;
					this.SendPropertyChanged("E_DateTime");
					this.OnE_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoEndFlag", DbType="Bit NOT NULL")]
		public bool NoEndFlag
		{
			get
			{
				return this._NoEndFlag;
			}
			set
			{
				if ((this._NoEndFlag != value))
				{
					this.OnNoEndFlagChanging(value);
					this.SendPropertyChanging();
					this._NoEndFlag = value;
					this.SendPropertyChanged("NoEndFlag");
					this.OnNoEndFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckCode", DbType="VarChar(500)")]
		public string CheckCode
		{
			get
			{
				return this._CheckCode;
			}
			set
			{
				if ((this._CheckCode != value))
				{
					this.OnCheckCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckCode = value;
					this.SendPropertyChanged("CheckCode");
					this.OnCheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWT", DbType="VarChar(500)")]
		public string JWT
		{
			get
			{
				return this._JWT;
			}
			set
			{
				if ((this._JWT != value))
				{
					this.OnJWTChanging(value);
					this.SendPropertyChanging();
					this._JWT = value;
					this.SendPropertyChanged("JWT");
					this.OnJWTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="VarChar(100)")]
		public string CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doman", DbType="VarChar(500)")]
		public string Doman
		{
			get
			{
				return this._Doman;
			}
			set
			{
				if ((this._Doman != value))
				{
					this.OnDomanChanging(value);
					this.SendPropertyChanging();
					this._Doman = value;
					this.SendPropertyChanged("Doman");
					this.OnDomanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginBack", DbType="VarChar(500)")]
		public string LoginBack
		{
			get
			{
				return this._LoginBack;
			}
			set
			{
				if ((this._LoginBack != value))
				{
					this.OnLoginBackChanging(value);
					this.SendPropertyChanging();
					this._LoginBack = value;
					this.SendPropertyChanged("LoginBack");
					this.OnLoginBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_OI_Coupon")]
	public partial class M_OI_Coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _CHID;
		
		private int _OIID;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
		private EntityRef<Coupon_Header> _Coupon_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnCHIDChanging(int value);
    partial void OnCHIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    #endregion
		
		public M_OI_Coupon()
		{
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			this._Coupon_Header = default(EntityRef<Coupon_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHID", DbType="Int NOT NULL")]
		public int CHID
		{
			get
			{
				return this._CHID;
			}
			set
			{
				if ((this._CHID != value))
				{
					if (this._Coupon_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCHIDChanging(value);
					this.SendPropertyChanging();
					this._CHID = value;
					this.SendPropertyChanged("CHID");
					this.OnCHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OI_Coupon", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.M_OI_Coupon.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.M_OI_Coupon.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_Header_M_OI_Coupon", Storage="_Coupon_Header", ThisKey="CHID", OtherKey="CHID", IsForeignKey=true)]
		public Coupon_Header Coupon_Header
		{
			get
			{
				return this._Coupon_Header.Entity;
			}
			set
			{
				Coupon_Header previousValue = this._Coupon_Header.Entity;
				if (((previousValue != value) 
							|| (this._Coupon_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coupon_Header.Entity = null;
						previousValue.M_OI_Coupon.Remove(this);
					}
					this._Coupon_Header.Entity = value;
					if ((value != null))
					{
						value.M_OI_Coupon.Add(this);
						this._CHID = value.CHID;
					}
					else
					{
						this._CHID = default(int);
					}
					this.SendPropertyChanged("Coupon_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupon_Rule")]
	public partial class Coupon_Rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CRID;
		
		private int _CHID;
		
		private int _SortNo;
		
		private string _Code;
		
		private int _Price_Type;
		
		private int _Price_Cut;
		
		private int _Target_Type;
		
		private int _Target_ID;
		
		private EntitySet<Coupon_Account> _Coupon_Account;
		
		private EntityRef<Coupon_Header> _Coupon_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCRIDChanging(int value);
    partial void OnCRIDChanged();
    partial void OnCHIDChanging(int value);
    partial void OnCHIDChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPrice_TypeChanging(int value);
    partial void OnPrice_TypeChanged();
    partial void OnPrice_CutChanging(int value);
    partial void OnPrice_CutChanged();
    partial void OnTarget_TypeChanging(int value);
    partial void OnTarget_TypeChanged();
    partial void OnTarget_IDChanging(int value);
    partial void OnTarget_IDChanged();
    #endregion
		
		public Coupon_Rule()
		{
			this._Coupon_Account = new EntitySet<Coupon_Account>(new Action<Coupon_Account>(this.attach_Coupon_Account), new Action<Coupon_Account>(this.detach_Coupon_Account));
			this._Coupon_Header = default(EntityRef<Coupon_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CRID
		{
			get
			{
				return this._CRID;
			}
			set
			{
				if ((this._CRID != value))
				{
					this.OnCRIDChanging(value);
					this.SendPropertyChanging();
					this._CRID = value;
					this.SendPropertyChanged("CRID");
					this.OnCRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHID", DbType="Int NOT NULL")]
		public int CHID
		{
			get
			{
				return this._CHID;
			}
			set
			{
				if ((this._CHID != value))
				{
					if (this._Coupon_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCHIDChanging(value);
					this.SendPropertyChanging();
					this._CHID = value;
					this.SendPropertyChanged("CHID");
					this.OnCHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Type", DbType="Int NOT NULL")]
		public int Price_Type
		{
			get
			{
				return this._Price_Type;
			}
			set
			{
				if ((this._Price_Type != value))
				{
					this.OnPrice_TypeChanging(value);
					this.SendPropertyChanging();
					this._Price_Type = value;
					this.SendPropertyChanged("Price_Type");
					this.OnPrice_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Cut", DbType="Int NOT NULL")]
		public int Price_Cut
		{
			get
			{
				return this._Price_Cut;
			}
			set
			{
				if ((this._Price_Cut != value))
				{
					this.OnPrice_CutChanging(value);
					this.SendPropertyChanging();
					this._Price_Cut = value;
					this.SendPropertyChanged("Price_Cut");
					this.OnPrice_CutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target_Type", DbType="Int NOT NULL")]
		public int Target_Type
		{
			get
			{
				return this._Target_Type;
			}
			set
			{
				if ((this._Target_Type != value))
				{
					this.OnTarget_TypeChanging(value);
					this.SendPropertyChanging();
					this._Target_Type = value;
					this.SendPropertyChanged("Target_Type");
					this.OnTarget_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target_ID", DbType="Int NOT NULL")]
		public int Target_ID
		{
			get
			{
				return this._Target_ID;
			}
			set
			{
				if ((this._Target_ID != value))
				{
					this.OnTarget_IDChanging(value);
					this.SendPropertyChanging();
					this._Target_ID = value;
					this.SendPropertyChanged("Target_ID");
					this.OnTarget_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_Rule_Coupon_Account", Storage="_Coupon_Account", ThisKey="CRID", OtherKey="CRID")]
		public EntitySet<Coupon_Account> Coupon_Account
		{
			get
			{
				return this._Coupon_Account;
			}
			set
			{
				this._Coupon_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_Header_Coupon_Rule", Storage="_Coupon_Header", ThisKey="CHID", OtherKey="CHID", IsForeignKey=true)]
		public Coupon_Header Coupon_Header
		{
			get
			{
				return this._Coupon_Header.Entity;
			}
			set
			{
				Coupon_Header previousValue = this._Coupon_Header.Entity;
				if (((previousValue != value) 
							|| (this._Coupon_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coupon_Header.Entity = null;
						previousValue.Coupon_Rule.Remove(this);
					}
					this._Coupon_Header.Entity = value;
					if ((value != null))
					{
						value.Coupon_Rule.Add(this);
						this._CHID = value.CHID;
					}
					else
					{
						this._CHID = default(int);
					}
					this.SendPropertyChanged("Coupon_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Coupon_Account(Coupon_Account entity)
		{
			this.SendPropertyChanging();
			entity.Coupon_Rule = this;
		}
		
		private void detach_Coupon_Account(Coupon_Account entity)
		{
			this.SendPropertyChanging();
			entity.Coupon_Rule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupon_Header")]
	public partial class Coupon_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CHID;
		
		private int _CID;
		
		private int _PID;
		
		private string _Title;
		
		private string _Code;
		
		private System.DateTime _SDateTime;
		
		private System.DateTime _EDateTime;
		
		private int _Life_Cut;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntitySet<M_OI_Coupon> _M_OI_Coupon;
		
		private EntitySet<Coupon_Rule> _Coupon_Rool;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCHIDChanging(int value);
    partial void OnCHIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSDateTimeChanging(System.DateTime value);
    partial void OnSDateTimeChanged();
    partial void OnEDateTimeChanging(System.DateTime value);
    partial void OnEDateTimeChanged();
    partial void OnLife_CutChanging(int value);
    partial void OnLife_CutChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Coupon_Header()
		{
			this._M_OI_Coupon = new EntitySet<M_OI_Coupon>(new Action<M_OI_Coupon>(this.attach_M_OI_Coupon), new Action<M_OI_Coupon>(this.detach_M_OI_Coupon));
			this._Coupon_Rool = new EntitySet<Coupon_Rule>(new Action<Coupon_Rule>(this.attach_Coupon_Rool), new Action<Coupon_Rule>(this.detach_Coupon_Rool));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CHID
		{
			get
			{
				return this._CHID;
			}
			set
			{
				if ((this._CHID != value))
				{
					this.OnCHIDChanging(value);
					this.SendPropertyChanging();
					this._CHID = value;
					this.SendPropertyChanged("CHID");
					this.OnCHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime SDateTime
		{
			get
			{
				return this._SDateTime;
			}
			set
			{
				if ((this._SDateTime != value))
				{
					this.OnSDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SDateTime = value;
					this.SendPropertyChanged("SDateTime");
					this.OnSDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EDateTime
		{
			get
			{
				return this._EDateTime;
			}
			set
			{
				if ((this._EDateTime != value))
				{
					this.OnEDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EDateTime = value;
					this.SendPropertyChanged("EDateTime");
					this.OnEDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Life_Cut", DbType="Int NOT NULL")]
		public int Life_Cut
		{
			get
			{
				return this._Life_Cut;
			}
			set
			{
				if ((this._Life_Cut != value))
				{
					this.OnLife_CutChanging(value);
					this.SendPropertyChanging();
					this._Life_Cut = value;
					this.SendPropertyChanged("Life_Cut");
					this.OnLife_CutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_Header_M_OI_Coupon", Storage="_M_OI_Coupon", ThisKey="CHID", OtherKey="CHID")]
		public EntitySet<M_OI_Coupon> M_OI_Coupon
		{
			get
			{
				return this._M_OI_Coupon;
			}
			set
			{
				this._M_OI_Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_Header_Coupon_Rule", Storage="_Coupon_Rool", ThisKey="CHID", OtherKey="CHID")]
		public EntitySet<Coupon_Rule> Coupon_Rule
		{
			get
			{
				return this._Coupon_Rool;
			}
			set
			{
				this._Coupon_Rool.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_OI_Coupon(M_OI_Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Coupon_Header = this;
		}
		
		private void detach_M_OI_Coupon(M_OI_Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Coupon_Header = null;
		}
		
		private void attach_Coupon_Rool(Coupon_Rule entity)
		{
			this.SendPropertyChanging();
			entity.Coupon_Header = this;
		}
		
		private void detach_Coupon_Rool(Coupon_Rule entity)
		{
			this.SendPropertyChanging();
			entity.Coupon_Header = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Staff_Account")]
	public partial class M_Staff_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _OIID;
		
		private int _SID;
		
		private int _ACID;
		
		private bool _LeaderFlag;
		
		private bool _SubLeaderFlag;
		
		private System.DateTime _JoinDate;
		
		private System.DateTime _LeaveDate;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
		private EntityRef<Staff> _Staff;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnSIDChanging(int value);
    partial void OnSIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnLeaderFlagChanging(bool value);
    partial void OnLeaderFlagChanged();
    partial void OnSubLeaderFlagChanging(bool value);
    partial void OnSubLeaderFlagChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_Staff_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL")]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderFlag", DbType="Bit NOT NULL")]
		public bool LeaderFlag
		{
			get
			{
				return this._LeaderFlag;
			}
			set
			{
				if ((this._LeaderFlag != value))
				{
					this.OnLeaderFlagChanging(value);
					this.SendPropertyChanging();
					this._LeaderFlag = value;
					this.SendPropertyChanged("LeaderFlag");
					this.OnLeaderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubLeaderFlag", DbType="Bit NOT NULL")]
		public bool SubLeaderFlag
		{
			get
			{
				return this._SubLeaderFlag;
			}
			set
			{
				if ((this._SubLeaderFlag != value))
				{
					this.OnSubLeaderFlagChanging(value);
					this.SendPropertyChanging();
					this._SubLeaderFlag = value;
					this.SendPropertyChanged("SubLeaderFlag");
					this.OnSubLeaderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_Staff_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_Staff_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_Staff_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_Staff_Account", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.M_Staff_Account.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.M_Staff_Account.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_M_Staff_Account", Storage="_Staff", ThisKey="SID", OtherKey="SID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.M_Staff_Account.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.M_Staff_Account.Add(this);
						this._SID = value.SID;
					}
					else
					{
						this._SID = default(int);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account_Performance")]
	public partial class Account_Performance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APID;
		
		private int _ACID;
		
		private int _PerformanceType;
		
		private string _Performance;
		
		private int _SortNo;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPIDChanging(int value);
    partial void OnAPIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnPerformanceTypeChanging(int value);
    partial void OnPerformanceTypeChanged();
    partial void OnPerformanceChanging(string value);
    partial void OnPerformanceChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    #endregion
		
		public Account_Performance()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APID
		{
			get
			{
				return this._APID;
			}
			set
			{
				if ((this._APID != value))
				{
					this.OnAPIDChanging(value);
					this.SendPropertyChanging();
					this._APID = value;
					this.SendPropertyChanged("APID");
					this.OnAPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformanceType", DbType="Int NOT NULL")]
		public int PerformanceType
		{
			get
			{
				return this._PerformanceType;
			}
			set
			{
				if ((this._PerformanceType != value))
				{
					this.OnPerformanceTypeChanging(value);
					this.SendPropertyChanging();
					this._PerformanceType = value;
					this.SendPropertyChanged("PerformanceType");
					this.OnPerformanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NChar(10)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this.OnPerformanceChanging(value);
					this.SendPropertyChanging();
					this._Performance = value;
					this.SendPropertyChanged("Performance");
					this.OnPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Performance", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Account_Performance.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Account_Performance.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account_Spiritual")]
	public partial class Account_Spiritual : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ASID;
		
		private int _ACID;
		
		private bool _QTFlag;
		
		private int _QTCt;
		
		private System.DateTime _QTDate;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private EntityRef<Account> _Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnASIDChanging(int value);
    partial void OnASIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnQTFlagChanging(bool value);
    partial void OnQTFlagChanged();
    partial void OnQTCtChanging(int value);
    partial void OnQTCtChanged();
    partial void OnQTDateChanging(System.DateTime value);
    partial void OnQTDateChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    #endregion
		
		public Account_Spiritual()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ASID
		{
			get
			{
				return this._ASID;
			}
			set
			{
				if ((this._ASID != value))
				{
					this.OnASIDChanging(value);
					this.SendPropertyChanging();
					this._ASID = value;
					this.SendPropertyChanged("ASID");
					this.OnASIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTFlag", DbType="Bit NOT NULL")]
		public bool QTFlag
		{
			get
			{
				return this._QTFlag;
			}
			set
			{
				if ((this._QTFlag != value))
				{
					this.OnQTFlagChanging(value);
					this.SendPropertyChanging();
					this._QTFlag = value;
					this.SendPropertyChanged("QTFlag");
					this.OnQTFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTCt", DbType="Int NOT NULL")]
		public int QTCt
		{
			get
			{
				return this._QTCt;
			}
			set
			{
				if ((this._QTCt != value))
				{
					this.OnQTCtChanging(value);
					this.SendPropertyChanging();
					this._QTCt = value;
					this.SendPropertyChanged("QTCt");
					this.OnQTCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTDate", DbType="DateTime NOT NULL")]
		public System.DateTime QTDate
		{
			get
			{
				return this._QTDate;
			}
			set
			{
				if ((this._QTDate != value))
				{
					this.OnQTDateChanging(value);
					this.SendPropertyChanging();
					this._QTDate = value;
					this.SendPropertyChanged("QTDate");
					this.OnQTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account_Spiritual", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Account_Spiritual.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Account_Spiritual.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log_BusinessType_Account")]
	public partial class Log_BusinessType_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LAID;
		
		private int _LHID;
		
		private int _ACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Log_BusinessType_Header> _Log_BusinessType_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLAIDChanging(int value);
    partial void OnLAIDChanged();
    partial void OnLHIDChanging(int value);
    partial void OnLHIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    #endregion
		
		public Log_BusinessType_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._Log_BusinessType_Header = default(EntityRef<Log_BusinessType_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LAID
		{
			get
			{
				return this._LAID;
			}
			set
			{
				if ((this._LAID != value))
				{
					this.OnLAIDChanging(value);
					this.SendPropertyChanging();
					this._LAID = value;
					this.SendPropertyChanged("LAID");
					this.OnLAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LHID", DbType="Int NOT NULL")]
		public int LHID
		{
			get
			{
				return this._LHID;
			}
			set
			{
				if ((this._LHID != value))
				{
					if (this._Log_BusinessType_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLHIDChanging(value);
					this.SendPropertyChanging();
					this._LHID = value;
					this.SendPropertyChanged("LHID");
					this.OnLHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Log_BusinessType_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Log_BusinessType_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Log_BusinessType_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Log_BusinessType_Header_Log_BusinessType_Account", Storage="_Log_BusinessType_Header", ThisKey="LHID", OtherKey="LHID", IsForeignKey=true)]
		public Log_BusinessType_Header Log_BusinessType_Header
		{
			get
			{
				return this._Log_BusinessType_Header.Entity;
			}
			set
			{
				Log_BusinessType_Header previousValue = this._Log_BusinessType_Header.Entity;
				if (((previousValue != value) 
							|| (this._Log_BusinessType_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Log_BusinessType_Header.Entity = null;
						previousValue.Log_BusinessType_Account.Remove(this);
					}
					this._Log_BusinessType_Header.Entity = value;
					if ((value != null))
					{
						value.Log_BusinessType_Account.Add(this);
						this._LHID = value.LHID;
					}
					else
					{
						this._LHID = default(int);
					}
					this.SendPropertyChanged("Log_BusinessType_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log_BusinessType_Header")]
	public partial class Log_BusinessType_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LHID;
		
		private int _OIID;
		
		private bool _StartFalg;
		
		private System.DateTime _CreDate;
		
		private int _CreACID;
		
		private EntitySet<Log_BusinessType_Account> _Log_BusinessType_Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLHIDChanging(int value);
    partial void OnLHIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnStartFalgChanging(bool value);
    partial void OnStartFalgChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreACIDChanging(int value);
    partial void OnCreACIDChanged();
    #endregion
		
		public Log_BusinessType_Header()
		{
			this._Log_BusinessType_Account = new EntitySet<Log_BusinessType_Account>(new Action<Log_BusinessType_Account>(this.attach_Log_BusinessType_Account), new Action<Log_BusinessType_Account>(this.detach_Log_BusinessType_Account));
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LHID
		{
			get
			{
				return this._LHID;
			}
			set
			{
				if ((this._LHID != value))
				{
					this.OnLHIDChanging(value);
					this.SendPropertyChanging();
					this._LHID = value;
					this.SendPropertyChanged("LHID");
					this.OnLHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartFalg", DbType="Bit NOT NULL")]
		public bool StartFalg
		{
			get
			{
				return this._StartFalg;
			}
			set
			{
				if ((this._StartFalg != value))
				{
					this.OnStartFalgChanging(value);
					this.SendPropertyChanging();
					this._StartFalg = value;
					this.SendPropertyChanged("StartFalg");
					this.OnStartFalgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreACID", DbType="Int NOT NULL")]
		public int CreACID
		{
			get
			{
				return this._CreACID;
			}
			set
			{
				if ((this._CreACID != value))
				{
					this.OnCreACIDChanging(value);
					this.SendPropertyChanging();
					this._CreACID = value;
					this.SendPropertyChanged("CreACID");
					this.OnCreACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Log_BusinessType_Header_Log_BusinessType_Account", Storage="_Log_BusinessType_Account", ThisKey="LHID", OtherKey="LHID")]
		public EntitySet<Log_BusinessType_Account> Log_BusinessType_Account
		{
			get
			{
				return this._Log_BusinessType_Account;
			}
			set
			{
				this._Log_BusinessType_Account.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Log_BusinessType_Header", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.Log_BusinessType_Header.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.Log_BusinessType_Header.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Log_BusinessType_Account(Log_BusinessType_Account entity)
		{
			this.SendPropertyChanging();
			entity.Log_BusinessType_Header = this;
		}
		
		private void detach_Log_BusinessType_Account(Log_BusinessType_Account entity)
		{
			this.SendPropertyChanging();
			entity.Log_BusinessType_Header = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_OI_Account")]
	public partial class M_OI_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _OIID;
		
		private int _ACID;
		
		private System.DateTime _JoinDate;
		
		private int _JoinUID;
		
		private System.DateTime _LeaveDate;
		
		private int _LeaveUID;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnJoinUIDChanging(int value);
    partial void OnJoinUIDChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    partial void OnLeaveUIDChanging(int value);
    partial void OnLeaveUIDChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public M_OI_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinUID", DbType="Int NOT NULL")]
		public int JoinUID
		{
			get
			{
				return this._JoinUID;
			}
			set
			{
				if ((this._JoinUID != value))
				{
					this.OnJoinUIDChanging(value);
					this.SendPropertyChanging();
					this._JoinUID = value;
					this.SendPropertyChanged("JoinUID");
					this.OnJoinUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveUID", DbType="Int NOT NULL")]
		public int LeaveUID
		{
			get
			{
				return this._LeaveUID;
			}
			set
			{
				if ((this._LeaveUID != value))
				{
					this.OnLeaveUIDChanging(value);
					this.SendPropertyChanging();
					this._LeaveUID = value;
					this.SendPropertyChanged("LeaveUID");
					this.OnLeaveUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_OI_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_OI_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_OI_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_M_OI_Account", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.M_OI_Account.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.M_OI_Account.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log_OrganizeInfo_ACID")]
	public partial class Log_OrganizeInfo_ACID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LOIAID;
		
		private int _OIID;
		
		private int _ACID;
		
		private System.DateTime _JoinDate;
		
		private System.DateTime _LeaveDate;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<OrganizeInfo> _OrganizeInfo;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOIAIDChanging(int value);
    partial void OnLOIAIDChanged();
    partial void OnOIIDChanging(int value);
    partial void OnOIIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    #endregion
		
		public Log_OrganizeInfo_ACID()
		{
			this._Account = default(EntityRef<Account>);
			this._OrganizeInfo = default(EntityRef<OrganizeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOIAID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LOIAID
		{
			get
			{
				return this._LOIAID;
			}
			set
			{
				if ((this._LOIAID != value))
				{
					this.OnLOIAIDChanging(value);
					this.SendPropertyChanging();
					this._LOIAID = value;
					this.SendPropertyChanged("LOIAID");
					this.OnLOIAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					if (this._OrganizeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIIDChanging(value);
					this.SendPropertyChanging();
					this._OIID = value;
					this.SendPropertyChanged("OIID");
					this.OnOIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Log_OrganizeInfo_ACID", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Log_OrganizeInfo_ACID.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Log_OrganizeInfo_ACID.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizeInfo_Log_OrganizeInfo_ACID", Storage="_OrganizeInfo", ThisKey="OIID", OtherKey="OIID", IsForeignKey=true)]
		public OrganizeInfo OrganizeInfo
		{
			get
			{
				return this._OrganizeInfo.Entity;
			}
			set
			{
				OrganizeInfo previousValue = this._OrganizeInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrganizeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizeInfo.Entity = null;
						previousValue.Log_OrganizeInfo_ACID.Remove(this);
					}
					this._OrganizeInfo.Entity = value;
					if ((value != null))
					{
						value.Log_OrganizeInfo_ACID.Add(this);
						this._OIID = value.OIID;
					}
					else
					{
						this._OIID = default(int);
					}
					this.SendPropertyChanged("OrganizeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupon_Account")]
	public partial class Coupon_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAID;
		
		private int _CRID;
		
		private int _ACID;
		
		private int _OHID;
		
		private int _OPID;
		
		private System.DateTime _UsedDate;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private int _SaveACID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Coupon_Rule> _Coupon_Rule;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAIDChanging(int value);
    partial void OnCAIDChanged();
    partial void OnCRIDChanging(int value);
    partial void OnCRIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnOHIDChanging(int value);
    partial void OnOHIDChanged();
    partial void OnOPIDChanging(int value);
    partial void OnOPIDChanged();
    partial void OnUsedDateChanging(System.DateTime value);
    partial void OnUsedDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnSaveACIDChanging(int value);
    partial void OnSaveACIDChanged();
    #endregion
		
		public Coupon_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._Coupon_Rule = default(EntityRef<Coupon_Rule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CAID
		{
			get
			{
				return this._CAID;
			}
			set
			{
				if ((this._CAID != value))
				{
					this.OnCAIDChanging(value);
					this.SendPropertyChanging();
					this._CAID = value;
					this.SendPropertyChanged("CAID");
					this.OnCAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRID", DbType="Int NOT NULL")]
		public int CRID
		{
			get
			{
				return this._CRID;
			}
			set
			{
				if ((this._CRID != value))
				{
					if (this._Coupon_Rule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRIDChanging(value);
					this.SendPropertyChanging();
					this._CRID = value;
					this.SendPropertyChanged("CRID");
					this.OnCRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OHID", DbType="Int NOT NULL")]
		public int OHID
		{
			get
			{
				return this._OHID;
			}
			set
			{
				if ((this._OHID != value))
				{
					this.OnOHIDChanging(value);
					this.SendPropertyChanging();
					this._OHID = value;
					this.SendPropertyChanged("OHID");
					this.OnOHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPID", DbType="Int NOT NULL")]
		public int OPID
		{
			get
			{
				return this._OPID;
			}
			set
			{
				if ((this._OPID != value))
				{
					this.OnOPIDChanging(value);
					this.SendPropertyChanging();
					this._OPID = value;
					this.SendPropertyChanged("OPID");
					this.OnOPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UsedDate
		{
			get
			{
				return this._UsedDate;
			}
			set
			{
				if ((this._UsedDate != value))
				{
					this.OnUsedDateChanging(value);
					this.SendPropertyChanging();
					this._UsedDate = value;
					this.SendPropertyChanged("UsedDate");
					this.OnUsedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveACID", DbType="Int NOT NULL")]
		public int SaveACID
		{
			get
			{
				return this._SaveACID;
			}
			set
			{
				if ((this._SaveACID != value))
				{
					this.OnSaveACIDChanging(value);
					this.SendPropertyChanging();
					this._SaveACID = value;
					this.SendPropertyChanged("SaveACID");
					this.OnSaveACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Coupon_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Coupon_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Coupon_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_Rule_Coupon_Account", Storage="_Coupon_Rule", ThisKey="CRID", OtherKey="CRID", IsForeignKey=true)]
		public Coupon_Rule Coupon_Rule
		{
			get
			{
				return this._Coupon_Rule.Entity;
			}
			set
			{
				Coupon_Rule previousValue = this._Coupon_Rule.Entity;
				if (((previousValue != value) 
							|| (this._Coupon_Rule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coupon_Rule.Entity = null;
						previousValue.Coupon_Account.Remove(this);
					}
					this._Coupon_Rule.Entity = value;
					if ((value != null))
					{
						value.Coupon_Account.Add(this);
						this._CRID = value.CRID;
					}
					else
					{
						this._CRID = default(int);
					}
					this.SendPropertyChanged("Coupon_Rule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message_Target")]
	public partial class Message_Target : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MTID;
		
		private int _MHID;
		
		private int _TargetType;
		
		private int _TargetID1;
		
		private int _TargetID2;
		
		private int _TargetID3;
		
		private EntityRef<Message_Header> _Message_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMTIDChanging(int value);
    partial void OnMTIDChanged();
    partial void OnMHIDChanging(int value);
    partial void OnMHIDChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetID1Changing(int value);
    partial void OnTargetID1Changed();
    partial void OnTargetID2Changing(int value);
    partial void OnTargetID2Changed();
    partial void OnTargetID3Changing(int value);
    partial void OnTargetID3Changed();
    #endregion
		
		public Message_Target()
		{
			this._Message_Header = default(EntityRef<Message_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MTID
		{
			get
			{
				return this._MTID;
			}
			set
			{
				if ((this._MTID != value))
				{
					this.OnMTIDChanging(value);
					this.SendPropertyChanging();
					this._MTID = value;
					this.SendPropertyChanged("MTID");
					this.OnMTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHID", DbType="Int NOT NULL")]
		public int MHID
		{
			get
			{
				return this._MHID;
			}
			set
			{
				if ((this._MHID != value))
				{
					if (this._Message_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMHIDChanging(value);
					this.SendPropertyChanging();
					this._MHID = value;
					this.SendPropertyChanged("MHID");
					this.OnMHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID1", DbType="Int NOT NULL")]
		public int TargetID1
		{
			get
			{
				return this._TargetID1;
			}
			set
			{
				if ((this._TargetID1 != value))
				{
					this.OnTargetID1Changing(value);
					this.SendPropertyChanging();
					this._TargetID1 = value;
					this.SendPropertyChanged("TargetID1");
					this.OnTargetID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID2", DbType="Int NOT NULL")]
		public int TargetID2
		{
			get
			{
				return this._TargetID2;
			}
			set
			{
				if ((this._TargetID2 != value))
				{
					this.OnTargetID2Changing(value);
					this.SendPropertyChanging();
					this._TargetID2 = value;
					this.SendPropertyChanged("TargetID2");
					this.OnTargetID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID3", DbType="Int NOT NULL")]
		public int TargetID3
		{
			get
			{
				return this._TargetID3;
			}
			set
			{
				if ((this._TargetID3 != value))
				{
					this.OnTargetID3Changing(value);
					this.SendPropertyChanging();
					this._TargetID3 = value;
					this.SendPropertyChanged("TargetID3");
					this.OnTargetID3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Header_Message_Target", Storage="_Message_Header", ThisKey="MHID", OtherKey="MHID", IsForeignKey=true)]
		public Message_Header Message_Header
		{
			get
			{
				return this._Message_Header.Entity;
			}
			set
			{
				Message_Header previousValue = this._Message_Header.Entity;
				if (((previousValue != value) 
							|| (this._Message_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message_Header.Entity = null;
						previousValue.Message_Target.Remove(this);
					}
					this._Message_Header.Entity = value;
					if ((value != null))
					{
						value.Message_Target.Add(this);
						this._MHID = value.MHID;
					}
					else
					{
						this._MHID = default(int);
					}
					this.SendPropertyChanged("Message_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_MH_Account")]
	public partial class M_MH_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _MHID;
		
		private int _MTID;
		
		private int _ACID;
		
		private System.DateTime _SendDateTime;
		
		private System.DateTime _ReadDateTime;
		
		private bool _ReadFlag;
		
		private bool _DeleteFlag;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Message_Header> _Message_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnMHIDChanging(int value);
    partial void OnMHIDChanged();
    partial void OnMTIDChanging(int value);
    partial void OnMTIDChanged();
    partial void OnACIDChanging(int value);
    partial void OnACIDChanged();
    partial void OnSendDateTimeChanging(System.DateTime value);
    partial void OnSendDateTimeChanged();
    partial void OnReadDateTimeChanging(System.DateTime value);
    partial void OnReadDateTimeChanged();
    partial void OnReadFlagChanging(bool value);
    partial void OnReadFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public M_MH_Account()
		{
			this._Account = default(EntityRef<Account>);
			this._Message_Header = default(EntityRef<Message_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHID", DbType="Int NOT NULL")]
		public int MHID
		{
			get
			{
				return this._MHID;
			}
			set
			{
				if ((this._MHID != value))
				{
					if (this._Message_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMHIDChanging(value);
					this.SendPropertyChanging();
					this._MHID = value;
					this.SendPropertyChanged("MHID");
					this.OnMHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTID", DbType="Int NOT NULL")]
		public int MTID
		{
			get
			{
				return this._MTID;
			}
			set
			{
				if ((this._MTID != value))
				{
					this.OnMTIDChanging(value);
					this.SendPropertyChanging();
					this._MTID = value;
					this.SendPropertyChanged("MTID");
					this.OnMTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACIDChanging(value);
					this.SendPropertyChanging();
					this._ACID = value;
					this.SendPropertyChanged("ACID");
					this.OnACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime SendDateTime
		{
			get
			{
				return this._SendDateTime;
			}
			set
			{
				if ((this._SendDateTime != value))
				{
					this.OnSendDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SendDateTime = value;
					this.SendPropertyChanged("SendDateTime");
					this.OnSendDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ReadDateTime
		{
			get
			{
				return this._ReadDateTime;
			}
			set
			{
				if ((this._ReadDateTime != value))
				{
					this.OnReadDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadDateTime = value;
					this.SendPropertyChanged("ReadDateTime");
					this.OnReadDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadFlag", DbType="Bit NOT NULL")]
		public bool ReadFlag
		{
			get
			{
				return this._ReadFlag;
			}
			set
			{
				if ((this._ReadFlag != value))
				{
					this.OnReadFlagChanging(value);
					this.SendPropertyChanging();
					this._ReadFlag = value;
					this.SendPropertyChanged("ReadFlag");
					this.OnReadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_M_MH_Account", Storage="_Account", ThisKey="ACID", OtherKey="ACID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.M_MH_Account.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.M_MH_Account.Add(this);
						this._ACID = value.ACID;
					}
					else
					{
						this._ACID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Header_M_MH_Account", Storage="_Message_Header", ThisKey="MHID", OtherKey="MHID", IsForeignKey=true)]
		public Message_Header Message_Header
		{
			get
			{
				return this._Message_Header.Entity;
			}
			set
			{
				Message_Header previousValue = this._Message_Header.Entity;
				if (((previousValue != value) 
							|| (this._Message_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message_Header.Entity = null;
						previousValue.M_MH_Account.Remove(this);
					}
					this._Message_Header.Entity = value;
					if ((value != null))
					{
						value.M_MH_Account.Add(this);
						this._MHID = value.MHID;
					}
					else
					{
						this._MHID = default(int);
					}
					this.SendPropertyChanged("Message_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message_Header")]
	public partial class Message_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MHID;
		
		private int _MHType;
		
		private string _Title;
		
		private string _Description;
		
		private string _URL;
		
		private System.DateTime _PlanSendDateTime;
		
		private bool _SendFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Message_Target> _Message_Target;
		
		private EntitySet<M_MH_Account> _M_MH_Account;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMHIDChanging(int value);
    partial void OnMHIDChanged();
    partial void OnMHTypeChanging(int value);
    partial void OnMHTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnPlanSendDateTimeChanging(System.DateTime value);
    partial void OnPlanSendDateTimeChanged();
    partial void OnSendFlagChanging(bool value);
    partial void OnSendFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Message_Header()
		{
			this._Message_Target = new EntitySet<Message_Target>(new Action<Message_Target>(this.attach_Message_Target), new Action<Message_Target>(this.detach_Message_Target));
			this._M_MH_Account = new EntitySet<M_MH_Account>(new Action<M_MH_Account>(this.attach_M_MH_Account), new Action<M_MH_Account>(this.detach_M_MH_Account));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MHID
		{
			get
			{
				return this._MHID;
			}
			set
			{
				if ((this._MHID != value))
				{
					this.OnMHIDChanging(value);
					this.SendPropertyChanging();
					this._MHID = value;
					this.SendPropertyChanged("MHID");
					this.OnMHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHType", DbType="Int NOT NULL")]
		public int MHType
		{
			get
			{
				return this._MHType;
			}
			set
			{
				if ((this._MHType != value))
				{
					this.OnMHTypeChanging(value);
					this.SendPropertyChanging();
					this._MHType = value;
					this.SendPropertyChanged("MHType");
					this.OnMHTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(200)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanSendDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime PlanSendDateTime
		{
			get
			{
				return this._PlanSendDateTime;
			}
			set
			{
				if ((this._PlanSendDateTime != value))
				{
					this.OnPlanSendDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PlanSendDateTime = value;
					this.SendPropertyChanged("PlanSendDateTime");
					this.OnPlanSendDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendFlag", DbType="Bit NOT NULL")]
		public bool SendFlag
		{
			get
			{
				return this._SendFlag;
			}
			set
			{
				if ((this._SendFlag != value))
				{
					this.OnSendFlagChanging(value);
					this.SendPropertyChanging();
					this._SendFlag = value;
					this.SendPropertyChanged("SendFlag");
					this.OnSendFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Header_Message_Target", Storage="_Message_Target", ThisKey="MHID", OtherKey="MHID")]
		public EntitySet<Message_Target> Message_Target
		{
			get
			{
				return this._Message_Target;
			}
			set
			{
				this._Message_Target.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Header_M_MH_Account", Storage="_M_MH_Account", ThisKey="MHID", OtherKey="MHID")]
		public EntitySet<M_MH_Account> M_MH_Account
		{
			get
			{
				return this._M_MH_Account;
			}
			set
			{
				this._M_MH_Account.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Message_Target(Message_Target entity)
		{
			this.SendPropertyChanging();
			entity.Message_Header = this;
		}
		
		private void detach_Message_Target(Message_Target entity)
		{
			this.SendPropertyChanging();
			entity.Message_Header = null;
		}
		
		private void attach_M_MH_Account(M_MH_Account entity)
		{
			this.SendPropertyChanging();
			entity.Message_Header = this;
		}
		
		private void detach_M_MH_Account(M_MH_Account entity)
		{
			this.SendPropertyChanging();
			entity.Message_Header = null;
		}
	}
	
	public partial class sp_GetOI2ListResult
	{
		
		private System.Nullable<int> _OIID;
		
		public sp_GetOI2ListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int")]
		public System.Nullable<int> OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this._OIID = value;
				}
			}
		}
	}
	
	public partial class sp_GetOI2_ACListResult
	{
		
		private int _ACID;
		
		private string _Name_First;
		
		private string _Name_Last;
		
		private int _OIID;
		
		private string _Title;
		
		private int _OID;
		
		public sp_GetOI2_ACListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACID", DbType="Int NOT NULL")]
		public int ACID
		{
			get
			{
				return this._ACID;
			}
			set
			{
				if ((this._ACID != value))
				{
					this._ACID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_First", DbType="NVarChar(50)")]
		public string Name_First
		{
			get
			{
				return this._Name_First;
			}
			set
			{
				if ((this._Name_First != value))
				{
					this._Name_First = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Last", DbType="NVarChar(50)")]
		public string Name_Last
		{
			get
			{
				return this._Name_Last;
			}
			set
			{
				if ((this._Name_Last != value))
				{
					this._Name_Last = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIID", DbType="Int NOT NULL")]
		public int OIID
		{
			get
			{
				return this._OIID;
			}
			set
			{
				if ((this._OIID != value))
				{
					this._OIID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Int NOT NULL")]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this._OID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
